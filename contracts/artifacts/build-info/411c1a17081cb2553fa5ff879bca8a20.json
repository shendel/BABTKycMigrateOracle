{
	"id": "411c1a17081cb2553fa5ff879bca8a20",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/BinanceBABT/contracts/SBT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/ISBT721.sol\";\nimport \"./interfaces/IERC721Metadata.sol\";\nimport \"./utils/Context.sol\";\nimport \"./utils/Counters.sol\";\nimport \"./utils/EnumerableMap.sol\";\nimport \"./utils/Strings.sol\";\nimport \"./utils/Initializable.sol\";\n\nimport \"./erc/ERC165.sol\";\nimport \"./access/AccessControl.sol\";\n\n/**\n * An experiment in Soul Bound Tokens (SBT's) following Vitalik's\n * co-authored whitepaper at:\n * https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763\n *\n * I propose for a rename to Non-Transferable Tokens NTT's\n */\ncontract SBT is AccessControl, ISBT721, IERC721Metadata {\n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using EnumerableMap for EnumerableMap.AddressToUintMap;\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\n\n    // Mapping from token ID to owner address\n    EnumerableMap.UintToAddressMap private _ownerMap;\n    EnumerableMap.AddressToUintMap private _tokenMap;\n\n    // Token Id\n    Counters.Counter private _tokenId;\n\n    // Token name\n    string public name;\n\n    // Token symbol\n    string public symbol;\n\n    // Token URI\n    string private _baseTokenURI;\n\n    // Operator\n    bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\");\n\n    constructor() {\n        initialize(\"KYCToken\", \"KYCToken\", msg.sender);\n    }\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function initialize(\n        string memory name_,\n        string memory symbol_,\n        address admin_\n    ) private {\n        name = name_;\n        symbol = symbol_;\n\n        // grant DEFAULT_ADMIN_ROLE to contract creator\n        _grantRole(DEFAULT_ADMIN_ROLE, admin_);\n        _grantRole(OPERATOR_ROLE, admin_);\n    }\n\n    function attestId(address to, uint256 tokenId) external returns (uint256) {\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can attest the SBT\"\n        );\n        require(to != address(0), \"Address is empty\");\n        require(!_tokenMap.contains(to), \"SBT already exists\");\n\n        _tokenMap.set(to, tokenId);\n        _ownerMap.set(tokenId, to);\n\n        emit Attest(to, tokenId);\n        emit Transfer(address(0), to, tokenId);\n\n        return tokenId;\n    }\n\n    function attest(address to) external returns (uint256) {\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can attest the SBT\"\n        );\n        require(to != address(0), \"Address is empty\");\n        require(!_tokenMap.contains(to), \"SBT already exists\");\n\n        _tokenId.increment();\n        uint256 tokenId = _tokenId.current();\n\n        _tokenMap.set(to, tokenId);\n        _ownerMap.set(tokenId, to);\n\n        emit Attest(to, tokenId);\n        emit Transfer(address(0), to, tokenId);\n\n        return tokenId;\n    }\n\n    function batchAttest(address[] calldata addrs) external {\n        uint256 addrLength = addrs.length;\n\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can attest the SBT\"\n        );\n        require(addrLength <= 100, \"The max length of addresses is 100\");\n\n        for (uint8 i = 0; i < addrLength; i++) {\n            address to = addrs[i];\n\n            if (to == address(0) || _tokenMap.contains(to)) {\n                continue;\n            }\n\n            _tokenId.increment();\n            uint256 tokenId = _tokenId.current();\n\n            _tokenMap.set(to, tokenId);\n            _ownerMap.set(tokenId, to);\n\n            emit Attest(to, tokenId);\n            emit Transfer(address(0), to, tokenId);\n        }\n    }\n\n    function revoke(address from) external {\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can revoke the SBT\"\n        );\n        require(from != address(0), \"Address is empty\");\n        require(_tokenMap.contains(from), \"The account does not have any SBT\");\n\n        uint256 tokenId = _tokenMap.get(from);\n\n        _tokenMap.remove(from);\n        _ownerMap.remove(tokenId);\n\n        emit Revoke(from, tokenId);\n        emit Transfer(from, address(0), tokenId);\n    }\n\n    function batchRevoke(address[] calldata addrs) external {\n        uint256 addrLength = addrs.length;\n\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can revoke the SBT\"\n        );\n        require(addrLength <= 100, \"The max length of addresses is 100\");\n\n        for (uint8 i = 0; i < addrLength; i++) {\n            address from = addrs[i];\n\n            if (from == address(0) || !_tokenMap.contains(from)) {\n                continue;\n            }\n\n            uint256 tokenId = _tokenMap.get(from);\n\n            _tokenMap.remove(from);\n            _ownerMap.remove(tokenId);\n\n            emit Revoke(from, tokenId);\n            emit Transfer(from, address(0), tokenId);\n        }\n    }\n\n    function burn() external {\n        address sender = _msgSender();\n\n        require(\n            _tokenMap.contains(sender),\n            \"The account does not have any SBT\"\n        );\n\n        uint256 tokenId = _tokenMap.get(sender);\n\n        _tokenMap.remove(sender);\n        _ownerMap.remove(tokenId);\n\n        emit Burn(sender, tokenId);\n        emit Transfer(sender, address(0), tokenId);\n    }\n\n    /**\n     * @dev Update _baseTokenURI\n     */\n    function setBaseTokenURI(string calldata uri) public {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"Only the account with DEFAULT_ADMIN_ROLE can set the base token URI\"\n        );\n\n        _baseTokenURI = uri;\n    }\n\n    function balanceOf(address owner) external view returns (uint256) {\n        (bool success, ) = _tokenMap.tryGet(owner);\n        return success ? 1 : 0;\n    }\n\n    function tokenIdOf(address from) external view returns (uint256) {\n        return _tokenMap.get(from, \"The wallet has not attested any SBT\");\n    }\n\n    function ownerOf(uint256 tokenId) external view returns (address) {\n        return _ownerMap.get(tokenId, \"Invalid tokenId\");\n    }\n\n    function totalSupply() external view returns (uint256) {\n        return _tokenMap.length();\n    }\n\n    function isOperator(address account) external view returns (bool) {\n        return hasRole(OPERATOR_ROLE, account);\n    }\n\n    function isAdmin(address account) external view returns (bool) {\n        return hasRole(DEFAULT_ADMIN_ROLE, account);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\n        return\n            bytes(_baseTokenURI).length > 0\n                ? string(abi.encodePacked(_baseTokenURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../erc/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/erc/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"./Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/EnumerableMap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableMap.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        bytes32 value\n    ) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\");\n        return value;\n    }\n\n    /**\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\n     */\n    function get(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), errorMessage);\n        return value;\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToUintMap storage map,\n        uint256 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToUintMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key), errorMessage));\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToAddressMap storage map,\n        uint256 key,\n        address value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     *\n     * _Available since v3.4._\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToAddressMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        AddressToUintMap storage map,\n        address key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        AddressToUintMap storage map,\n        address key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, key, errorMessage));\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ISBT721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is ISBT721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/ISBT721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ISBT721 {\n    /**\n     * @dev This emits when a new token is created and bound to an account by\n     * any mechanism.\n     * Note: For a reliable `to` parameter, retrieve the transaction's\n     * authenticated `to` field.\n     */\n    event Attest(address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev This emits when an existing SBT is revoked from an account and\n     * destroyed by any mechanism.\n     * Note: For a reliable `from` parameter, retrieve the transaction's\n     * authenticated `from` field.\n     */\n    event Revoke(address indexed from, uint256 indexed tokenId);\n\n    /**\n     * @dev This emits when an existing SBT is burned by an account\n     */\n    event Burn(address indexed from, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Mints SBT\n     *\n     * Requirements:\n     *\n     * - `to` must be valid.\n     * - `to` must not exist.\n     *\n     * Emits a {Attest} event.\n     * Emits a {Transfer} event.\n     * @return The tokenId of the minted SBT\n     */\n    function attest(address to) external returns (uint256);\n\n    /**\n     * @dev Revokes SBT\n     *\n     * Requirements:\n     *\n     * - `from` must exist.\n     *\n     * Emits a {Revoke} event.\n     * Emits a {Transfer} event.\n     */\n    function revoke(address from) external;\n\n    /**\n     * @notice At any time, an SBT receiver must be able to\n     *  disassociate themselves from an SBT publicly through calling this\n     *  function.\n     *\n     * Emits a {Burn} event.\n     * Emits a {Transfer} event.\n     */\n    function burn() external;\n\n    /**\n     * @notice Count all SBTs assigned to an owner\n     * @dev SBTs assigned to the zero address is considered invalid, and this\n     * function throws for queries about the zero address.\n     * @param owner An address for whom to query the balance\n     * @return The number of SBTs owned by `owner`, possibly zero\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @param from The address of the SBT owner\n     * @return The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\n     */\n    function tokenIdOf(address from) external view returns (uint256);\n\n    /**\n     * @notice Find the address bound to a SBT\n     * @dev SBTs assigned to zero address are considered invalid, and queries\n     *  about them do throw.\n     * @param tokenId The identifier for an SBT\n     * @return The address of the owner bound to the SBT\n     */\n    function ownerOf(uint256 tokenId) external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"source/BinanceBABT/contracts/SBT.sol": {
				"SBT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OPERATOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "attestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addrs",
									"type": "address[]"
								}
							],
							"name": "batchAttest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addrs",
									"type": "address[]"
								}
							],
							"name": "batchRevoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "setBaseTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "tokenIdOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"attest(address)": {
								"details": "Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.",
								"returns": {
									"_0": "The tokenId of the minted SBT"
								}
							},
							"balanceOf(address)": {
								"details": "SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of SBTs owned by `owner`, possibly zero"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"ownerOf(uint256)": {
								"details": "SBTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"tokenId": "The identifier for an SBT"
								},
								"returns": {
									"_0": "The address of the owner bound to the SBT"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revoke(address)": {
								"details": "Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setBaseTokenURI(string)": {
								"details": "Update _baseTokenURI"
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"tokenIdOf(address)": {
								"params": {
									"from": "The address of the SBT owner"
								},
								"returns": {
									"_0": "The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
								}
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"stateVariables": {
							"name": {
								"details": "Returns the token collection name."
							},
							"symbol": {
								"details": "Returns the token collection symbol."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/SBT.sol\":628:7283  contract SBT is AccessControl, ISBT721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1325:1402  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1349:1395  initialize(\"KYCToken\", \"KYCToken\", msg.sender) */\n  tag_4\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x25aca1aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x25aca1aa37b5b2b7)\n  dup2\n  mstore\n  pop\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1384:1394  msg.sender */\n  caller\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1349:1359  initialize */\n  shl(0x20, tag_5)\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1349:1395  initialize(\"KYCToken\", \"KYCToken\", msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"source/BinanceBABT/contracts/SBT.sol\":628:7283  contract SBT is AccessControl, ISBT721, IERC721Metadata {... */\n  jump(tag_33)\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1520:1841  function initialize(... */\ntag_5:\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1648:1660  name = name_ */\n  dup3\n  mload\n  tag_8\n  swap1\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1648:1652  name */\n  0x08\n  swap1\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1648:1660  name = name_ */\n  0x20\n  dup7\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1670:1686  symbol = symbol_ */\n  dup2\n  mload\n  tag_10\n  swap1\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1670:1676  symbol */\n  0x09\n  swap1\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1670:1686  symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1753:1791  _grantRole(DEFAULT_ADMIN_ROLE, admin_) */\n  tag_11\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2068:2072  0x00 */\n  0x00\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1784:1790  admin_ */\n  dup3\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1753:1763  _grantRole */\n  tag_12\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1753:1791  _grantRole(DEFAULT_ADMIN_ROLE, admin_) */\n  jump\t// in\ntag_11:\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1801:1834  _grantRole(OPERATOR_ROLE, admin_) */\n  tag_13\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1292:1318  keccak256(\"OPERATOR_ROLE\") */\n  0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1827:1833  admin_ */\n  dup3\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1801:1811  _grantRole */\n  tag_12\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1801:1834  _grantRole(OPERATOR_ROLE, admin_) */\n  jump\t// in\ntag_13:\n    /* \"source/BinanceBABT/contracts/SBT.sol\":1520:1841  function initialize(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7457:7690  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_12:\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n  0x00\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7535:7684  if (!hasRole(role, account)) {... */\n  tag_17\n  jumpi\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7584  _roles */\n  0x00\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7590  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7607  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7614  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7610:7614  true */\n  0x01\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7614  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7660:7672  _msgSender() */\n  tag_18\n    /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"source/BinanceBABT/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7660:7672  _msgSender() */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7651:7658  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7645:7649  role */\n  dup4\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7535:7684  if (!hasRole(role, account)) {... */\ntag_17:\n    /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7457:7690  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"source/BinanceBABT/contracts/SBT.sol\":628:7283  contract SBT is AccessControl, ISBT721, IERC721Metadata {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_25\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_28)\ntag_25:\n  dup3\n  0x1f\n  lt\n  tag_26\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_28)\ntag_26:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_28\n  jumpi\n  swap2\n  dup3\n  add\ntag_27:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_27)\ntag_28:\n  pop\n  tag_29\n  swap3\n  swap2\n  pop\n  tag_30\n  jump\t// in\ntag_29:\n  pop\n  swap1\n  jump\t// out\ntag_30:\ntag_31:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_29\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_31)\n    /* \"#utility.yul\":14:394   */\ntag_23:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_35:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_36:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_33:\n    /* \"source/BinanceBABT/contracts/SBT.sol\":628:7283  contract SBT is AccessControl, ISBT721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/SBT.sol\":628:7283  contract SBT is AccessControl, ISBT721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d70f7ae\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbc8dd06a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xeb31403f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf5b541a6\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x6d70f7ae\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x74a8f103\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x773c02d4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30176e13\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x44df8e70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6c60144a\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x011002df\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4301:5057  function batchRevoke(address[] calldata addrs) external {... */\n    tag_3:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6954:7281  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1090:1104   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1083:1105   */\n      iszero\n        /* \"#utility.yul\":1065:1106   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1053:1055   */\n      0x20\n        /* \"#utility.yul\":1038:1056   */\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6954:7281  function supportsInterface(bytes4 interfaceId)... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1112:1130  string public name */\n    tag_5:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6229:6326  function totalSupply() external view returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1914:1939   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1902:1904   */\n      0x20\n        /* \"#utility.yul\":1887:1905   */\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6229:6326  function totalSupply() external view returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":1768:1945   */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4374:4503  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_7:\n      tag_44\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4448:4455  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4496  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4374:4503  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6459:6582  function isAdmin(address account) external view returns (bool) {... */\n    tag_8:\n      tag_34\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4799:4944  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_30\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5515:5770  function setBaseTokenURI(string calldata uri) public {... */\n    tag_10:\n      tag_30\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5908:6122  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_30\n      tag_68\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5063:5460  function burn() external {... */\n    tag_12:\n      tag_30\n      tag_71\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6092:6223  function ownerOf(uint256 tokenId) external view returns (address) {... */\n    tag_13:\n      tag_72\n      tag_73\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3891:3923   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3873:3924   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3861:3863   */\n      0x20\n        /* \"#utility.yul\":3846:3864   */\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6092:6223  function ownerOf(uint256 tokenId) external view returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":3727:3930   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2973:3756  function batchAttest(address[] calldata addrs) external {... */\n    tag_14:\n      tag_30\n      tag_79\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6332:6453  function isOperator(address account) external view returns (bool) {... */\n    tag_15:\n      tag_34\n      tag_82\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5776:5933  function balanceOf(address owner) external view returns (uint256) {... */\n    tag_16:\n      tag_44\n      tag_86\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3762:4295  function revoke(address from) external {... */\n    tag_17:\n      tag_30\n      tag_90\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5939:6086  function tokenIdOf(address from) external view returns (uint256) {... */\n    tag_18:\n      tag_44\n      tag_93\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_19:\n      tag_34\n      tag_97\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1157:1177  string public symbol */\n    tag_20:\n      tag_40\n      tag_101\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2023:2072  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_21:\n      tag_44\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2068:2072  0x00 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2023:2072  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1847:2375  function attestId(address to, uint256 tokenId) external returns (uint256) {... */\n    tag_22:\n      tag_44\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6648:6887  function tokenURI(uint256 tokenId) external view returns (string memory) {... */\n    tag_23:\n      tag_40\n      tag_112\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5224:5371  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_24:\n      tag_30\n      tag_116\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2381:2967  function attest(address to) external returns (uint256) {... */\n    tag_25:\n      tag_44\n      tag_119\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1252:1318  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\") */\n    tag_26:\n      tag_44\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4301:5057  function batchRevoke(address[] calldata addrs) external {... */\n    tag_33:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4388:4393  addrs */\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4432:4468  hasRole(OPERATOR_ROLE, _msgSender()) */\n      tag_126\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4432:4468  hasRole(OPERATOR_ROLE, _msgSender()) */\n    tag_126:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4411:4548  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4580:4583  100 */\n      0x64\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4566:4576  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4566:4583  addrLength <= 100 */\n      gt\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4558:4622  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_134\n      jump\t// in\n    tag_132:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4638:4645  uint8 i */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4633:5051  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_135:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4655:4665  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4651:4652  i */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4651:4665  i < addrLength */\n      0xff\n      and\n      lt\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4633:5051  for (uint8 i = 0; i < addrLength; i++) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4686:4698  address from */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4701:4706  addrs */\n      dup5\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4707:4708  i */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4701:4709  addrs[i] */\n      0xff\n      and\n      dup2\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_141:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4686:4709  address from = addrs[i] */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4728:4746  from == address(0) */\n      dup2\n      and\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4728:4775  from == address(0) || !_tokenMap.contains(from) */\n      tag_142\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4751:4775  _tokenMap.contains(from) */\n      tag_143\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4751:4760  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4770:4774  from */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4751:4769  _tokenMap.contains */\n      tag_144\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4751:4775  _tokenMap.contains(from) */\n      jump\t// in\n    tag_143:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4750:4775  !_tokenMap.contains(from) */\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4728:4775  from == address(0) || !_tokenMap.contains(from) */\n    tag_142:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4724:4818  if (from == address(0) || !_tokenMap.contains(from)) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4795:4803  continue */\n      pop\n      jump(tag_137)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4724:4818  if (from == address(0) || !_tokenMap.contains(from)) {... */\n    tag_145:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4832:4847  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4850:4869  _tokenMap.get(from) */\n      tag_146\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4850:4859  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4864:4868  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4850:4863  _tokenMap.get */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4850:4869  _tokenMap.get(from) */\n      jump\t// in\n    tag_146:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4832:4869  uint256 tokenId = _tokenMap.get(from) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4884:4906  _tokenMap.remove(from) */\n      tag_148\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4884:4893  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4901:4905  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4884:4900  _tokenMap.remove */\n      tag_149\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4884:4906  _tokenMap.remove(from) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4920:4945  _ownerMap.remove(tokenId) */\n      tag_150\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4920:4929  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4937:4944  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4920:4936  _ownerMap.remove */\n      tag_151\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4920:4945  _ownerMap.remove(tokenId) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4965:4986  Revoke(from, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4978:4985  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4965:4986  Revoke(from, tokenId) */\n      dup5\n      and\n      swap1\n      0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5005:5040  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5032:5039  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5028:5029  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5005:5040  Transfer(from, address(0), tokenId) */\n      dup6\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5028:5029  0 */\n      dup4\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5005:5040  Transfer(from, address(0), tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4672:5051  {... */\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4633:5051  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_137:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4667:4670  i++ */\n      dup1\n      tag_152\n      dup2\n      tag_153\n      jump\t// in\n    tag_152:\n      swap2\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4633:5051  for (uint8 i = 0; i < addrLength; i++) {... */\n      jump(tag_135)\n    tag_136:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4357:5057  {... */\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4301:5057  function batchRevoke(address[] calldata addrs) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6954:7281  function supportsInterface(bytes4 interfaceId)... */\n    tag_37:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7079:7083  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7118:7158  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7118:7222  interfaceId == type(IERC721).interfaceId ||... */\n      tag_155\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7174:7222  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7118:7222  interfaceId == type(IERC721).interfaceId ||... */\n    tag_155:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7118:7274  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_157\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7238:7274  super.supportsInterface(interfaceId) */\n      tag_157\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7262:7273  interfaceId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7238:7261  super.supportsInterface */\n      tag_158\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7238:7274  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_157:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":7099:7274  return... */\n      swap3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6954:7281  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1112:1130  string public name */\n    tag_41:\n      0x08\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6229:6326  function totalSupply() external view returns (uint256) {... */\n    tag_45:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6275:6282  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6301:6319  _tokenMap.length() */\n      tag_166\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6301:6310  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6301:6317  _tokenMap.length */\n      tag_167\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6301:6319  _tokenMap.length() */\n      jump\t// in\n    tag_166:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6294:6319  return _tokenMap.length() */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6229:6326  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6459:6582  function isAdmin(address account) external view returns (bool) {... */\n    tag_57:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6516:6520  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6539:6575  hasRole(DEFAULT_ADMIN_ROLE, account) */\n      tag_157\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6516:6520  bool */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6567:6574  account */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6539:6546  hasRole */\n      tag_98\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6539:6575  hasRole(DEFAULT_ADMIN_ROLE, account) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4799:4944  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4448:4455  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4496  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      tag_173\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2512:2516  role */\n      dup2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2511  _checkRole */\n      tag_174\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      jump\t// in\n    tag_173:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4912:4937  _grantRole(role, account) */\n      tag_176\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4923:4927  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4929:4936  account */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4912:4922  _grantRole */\n      tag_177\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4912:4937  _grantRole(role, account) */\n      jump\t// in\n    tag_176:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4799:4944  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5515:5770  function setBaseTokenURI(string calldata uri) public {... */\n    tag_66:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5599:5640  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_179\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2068:2072  0x00 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5599:5640  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n    tag_179:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5578:5733  require(... */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6051:6053   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5578:5733  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6033:6054   */\n      mstore\n        /* \"#utility.yul\":6090:6092   */\n      0x43\n        /* \"#utility.yul\":6070:6088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6063:6093   */\n      mstore\n        /* \"#utility.yul\":6129:6163   */\n      0x4f6e6c7920746865206163636f756e7420776974682044454641554c545f4144\n        /* \"#utility.yul\":6109:6127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6102:6164   */\n      mstore\n        /* \"#utility.yul\":6200:6234   */\n      0x4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e20\n        /* \"#utility.yul\":6180:6198   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6173:6235   */\n      mstore\n      shl(0xe8, 0x555249)\n        /* \"#utility.yul\":6251:6270   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6244:6278   */\n      mstore\n        /* \"#utility.yul\":6295:6314   */\n      0xa4\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5578:5733  require(... */\n      tag_130\n        /* \"#utility.yul\":5849:6320   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5578:5733  require(... */\n    tag_181:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5744:5763  _baseTokenURI = uri */\n      tag_176\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5744:5757  _baseTokenURI */\n      0x0a\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5760:5763  uri */\n      dup4\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5744:5763  _baseTokenURI = uri */\n      tag_185\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5908:6122  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6003:6026  account == _msgSender() */\n      dup2\n      and\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6003:6026  account == _msgSender() */\n      eq\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6527:6529   */\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6509:6530   */\n      mstore\n        /* \"#utility.yul\":6566:6568   */\n      0x2f\n        /* \"#utility.yul\":6546:6564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6539:6569   */\n      mstore\n        /* \"#utility.yul\":6605:6639   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":6585:6603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6578:6640   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":6656:6674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6649:6694   */\n      mstore\n        /* \"#utility.yul\":6711:6730   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_130\n        /* \"#utility.yul\":6325:6736   */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_188:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6089:6115  _revokeRole(role, account) */\n      tag_191\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6101:6105  role */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6107:6114  account */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6089:6100  _revokeRole */\n      tag_192\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6089:6115  _revokeRole(role, account) */\n      jump\t// in\n    tag_191:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5908:6122  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5063:5460  function burn() external {... */\n    tag_71:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5185  _tokenMap.contains(sender) */\n      tag_195\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5168  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5177  _tokenMap.contains */\n      tag_144\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5185  _tokenMap.contains(sender) */\n      jump\t// in\n    tag_195:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5138:5244  require(... */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_198\n      jump\t// in\n    tag_196:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5255:5270  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5273:5294  _tokenMap.get(sender) */\n      tag_199\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5273:5282  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5287:5293  sender */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5273:5286  _tokenMap.get */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5273:5294  _tokenMap.get(sender) */\n      jump\t// in\n    tag_199:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5255:5294  uint256 tokenId = _tokenMap.get(sender) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5305:5329  _tokenMap.remove(sender) */\n      tag_200\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5305:5314  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5322:5328  sender */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5305:5321  _tokenMap.remove */\n      tag_149\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5305:5329  _tokenMap.remove(sender) */\n      jump\t// in\n    tag_200:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5339:5364  _ownerMap.remove(tokenId) */\n      tag_201\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5339:5348  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5356:5363  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5339:5355  _ownerMap.remove */\n      tag_151\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5339:5364  _ownerMap.remove(tokenId) */\n      jump\t// in\n    tag_201:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5380:5401  Burn(sender, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5393:5400  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5380:5401  Burn(sender, tokenId) */\n      dup5\n      and\n      swap1\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5416:5453  Transfer(sender, address(0), tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5445:5452  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5441:5442  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5416:5453  Transfer(sender, address(0), tokenId) */\n      dup6\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5441:5442  0 */\n      dup4\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5416:5453  Transfer(sender, address(0), tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5088:5460  {... */\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5063:5460  function burn() external {... */\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6092:6223  function ownerOf(uint256 tokenId) external view returns (address) {... */\n    tag_75:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6149:6156  address */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6175:6216  _ownerMap.get(tokenId, \"Invalid tokenId\") */\n      tag_157\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6189:6196  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6175:6216  _ownerMap.get(tokenId, \"Invalid tokenId\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x8a, 0x125b9d985b1a59081d1bdad95b9259)\n      dup2\n      mstore\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6175:6184  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6175:6188  _ownerMap.get */\n      tag_204\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6175:6216  _ownerMap.get(tokenId, \"Invalid tokenId\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2973:3756  function batchAttest(address[] calldata addrs) external {... */\n    tag_80:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3060:3065  addrs */\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3104:3140  hasRole(OPERATOR_ROLE, _msgSender()) */\n      tag_206\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3104:3140  hasRole(OPERATOR_ROLE, _msgSender()) */\n    tag_206:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3083:3220  require(... */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_210\n      jump\t// in\n    tag_208:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3252:3255  100 */\n      0x64\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3238:3248  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3238:3255  addrLength <= 100 */\n      gt\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3230:3294  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_134\n      jump\t// in\n    tag_211:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3310:3317  uint8 i */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3305:3750  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_213:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3327:3337  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3323:3324  i */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3323:3337  i < addrLength */\n      0xff\n      and\n      lt\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3305:3750  for (uint8 i = 0; i < addrLength; i++) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3358:3368  address to */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3371:3376  addrs */\n      dup5\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3377:3378  i */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3371:3379  addrs[i] */\n      0xff\n      and\n      dup2\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_217\n      tag_140\n      jump\t// in\n    tag_217:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_218:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3358:3379  address to = addrs[i] */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3398:3414  to == address(0) */\n      dup2\n      and\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3398:3440  to == address(0) || _tokenMap.contains(to) */\n      tag_220\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3418:3440  _tokenMap.contains(to) */\n      tag_220\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3418:3427  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3437:3439  to */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3418:3436  _tokenMap.contains */\n      tag_144\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3418:3440  _tokenMap.contains(to) */\n      jump\t// in\n    tag_220:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3394:3483  if (to == address(0) || _tokenMap.contains(to)) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3460:3468  continue */\n      pop\n      jump(tag_215)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3394:3483  if (to == address(0) || _tokenMap.contains(to)) {... */\n    tag_221:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3497:3517  _tokenId.increment() */\n      tag_222\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3497:3505  _tokenId */\n      0x07\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3497:3517  _tokenId.increment() */\n    tag_222:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3531:3546  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3549:3567  _tokenId.current() */\n      tag_224\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3549:3557  _tokenId */\n      0x07\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3549:3567  _tokenId.current() */\n    tag_224:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3531:3567  uint256 tokenId = _tokenId.current() */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3582:3608  _tokenMap.set(to, tokenId) */\n      tag_226\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3582:3591  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3596:3598  to */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3531:3567  uint256 tokenId = _tokenId.current() */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3582:3595  _tokenMap.set */\n      tag_227\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3582:3608  _tokenMap.set(to, tokenId) */\n      jump\t// in\n    tag_226:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3622:3648  _ownerMap.set(tokenId, to) */\n      tag_228\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3622:3631  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3636:3643  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3645:3647  to */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3622:3635  _ownerMap.set */\n      tag_229\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3622:3648  _ownerMap.set(tokenId, to) */\n      jump\t// in\n    tag_228:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3668:3687  Attest(to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3679:3686  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3668:3687  Attest(to, tokenId) */\n      dup5\n      and\n      swap1\n      0xe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3706:3739  Transfer(address(0), to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3731:3738  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3706:3739  Transfer(address(0), to, tokenId) */\n      dup5\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3723:3724  0 */\n      0x00\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3706:3739  Transfer(address(0), to, tokenId) */\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3723:3724  0 */\n      dup3\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3706:3739  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3344:3750  {... */\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3305:3750  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_215:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3339:3342  i++ */\n      dup1\n      tag_230\n      dup2\n      tag_153\n      jump\t// in\n    tag_230:\n      swap2\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3305:3750  for (uint8 i = 0; i < addrLength; i++) {... */\n      jump(tag_213)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6332:6453  function isOperator(address account) external view returns (bool) {... */\n    tag_83:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6392:6396  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6415:6446  hasRole(OPERATOR_ROLE, account) */\n      tag_157\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6438:6445  account */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6415:6422  hasRole */\n      tag_98\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6415:6446  hasRole(OPERATOR_ROLE, account) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5776:5933  function balanceOf(address owner) external view returns (uint256) {... */\n    tag_87:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5833:5840  uint256 */\n      0x00\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5871:5894  _tokenMap.tryGet(owner) */\n      tag_234\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5871:5880  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5888:5893  owner */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5871:5887  _tokenMap.tryGet */\n      tag_235\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5871:5894  _tokenMap.tryGet(owner) */\n      jump\t// in\n    tag_234:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5852:5894  (bool success, ) = _tokenMap.tryGet(owner) */\n      pop\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5911:5918  success */\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5911:5926  success ? 1 : 0 */\n      tag_236\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5925:5926  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5911:5926  success ? 1 : 0 */\n      jump(tag_237)\n    tag_236:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5921:5922  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5911:5926  success ? 1 : 0 */\n    tag_237:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5904:5926  return success ? 1 : 0 */\n      0xff\n      and\n      swap4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5776:5933  function balanceOf(address owner) external view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3762:4295  function revoke(address from) external {... */\n    tag_91:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3832:3868  hasRole(OPERATOR_ROLE, _msgSender()) */\n      tag_239\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3832:3868  hasRole(OPERATOR_ROLE, _msgSender()) */\n    tag_239:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3811:3948  require(... */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3966:3984  from != address(0) */\n      dup2\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3958:4005  require(from != address(0), \"Address is empty\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_245\n      jump\t// in\n    tag_243:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4023:4047  _tokenMap.contains(from) */\n      tag_246\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4023:4032  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4042:4046  from */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4023:4041  _tokenMap.contains */\n      tag_144\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4023:4047  _tokenMap.contains(from) */\n      jump\t// in\n    tag_246:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4015:4085  require(_tokenMap.contains(from), \"The account does not have any SBT\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_198\n      jump\t// in\n    tag_247:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4096:4111  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4114:4133  _tokenMap.get(from) */\n      tag_249\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4114:4123  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4128:4132  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4114:4127  _tokenMap.get */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4114:4133  _tokenMap.get(from) */\n      jump\t// in\n    tag_249:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4096:4133  uint256 tokenId = _tokenMap.get(from) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4144:4166  _tokenMap.remove(from) */\n      tag_250\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4144:4153  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4161:4165  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4144:4160  _tokenMap.remove */\n      tag_149\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4144:4166  _tokenMap.remove(from) */\n      jump\t// in\n    tag_250:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4176:4201  _ownerMap.remove(tokenId) */\n      tag_251\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4176:4185  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4193:4200  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4176:4192  _ownerMap.remove */\n      tag_151\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4176:4201  _ownerMap.remove(tokenId) */\n      jump\t// in\n    tag_251:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4217:4238  Revoke(from, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4230:4237  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4217:4238  Revoke(from, tokenId) */\n      dup5\n      and\n      swap1\n      0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4253:4288  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4280:4287  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4276:4277  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4253:4288  Transfer(from, address(0), tokenId) */\n      dup6\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4276:4277  0 */\n      dup4\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4253:4288  Transfer(from, address(0), tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3801:4295  {... */\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3762:4295  function revoke(address from) external {... */\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5939:6086  function tokenIdOf(address from) external view returns (uint256) {... */\n    tag_94:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5995:6002  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6021:6079  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      tag_157\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6035:6039  from */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6021:6079  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397\n      0x23\n      swap2\n      codecopy\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6021:6030  _tokenMap */\n      0x04\n      swap2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6021:6079  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6021:6034  _tokenMap.get */\n      tag_254\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6021:6079  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_98:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1157:1177  string public symbol */\n    tag_101:\n      0x09\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1847:2375  function attestId(address to, uint256 tokenId) external returns (uint256) {... */\n    tag_109:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1912:1919  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1952:1988  hasRole(OPERATOR_ROLE, _msgSender()) */\n      tag_262\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1952:1988  hasRole(OPERATOR_ROLE, _msgSender()) */\n    tag_262:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1931:2068  require(... */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_210\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2086:2102  to != address(0) */\n      dup4\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2078:2123  require(to != address(0), \"Address is empty\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_245\n      jump\t// in\n    tag_266:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2142:2164  _tokenMap.contains(to) */\n      tag_268\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2142:2151  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2161:2163  to */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2142:2160  _tokenMap.contains */\n      tag_144\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2142:2164  _tokenMap.contains(to) */\n      jump\t// in\n    tag_268:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2141:2164  !_tokenMap.contains(to) */\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2133:2187  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2133:2187  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8095:8116   */\n      mstore\n        /* \"#utility.yul\":8152:8154   */\n      0x12\n        /* \"#utility.yul\":8132:8150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8125:8155   */\n      mstore\n      shl(0x70, 0x53425420616c726561647920657869737473)\n        /* \"#utility.yul\":8171:8189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8164:8212   */\n      mstore\n        /* \"#utility.yul\":8229:8247   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2133:2187  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      tag_130\n        /* \"#utility.yul\":7911:8253   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2133:2187  require(!_tokenMap.contains(to), \"SBT already exists\") */\n    tag_269:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2198:2224  _tokenMap.set(to, tokenId) */\n      tag_272\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2198:2207  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2212:2214  to */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2216:2223  tokenId */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2198:2211  _tokenMap.set */\n      tag_227\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2198:2224  _tokenMap.set(to, tokenId) */\n      jump\t// in\n    tag_272:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2234:2260  _ownerMap.set(tokenId, to) */\n      tag_273\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2234:2243  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2248:2255  tokenId */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2257:2259  to */\n      dup6\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2234:2247  _ownerMap.set */\n      tag_229\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2234:2260  _ownerMap.set(tokenId, to) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2276:2295  Attest(to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2287:2294  tokenId */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2276:2295  Attest(to, tokenId) */\n      dup6\n      and\n      swap1\n      0xe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2310:2343  Transfer(address(0), to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2335:2342  tokenId */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2310:2343  Transfer(address(0), to, tokenId) */\n      dup6\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2327:2328  0 */\n      0x00\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2310:2343  Transfer(address(0), to, tokenId) */\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2327:2328  0 */\n      dup3\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2310:2343  Transfer(address(0), to, tokenId) */\n      log4\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2361:2368  tokenId */\n      swap2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1847:2375  function attestId(address to, uint256 tokenId) external returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6648:6887  function tokenURI(uint256 tokenId) external view returns (string memory) {... */\n    tag_113:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6706:6719  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6780:6781  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6756:6769  _baseTokenURI */\n      0x0a\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6750:6777  bytes(_baseTokenURI).length */\n      dup1\n      sload\n      tag_275\n      swap1\n      tag_160\n      jump\t// in\n    tag_275:\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6750:6781  bytes(_baseTokenURI).length > 0 */\n      gt\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6750:6880  bytes(_baseTokenURI).length > 0... */\n      tag_276\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_157)\n    tag_276:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6824:6837  _baseTokenURI */\n      0x0a\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6839:6857  tokenId.toString() */\n      tag_278\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6839:6846  tokenId */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6839:6855  tokenId.toString */\n      tag_279\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6839:6857  tokenId.toString() */\n      jump\t// in\n    tag_278:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6807:6858  abi.encodePacked(_baseTokenURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6731:6880  return... */\n      swap3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6648:6887  function tokenURI(uint256 tokenId) external view returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5224:5371  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_117:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4448:4455  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4496  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      tag_284\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2512:2516  role */\n      dup2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2511  _checkRole */\n      tag_174\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      jump\t// in\n    tag_284:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5338:5364  _revokeRole(role, account) */\n      tag_176\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5350:5354  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5356:5363  account */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5338:5349  _revokeRole */\n      tag_192\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5338:5364  _revokeRole(role, account) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2381:2967  function attest(address to) external returns (uint256) {... */\n    tag_120:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2427:2434  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2467:2503  hasRole(OPERATOR_ROLE, _msgSender()) */\n      tag_288\n      0x00\n      dup1\n      mload\n      0x20\n      data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2467:2503  hasRole(OPERATOR_ROLE, _msgSender()) */\n    tag_288:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2446:2583  require(... */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_210\n      jump\t// in\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2601:2617  to != address(0) */\n      dup3\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2593:2638  require(to != address(0), \"Address is empty\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_245\n      jump\t// in\n    tag_292:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2657:2679  _tokenMap.contains(to) */\n      tag_294\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2657:2666  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2676:2678  to */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2657:2675  _tokenMap.contains */\n      tag_144\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2657:2679  _tokenMap.contains(to) */\n      jump\t// in\n    tag_294:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2656:2679  !_tokenMap.contains(to) */\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2648:2702  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2648:2702  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8095:8116   */\n      mstore\n        /* \"#utility.yul\":8152:8154   */\n      0x12\n        /* \"#utility.yul\":8132:8150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8125:8155   */\n      mstore\n      shl(0x70, 0x53425420616c726561647920657869737473)\n        /* \"#utility.yul\":8171:8189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8164:8212   */\n      mstore\n        /* \"#utility.yul\":8229:8247   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2648:2702  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      tag_130\n        /* \"#utility.yul\":7911:8253   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2648:2702  require(!_tokenMap.contains(to), \"SBT already exists\") */\n    tag_295:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2713:2733  _tokenId.increment() */\n      tag_297\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2713:2721  _tokenId */\n      0x07\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2713:2733  _tokenId.increment() */\n    tag_297:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2743:2758  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2761:2779  _tokenId.current() */\n      tag_298\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2761:2769  _tokenId */\n      0x07\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2761:2779  _tokenId.current() */\n    tag_298:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2743:2779  uint256 tokenId = _tokenId.current() */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2790:2816  _tokenMap.set(to, tokenId) */\n      tag_299\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2790:2799  _tokenMap */\n      0x04\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2804:2806  to */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2743:2779  uint256 tokenId = _tokenId.current() */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2790:2803  _tokenMap.set */\n      tag_227\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2790:2816  _tokenMap.set(to, tokenId) */\n      jump\t// in\n    tag_299:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2826:2852  _ownerMap.set(tokenId, to) */\n      tag_300\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2826:2835  _ownerMap */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2840:2847  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2849:2851  to */\n      dup6\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2826:2839  _ownerMap.set */\n      tag_229\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2826:2852  _ownerMap.set(tokenId, to) */\n      jump\t// in\n    tag_300:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2868:2887  Attest(to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2879:2886  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2868:2887  Attest(to, tokenId) */\n      dup6\n      and\n      swap1\n      0xe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2902:2935  Transfer(address(0), to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2927:2934  tokenId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2902:2935  Transfer(address(0), to, tokenId) */\n      dup6\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2919:2920  0 */\n      0x00\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2902:2935  Transfer(address(0), to, tokenId) */\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2919:2920  0 */\n      dup3\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2902:2935  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2953:2960  tokenId */\n      swap3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2381:2967  function attest(address to) external returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12315:12481  function contains(AddressToUintMap storage map, address key) internal view returns (bool) {... */\n    tag_144:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12399:12403  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12422:12474  contains(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12431:12434  map */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12451:12472  uint256(uint160(key)) */\n      dup5\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12422:12430  contains */\n      tag_304\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12422:12474  contains(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n    tag_303:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12415:12474  return contains(map._inner, bytes32(uint256(uint160(key)))) */\n      swap4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12315:12481  function contains(AddressToUintMap storage map, address key) internal view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13785:13953  function get(AddressToUintMap storage map, address key) internal view returns (uint256) {... */\n    tag_147:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13864:13871  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13898:13945  get(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13902:13905  map */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13922:13943  uint256(uint160(key)) */\n      dup5\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13898:13901  get */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13898:13945  get(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12079:12236  function remove(AddressToUintMap storage map, address key) internal returns (bool) {... */\n    tag_149:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12156:12160  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12179:12229  remove(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12186:12189  map */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12206:12227  uint256(uint160(key)) */\n      dup5\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12179:12185  remove */\n      tag_310\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12179:12229  remove(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8987:9126  function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {... */\n    tag_151:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9064:9068  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9087:9119  remove(map._inner, bytes32(key)) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9094:9097  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9114:9117  key */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9087:9093  remove */\n      tag_310\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9087:9119  remove(map._inner, bytes32(key)) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2602:2804  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_158:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2687:2691  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2710:2757  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2710:2797  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_157\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"source/BinanceBABT/contracts/erc/ERC165.sol\":949:989  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2761:2797  super.supportsInterface(interfaceId) */\n      tag_157\n        /* \"source/BinanceBABT/contracts/erc/ERC165.sol\":841:996  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12564:12684  function length(AddressToUintMap storage map) internal view returns (uint256) {... */\n    tag_167:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12633:12640  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12659:12677  length(map._inner) */\n      tag_157\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12666:12669  map */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12659:12665  length */\n      tag_319\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12659:12677  length(map._inner) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3330:3433  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_174:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3396:3426  _checkRole(role, _msgSender()) */\n      tag_321\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3407:3411  role */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3396:3406  _checkRole */\n      tag_323\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3396:3426  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_321:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3330:3433  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7457:7690  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_177:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7540:7562  hasRole(role, account) */\n      tag_325\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7548:7552  role */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7554:7561  account */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7540:7547  hasRole */\n      tag_98\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7540:7562  hasRole(role, account) */\n      jump\t// in\n    tag_325:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7535:7684  if (!hasRole(role, account)) {... */\n      tag_191\n      jumpi\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7584  _roles */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7590  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7607  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7614  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7610:7614  true */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7614  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7660:7672  _msgSender() */\n      tag_327\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7660:7672  _msgSender() */\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7651:7658  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7645:7649  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7457:7690  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7861:8095  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_192:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7944:7966  hasRole(role, account) */\n      tag_329\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7952:7956  role */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7958:7965  account */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7944:7951  hasRole */\n      tag_98\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7944:7966  hasRole(role, account) */\n      jump\t// in\n    tag_329:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7940:8089  if (hasRole(role, account)) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8014:8019  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:7994  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:8011  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:8019  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8038:8078  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:7994  _roles[role] */\n      dup6\n      swap2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8038:8078  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8014:8019  false */\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8038:8078  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7861:8095  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11143:11383  function get(... */\n    tag_204:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11280:11287  address */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11330:11373  get(map._inner, bytes32(key), errorMessage) */\n      tag_333\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11334:11337  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11354:11357  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11360:11372  errorMessage */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11330:11333  get */\n      tag_334\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11330:11373  get(map._inner, bytes32(key), errorMessage) */\n      jump\t// in\n    tag_333:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11322:11374  uint256(get(map._inner, bytes32(key), errorMessage)) */\n      swap5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11143:11383  function get(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11708:11920  function set(... */\n    tag_227:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11827:11831  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11850:11913  set(map._inner, bytes32(uint256(uint160(key))), bytes32(value)) */\n      tag_333\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11854:11857  map */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11874:11895  uint256(uint160(key)) */\n      dup6\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11906:11911  value */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11850:11853  set */\n      tag_339\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11850:11913  set(map._inner, bytes32(uint256(uint160(key))), bytes32(value)) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8616:8828  function set(... */\n    tag_229:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8735:8739  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8758:8821  set(map._inner, bytes32(key), bytes32(uint256(uint160(value)))) */\n      tag_333\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8762:8765  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8782:8785  key */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8796:8819  uint256(uint160(value)) */\n      dup6\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8758:8761  set */\n      tag_339\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8758:8821  set(map._inner, bytes32(key), bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13395:13633  function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {... */\n    tag_235:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13477:13481  bool */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13534:13584  tryGet(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_343\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13541:13544  map */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13561:13582  uint256(uint160(key)) */\n      dup8\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13534:13540  tryGet */\n      tag_344\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13534:13584  tryGet(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n    tag_343:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13502:13584  (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key)))) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13395:13633  function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {... */\n    tag_342:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14233:14473  function get(... */\n    tag_254:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14370:14377  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14404:14465  get(map._inner, bytes32(uint256(uint160(key))), errorMessage) */\n      tag_333\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14408:14411  map */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14428:14449  uint256(uint160(key)) */\n      dup6\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14452:14464  errorMessage */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14404:14407  get */\n      tag_334\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14404:14465  get(map._inner, bytes32(uint256(uint160(key))), errorMessage) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_279:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":665:675  value == 0 */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_348\n      jumpi\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_348:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":736:741  value */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_349:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      dup2\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_350\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      tag_351\n      dup2\n      tag_352\n      jump\t// in\n    tag_351:\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      tag_353\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup4\n      tag_354\n      jump\t// in\n    tag_353:\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_349)\n    tag_350:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_356\n      jumpi\n      tag_356\n      tag_357\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_358:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_359:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":915:925  value != 0 */\n      dup5\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_333\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      tag_361\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup4\n      tag_362\n      jump\t// in\n    tag_361:\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_363\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1009:1014  value */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_365\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_368\n      jumpi\n      tag_368\n      tag_140\n      jump\t// in\n    tag_368:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      tag_369\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup7\n      tag_354\n      jump\t// in\n    tag_369:\n      swap5\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_359)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3054:3194  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {... */\n    tag_304:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3141:3145  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3187  map._keys.contains(key) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3167  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3183:3186  key */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3182  map._keys.contains */\n      tag_372\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3187  map._keys.contains(key) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4543:4790  function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {... */\n    tag_307:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4625:4632  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4660:4676  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4660:4671  map._values */\n      0x02\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4660:4676  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4694:4704  value != 0 */\n      dup1\n      iszero\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4694:4726  value != 0 || contains(map, key) */\n      tag_375\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4708:4726  contains(map, key) */\n      tag_375\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4717:4720  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4722:4725  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4708:4716  contains */\n      tag_304\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4708:4726  contains(map, key) */\n      jump\t// in\n    tag_375:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4686:4761  require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10864:10866   */\n      0x20\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4686:4761  require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10846:10867   */\n      mstore\n        /* \"#utility.yul\":10903:10905   */\n      0x1e\n        /* \"#utility.yul\":10883:10901   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10876:10906   */\n      mstore\n        /* \"#utility.yul\":10942:10974   */\n      0x456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000\n        /* \"#utility.yul\":10922:10940   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10915:10975   */\n      mstore\n        /* \"#utility.yul\":10992:11010   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4686:4761  require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\") */\n      tag_130\n        /* \"#utility.yul\":10662:11016   */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2811:2975  function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {... */\n    tag_310:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2891:2895  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2930  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2925  map._values */\n      0x02\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2930  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2907:2930  delete map._values[key] */\n      dup2\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2947:2968  map._keys.remove(key) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2917  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2926:2929  key */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2947:2963  map._keys.remove */\n      tag_381\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2947:2968  map._keys.remove(key) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3284:3407  function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {... */\n    tag_319:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3356:3363  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3400  map._keys.length() */\n      tag_157\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3385  map */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3398  map._keys.length */\n      tag_385\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3400  map._keys.length() */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3714:4193  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_323:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3802:3824  hasRole(role, account) */\n      tag_387\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3810:3814  role */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3816:3823  account */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3802:3809  hasRole */\n      tag_98\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3802:3824  hasRole(role, account) */\n      jump\t// in\n    tag_387:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3797:4187  if (!hasRole(role, account)) {... */\n      tag_191\n      jumpi\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3985:4013  Strings.toHexString(account) */\n      tag_389\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4005:4012  account */\n      dup2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3985:4004  Strings.toHexString */\n      tag_390\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3985:4013  Strings.toHexString(account) */\n      jump\t// in\n    tag_389:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4084:4122  Strings.toHexString(uint256(role), 32) */\n      tag_391\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4112:4116  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4119:4121  32 */\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4084:4103  Strings.toHexString */\n      tag_392\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4084:4122  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_391:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3892:4144  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_393\n      swap3\n      swap2\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3840:4176  revert(... */\n      dup3\n      mstore\n      tag_130\n      swap2\n      0x04\n      add\n      tag_43\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5072:5357  function get(... */\n    tag_334:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5212:5219  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5247:5263  map._values[key] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5247:5258  map._values */\n      0x02\n      dup5\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5247:5263  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5281:5291  value != 0 */\n      dup1\n      iszero\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5281:5313  value != 0 || contains(map, key) */\n      tag_398\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5295:5313  contains(map, key) */\n      tag_398\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5304:5307  map */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5309:5312  key */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5295:5303  contains */\n      tag_304\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5295:5313  contains(map, key) */\n      jump\t// in\n    tag_398:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5315:5327  errorMessage */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5273:5328  require(value != 0 || contains(map, key), errorMessage) */\n      swap1\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_399:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5345:5350  value */\n      swap5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5072:5357  function get(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2439:2643  function set(... */\n    tag_339:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2561:2565  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2593  map._values[key] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2588  map._values */\n      0x02\n      dup5\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2593  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2601  map._values[key] = value */\n      dup3\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2618:2636  map._keys.add(key) */\n      tag_333\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2580  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2589:2592  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2618:2631  map._keys.add */\n      tag_403\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2618:2636  map._keys.add(key) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4093:4391  function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {... */\n    tag_344:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4178:4182  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4235  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4230  map._values */\n      0x02\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4235  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4178:4182  bool */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4249:4268  value == bytes32(0) */\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4245:4385  if (value == bytes32(0)) {... */\n      tag_405\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4292:4310  contains(map, key) */\n      tag_406\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4301:4304  map */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4306:4309  key */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4292:4300  contains */\n      tag_304\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4292:4310  contains(map, key) */\n      jump\t// in\n    tag_406:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4284:4323  return (contains(map, key), bytes32(0)) */\n      swap3\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4320:4321  0 */\n      0x00\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4284:4323  return (contains(map, key), bytes32(0)) */\n      tag_342\n      swap1\n      pop\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4245:4385  if (value == bytes32(0)) {... */\n    tag_405:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4362:4366  true */\n      0x01\n      swap3\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4368:4373  value */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4354:4374  return (true, value) */\n      jump(tag_342)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6319:6457  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {... */\n    tag_372:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6399:6403  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4274  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6422:6450  _contains(set._inner, value) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4154:4281  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6109:6238  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_381:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6182:6186  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6205:6231  _remove(set._inner, value) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6213:6216  set */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6225:6230  value */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6205:6212  _remove */\n      tag_413\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6205:6231  _remove(set._inner, value) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6538:6653  function length(Bytes32Set storage set) internal view returns (uint256) {... */\n    tag_385:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6601:6608  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6627:6646  _length(set._inner) */\n      tag_157\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6635:6638  set */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4444:4462  set._values.length */\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4362:4469  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2245:2394  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_390:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2303:2316  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2335:2387  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_157\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2347:2369  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":288:290  20 */\n      0x14\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_392:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1727:1740  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1752:1771  bytes memory buffer */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_420\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1788:1794  length */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1785  2 */\n      0x02\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_421\n      jump\t// in\n    tag_420:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_422\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1797:1798  2 */\n      0x02\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_366\n      jump\t// in\n    tag_422:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1774:1799  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_424\n      jumpi\n      tag_424\n      tag_357\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_425\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_425:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1752:1799  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1815  buffer */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1816:1817  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1818  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_427\n      jumpi\n      tag_427\n      tag_140\n      jump\t// in\n    tag_427:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1840  buffer */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1841:1842  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1843  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_429\n      jumpi\n      tag_429\n      tag_140\n      jump\t// in\n    tag_429:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1864:1873  uint256 i */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_433\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1880:1886  length */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1877  2 */\n      0x02\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_421\n      jump\t// in\n    tag_433:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_434\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1889:1890  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_366\n      jump\t// in\n    tag_434:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1864:1890  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_430:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1896:1897  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1892:1893  i */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1892:1897  i > 1 */\n      gt\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_431\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1943:1948  value */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1951:1954  0xf */\n      0x0f\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1943:1954  value & 0xf */\n      and\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1930:1955  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_436\n      jumpi\n      tag_436\n      tag_140\n      jump\t// in\n    tag_436:\n      byte\n      0xf8\n      shl\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1918:1924  buffer */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1925:1926  i */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1918:1927  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_438\n      jumpi\n      tag_438\n      tag_140\n      jump\t// in\n    tag_438:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1918:1955  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1979:1980  4 */\n      0x04\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1969:1980  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1899:1902  --i */\n      tag_439\n      dup2\n      tag_440\n      jump\t// in\n    tag_439:\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_430)\n    tag_431:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2008:2018  value == 0 */\n      dup4\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12328:12330   */\n      0x20\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12310:12331   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12347:12365   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12340:12370   */\n      mstore\n        /* \"#utility.yul\":12406:12440   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":12386:12404   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12379:12441   */\n      mstore\n        /* \"#utility.yul\":12458:12476   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_130\n        /* \"#utility.yul\":12126:12482   */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5818:5941  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_403:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5888:5892  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5911:5934  _add(set._inner, value) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5916:5919  set */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5928:5933  value */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5911:5915  _add */\n      tag_446\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5911:5934  _add(set._inner, value) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2685:4073  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_413:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2751:2755  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2888:2900  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2922:2937  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n      tag_449\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3291:3312  uint256 toDeleteIndex */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_450\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3328:3329  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3315:3325  valueIndex */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_362\n      jump\t// in\n    tag_450:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3363:3381  set._values.length */\n      dup6\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3291:3329  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3343:3360  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_451\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3384:3385  1 */\n      0x01\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_362\n      jump\t// in\n    tag_451:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3343:3385  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3417:3430  toDeleteIndex */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3404:3413  lastIndex */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3404:3430  lastIndex != toDeleteIndex */\n      eq\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n      tag_452\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3450:3467  bytes32 lastValue */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3470:3473  set */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3470:3481  set._values */\n      0x00\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3482:3491  lastIndex */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3470:3492  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_454\n      jumpi\n      tag_454\n      tag_140\n      jump\t// in\n    tag_454:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3450:3492  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3621:3630  lastValue */\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3595  set */\n      dup8\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3603  set._values */\n      0x00\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3604:3617  toDeleteIndex */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3618  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_457\n      jumpi\n      tag_457\n      tag_140\n      jump\t// in\n    tag_457:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3630  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3716  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3740  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n    tag_452:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup6\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3876:3879  set */\n      dup7\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup1\n      tag_460\n      jumpi\n      tag_460\n      tag_461\n      jump\t// in\n    tag_460:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3971  set */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3980  set._indexes */\n      0x01\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3981:3986  value */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3961:3987  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4009:4013  true */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4002:4013  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_157)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n    tag_449:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4051:4056  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4044:4056  return false */\n      swap2\n      pop\n      pop\n      jump(tag_157)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2113:2517  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_446:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2176:2180  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n      tag_467\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2234:2245  set._values */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2414:2432  set._values.length */\n      dup5\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2404  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2432  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2446:2457  return true */\n      jump(tag_157)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n    tag_467:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2495:2500  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2488:2500  return false */\n      jump(tag_157)\n    tag_185:\n      dup3\n      dup1\n      sload\n      tag_470\n      swap1\n      tag_160\n      jump\t// in\n    tag_470:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_472\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_475)\n    tag_472:\n      dup3\n      0x1f\n      lt\n      tag_473\n      jumpi\n      dup3\n      dup1\n      add\n      not(0xff)\n      dup3\n      calldataload\n      and\n      or\n      dup6\n      sstore\n      jump(tag_475)\n    tag_473:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_475\n      jumpi\n      swap2\n      dup3\n      add\n    tag_474:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_475\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_474)\n    tag_475:\n      pop\n      tag_476\n      swap3\n      swap2\n      pop\n      tag_477\n      jump\t// in\n    tag_476:\n      pop\n      swap1\n      jump\t// out\n    tag_477:\n    tag_478:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_476\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_478)\n        /* \"#utility.yul\":14:629   */\n    tag_32:\n        /* \"#utility.yul\":100:106   */\n      0x00\n        /* \"#utility.yul\":108:114   */\n      dup1\n        /* \"#utility.yul\":161:163   */\n      0x20\n        /* \"#utility.yul\":149:158   */\n      dup4\n        /* \"#utility.yul\":140:147   */\n      dup6\n        /* \"#utility.yul\":136:159   */\n      sub\n        /* \"#utility.yul\":132:164   */\n      slt\n        /* \"#utility.yul\":129:181   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":129:181   */\n    tag_488:\n        /* \"#utility.yul\":217:226   */\n      dup3\n        /* \"#utility.yul\":204:227   */\n      calldataload\n        /* \"#utility.yul\":246:264   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":287:289   */\n      dup1\n        /* \"#utility.yul\":279:285   */\n      dup3\n        /* \"#utility.yul\":276:290   */\n      gt\n        /* \"#utility.yul\":273:307   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":303:304   */\n      0x00\n        /* \"#utility.yul\":300:301   */\n      dup1\n        /* \"#utility.yul\":293:305   */\n      revert\n        /* \"#utility.yul\":273:307   */\n    tag_489:\n        /* \"#utility.yul\":341:347   */\n      dup2\n        /* \"#utility.yul\":330:339   */\n      dup6\n        /* \"#utility.yul\":326:348   */\n      add\n        /* \"#utility.yul\":316:348   */\n      swap2\n      pop\n        /* \"#utility.yul\":386:393   */\n      dup6\n        /* \"#utility.yul\":379:383   */\n      0x1f\n        /* \"#utility.yul\":375:377   */\n      dup4\n        /* \"#utility.yul\":371:384   */\n      add\n        /* \"#utility.yul\":367:394   */\n      slt\n        /* \"#utility.yul\":357:412   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":408:409   */\n      0x00\n        /* \"#utility.yul\":405:406   */\n      dup1\n        /* \"#utility.yul\":398:410   */\n      revert\n        /* \"#utility.yul\":357:412   */\n    tag_490:\n        /* \"#utility.yul\":448:450   */\n      dup2\n        /* \"#utility.yul\":435:451   */\n      calldataload\n        /* \"#utility.yul\":474:476   */\n      dup2\n        /* \"#utility.yul\":466:472   */\n      dup2\n        /* \"#utility.yul\":463:477   */\n      gt\n        /* \"#utility.yul\":460:494   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":490:491   */\n      0x00\n        /* \"#utility.yul\":487:488   */\n      dup1\n        /* \"#utility.yul\":480:492   */\n      revert\n        /* \"#utility.yul\":460:494   */\n    tag_491:\n        /* \"#utility.yul\":543:550   */\n      dup7\n        /* \"#utility.yul\":538:540   */\n      0x20\n        /* \"#utility.yul\":528:534   */\n      dup3\n        /* \"#utility.yul\":525:526   */\n      0x05\n        /* \"#utility.yul\":521:535   */\n      shl\n        /* \"#utility.yul\":517:519   */\n      dup6\n        /* \"#utility.yul\":513:536   */\n      add\n        /* \"#utility.yul\":509:541   */\n      add\n        /* \"#utility.yul\":506:551   */\n      gt\n        /* \"#utility.yul\":503:568   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":564:565   */\n      0x00\n        /* \"#utility.yul\":561:562   */\n      dup1\n        /* \"#utility.yul\":554:566   */\n      revert\n        /* \"#utility.yul\":503:568   */\n    tag_492:\n        /* \"#utility.yul\":595:597   */\n      0x20\n        /* \"#utility.yul\":587:598   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":617:623   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":14:629   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":634:920   */\n    tag_36:\n        /* \"#utility.yul\":692:698   */\n      0x00\n        /* \"#utility.yul\":745:747   */\n      0x20\n        /* \"#utility.yul\":733:742   */\n      dup3\n        /* \"#utility.yul\":724:731   */\n      dup5\n        /* \"#utility.yul\":720:743   */\n      sub\n        /* \"#utility.yul\":716:748   */\n      slt\n        /* \"#utility.yul\":713:765   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":758:759   */\n      dup1\n        /* \"#utility.yul\":751:763   */\n      revert\n        /* \"#utility.yul\":713:765   */\n    tag_494:\n        /* \"#utility.yul\":787:810   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":839:871   */\n      dup2\n      and\n        /* \"#utility.yul\":829:872   */\n      dup2\n      eq\n        /* \"#utility.yul\":819:890   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":886:887   */\n      0x00\n        /* \"#utility.yul\":883:884   */\n      dup1\n        /* \"#utility.yul\":876:888   */\n      revert\n        /* \"#utility.yul\":1117:1375   */\n    tag_480:\n        /* \"#utility.yul\":1189:1190   */\n      0x00\n        /* \"#utility.yul\":1199:1312   */\n    tag_498:\n        /* \"#utility.yul\":1213:1219   */\n      dup4\n        /* \"#utility.yul\":1210:1211   */\n      dup2\n        /* \"#utility.yul\":1207:1220   */\n      lt\n        /* \"#utility.yul\":1199:1312   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":1289:1300   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1283:1301   */\n      mload\n        /* \"#utility.yul\":1270:1281   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1263:1302   */\n      mstore\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1228:1238   */\n      add\n        /* \"#utility.yul\":1199:1312   */\n      jump(tag_498)\n    tag_500:\n        /* \"#utility.yul\":1330:1336   */\n      dup4\n        /* \"#utility.yul\":1327:1328   */\n      dup2\n        /* \"#utility.yul\":1324:1337   */\n      gt\n        /* \"#utility.yul\":1321:1369   */\n      iszero\n      tag_136\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1347:1363   */\n      swap2\n      add\n        /* \"#utility.yul\":1340:1367   */\n      mstore\n        /* \"#utility.yul\":1117:1375   */\n      jump\t// out\n        /* \"#utility.yul\":1380:1763   */\n    tag_43:\n        /* \"#utility.yul\":1529:1531   */\n      0x20\n        /* \"#utility.yul\":1518:1527   */\n      dup2\n        /* \"#utility.yul\":1511:1532   */\n      mstore\n        /* \"#utility.yul\":1492:1496   */\n      0x00\n        /* \"#utility.yul\":1561:1567   */\n      dup3\n        /* \"#utility.yul\":1555:1568   */\n      mload\n        /* \"#utility.yul\":1604:1610   */\n      dup1\n        /* \"#utility.yul\":1599:1601   */\n      0x20\n        /* \"#utility.yul\":1588:1597   */\n      dup5\n        /* \"#utility.yul\":1584:1602   */\n      add\n        /* \"#utility.yul\":1577:1611   */\n      mstore\n        /* \"#utility.yul\":1620:1686   */\n      tag_503\n        /* \"#utility.yul\":1679:1685   */\n      dup2\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1663:1672   */\n      dup6\n        /* \"#utility.yul\":1659:1677   */\n      add\n        /* \"#utility.yul\":1654:1656   */\n      0x20\n        /* \"#utility.yul\":1646:1652   */\n      dup8\n        /* \"#utility.yul\":1642:1657   */\n      add\n        /* \"#utility.yul\":1620:1686   */\n      tag_480\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":1747:1749   */\n      0x1f\n        /* \"#utility.yul\":1726:1741   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1722:1751   */\n      and\n        /* \"#utility.yul\":1707:1752   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1754:1756   */\n      0x40\n        /* \"#utility.yul\":1703:1757   */\n      add\n      swap3\n        /* \"#utility.yul\":1380:1763   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1950:2130   */\n    tag_50:\n        /* \"#utility.yul\":2009:2015   */\n      0x00\n        /* \"#utility.yul\":2062:2064   */\n      0x20\n        /* \"#utility.yul\":2050:2059   */\n      dup3\n        /* \"#utility.yul\":2041:2048   */\n      dup5\n        /* \"#utility.yul\":2037:2060   */\n      sub\n        /* \"#utility.yul\":2033:2065   */\n      slt\n        /* \"#utility.yul\":2030:2082   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":2078:2079   */\n      0x00\n        /* \"#utility.yul\":2075:2076   */\n      dup1\n        /* \"#utility.yul\":2068:2080   */\n      revert\n        /* \"#utility.yul\":2030:2082   */\n    tag_506:\n      pop\n        /* \"#utility.yul\":2101:2124   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1950:2130   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2490   */\n    tag_481:\n        /* \"#utility.yul\":2385:2405   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2434:2465   */\n      dup2\n      and\n        /* \"#utility.yul\":2424:2466   */\n      dup2\n      eq\n        /* \"#utility.yul\":2414:2484   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":2480:2481   */\n      0x00\n        /* \"#utility.yul\":2477:2478   */\n      dup1\n        /* \"#utility.yul\":2470:2482   */\n      revert\n        /* \"#utility.yul\":2414:2484   */\n    tag_509:\n        /* \"#utility.yul\":2317:2490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2495:2681   */\n    tag_56:\n        /* \"#utility.yul\":2554:2560   */\n      0x00\n        /* \"#utility.yul\":2607:2609   */\n      0x20\n        /* \"#utility.yul\":2595:2604   */\n      dup3\n        /* \"#utility.yul\":2586:2593   */\n      dup5\n        /* \"#utility.yul\":2582:2605   */\n      sub\n        /* \"#utility.yul\":2578:2610   */\n      slt\n        /* \"#utility.yul\":2575:2627   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2575:2627   */\n    tag_511:\n        /* \"#utility.yul\":2646:2675   */\n      tag_303\n        /* \"#utility.yul\":2665:2674   */\n      dup3\n        /* \"#utility.yul\":2646:2675   */\n      tag_481\n      jump\t// in\n        /* \"#utility.yul\":2686:2940   */\n    tag_61:\n        /* \"#utility.yul\":2754:2760   */\n      0x00\n        /* \"#utility.yul\":2762:2768   */\n      dup1\n        /* \"#utility.yul\":2815:2817   */\n      0x40\n        /* \"#utility.yul\":2803:2812   */\n      dup4\n        /* \"#utility.yul\":2794:2801   */\n      dup6\n        /* \"#utility.yul\":2790:2813   */\n      sub\n        /* \"#utility.yul\":2786:2818   */\n      slt\n        /* \"#utility.yul\":2783:2835   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":2831:2832   */\n      0x00\n        /* \"#utility.yul\":2828:2829   */\n      dup1\n        /* \"#utility.yul\":2821:2833   */\n      revert\n        /* \"#utility.yul\":2783:2835   */\n    tag_514:\n        /* \"#utility.yul\":2867:2876   */\n      dup3\n        /* \"#utility.yul\":2854:2877   */\n      calldataload\n        /* \"#utility.yul\":2844:2877   */\n      swap2\n      pop\n        /* \"#utility.yul\":2896:2934   */\n      tag_515\n        /* \"#utility.yul\":2930:2932   */\n      0x20\n        /* \"#utility.yul\":2919:2928   */\n      dup5\n        /* \"#utility.yul\":2915:2933   */\n      add\n        /* \"#utility.yul\":2896:2934   */\n      tag_481\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":2886:2934   */\n      swap1\n      pop\n        /* \"#utility.yul\":2686:2940   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2945:3537   */\n    tag_65:\n        /* \"#utility.yul\":3016:3022   */\n      0x00\n        /* \"#utility.yul\":3024:3030   */\n      dup1\n        /* \"#utility.yul\":3077:3079   */\n      0x20\n        /* \"#utility.yul\":3065:3074   */\n      dup4\n        /* \"#utility.yul\":3056:3063   */\n      dup6\n        /* \"#utility.yul\":3052:3075   */\n      sub\n        /* \"#utility.yul\":3048:3080   */\n      slt\n        /* \"#utility.yul\":3045:3097   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3090:3091   */\n      dup1\n        /* \"#utility.yul\":3083:3095   */\n      revert\n        /* \"#utility.yul\":3045:3097   */\n    tag_517:\n        /* \"#utility.yul\":3133:3142   */\n      dup3\n        /* \"#utility.yul\":3120:3143   */\n      calldataload\n        /* \"#utility.yul\":3162:3180   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3203:3205   */\n      dup1\n        /* \"#utility.yul\":3195:3201   */\n      dup3\n        /* \"#utility.yul\":3192:3206   */\n      gt\n        /* \"#utility.yul\":3189:3223   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3216:3217   */\n      dup1\n        /* \"#utility.yul\":3209:3221   */\n      revert\n        /* \"#utility.yul\":3189:3223   */\n    tag_518:\n        /* \"#utility.yul\":3257:3263   */\n      dup2\n        /* \"#utility.yul\":3246:3255   */\n      dup6\n        /* \"#utility.yul\":3242:3264   */\n      add\n        /* \"#utility.yul\":3232:3264   */\n      swap2\n      pop\n        /* \"#utility.yul\":3302:3309   */\n      dup6\n        /* \"#utility.yul\":3295:3299   */\n      0x1f\n        /* \"#utility.yul\":3291:3293   */\n      dup4\n        /* \"#utility.yul\":3287:3300   */\n      add\n        /* \"#utility.yul\":3283:3310   */\n      slt\n        /* \"#utility.yul\":3273:3328   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":3324:3325   */\n      0x00\n        /* \"#utility.yul\":3321:3322   */\n      dup1\n        /* \"#utility.yul\":3314:3326   */\n      revert\n        /* \"#utility.yul\":3273:3328   */\n    tag_519:\n        /* \"#utility.yul\":3364:3366   */\n      dup2\n        /* \"#utility.yul\":3351:3367   */\n      calldataload\n        /* \"#utility.yul\":3390:3392   */\n      dup2\n        /* \"#utility.yul\":3382:3388   */\n      dup2\n        /* \"#utility.yul\":3379:3393   */\n      gt\n        /* \"#utility.yul\":3376:3410   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3403:3404   */\n      dup1\n        /* \"#utility.yul\":3396:3408   */\n      revert\n        /* \"#utility.yul\":3376:3410   */\n    tag_520:\n        /* \"#utility.yul\":3451:3458   */\n      dup7\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3437:3443   */\n      dup3\n        /* \"#utility.yul\":3433:3435   */\n      dup6\n        /* \"#utility.yul\":3429:3444   */\n      add\n        /* \"#utility.yul\":3425:3449   */\n      add\n        /* \"#utility.yul\":3422:3459   */\n      gt\n        /* \"#utility.yul\":3419:3476   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":3472:3473   */\n      0x00\n        /* \"#utility.yul\":3469:3470   */\n      dup1\n        /* \"#utility.yul\":3462:3474   */\n      revert\n        /* \"#utility.yul\":3935:4189   */\n    tag_108:\n        /* \"#utility.yul\":4003:4009   */\n      0x00\n        /* \"#utility.yul\":4011:4017   */\n      dup1\n        /* \"#utility.yul\":4064:4066   */\n      0x40\n        /* \"#utility.yul\":4052:4061   */\n      dup4\n        /* \"#utility.yul\":4043:4050   */\n      dup6\n        /* \"#utility.yul\":4039:4062   */\n      sub\n        /* \"#utility.yul\":4035:4067   */\n      slt\n        /* \"#utility.yul\":4032:4084   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":4080:4081   */\n      0x00\n        /* \"#utility.yul\":4077:4078   */\n      dup1\n        /* \"#utility.yul\":4070:4082   */\n      revert\n        /* \"#utility.yul\":4032:4084   */\n    tag_526:\n        /* \"#utility.yul\":4103:4132   */\n      tag_527\n        /* \"#utility.yul\":4122:4131   */\n      dup4\n        /* \"#utility.yul\":4103:4132   */\n      tag_481\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":4093:4132   */\n      swap5\n        /* \"#utility.yul\":4179:4181   */\n      0x20\n        /* \"#utility.yul\":4164:4182   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4151:4183   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3935:4189   */\n      jump\t// out\n        /* \"#utility.yul\":4194:4612   */\n    tag_131:\n        /* \"#utility.yul\":4396:4398   */\n      0x20\n        /* \"#utility.yul\":4378:4399   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4435:4437   */\n      0x36\n        /* \"#utility.yul\":4415:4433   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4408:4438   */\n      mstore\n        /* \"#utility.yul\":4474:4508   */\n      0x4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52\n        /* \"#utility.yul\":4469:4471   */\n      0x40\n        /* \"#utility.yul\":4454:4472   */\n      dup3\n      add\n        /* \"#utility.yul\":4447:4509   */\n      mstore\n      shl(0x52, 0x13d3114818d85b881c995d9bdad9481d1a194814d095)\n        /* \"#utility.yul\":4540:4542   */\n      0x60\n        /* \"#utility.yul\":4525:4543   */\n      dup3\n      add\n        /* \"#utility.yul\":4518:4570   */\n      mstore\n        /* \"#utility.yul\":4602:4605   */\n      0x80\n        /* \"#utility.yul\":4587:4606   */\n      add\n      swap1\n        /* \"#utility.yul\":4194:4612   */\n      jump\t// out\n        /* \"#utility.yul\":4617:5015   */\n    tag_134:\n        /* \"#utility.yul\":4819:4821   */\n      0x20\n        /* \"#utility.yul\":4801:4822   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4858:4860   */\n      0x22\n        /* \"#utility.yul\":4838:4856   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4831:4861   */\n      mstore\n        /* \"#utility.yul\":4897:4931   */\n      0x546865206d6178206c656e677468206f66206164647265737365732069732031\n        /* \"#utility.yul\":4892:4894   */\n      0x40\n        /* \"#utility.yul\":4877:4895   */\n      dup3\n      add\n        /* \"#utility.yul\":4870:4932   */\n      mstore\n      shl(0xf4, 0x0303)\n        /* \"#utility.yul\":4963:4965   */\n      0x60\n        /* \"#utility.yul\":4948:4966   */\n      dup3\n      add\n        /* \"#utility.yul\":4941:4973   */\n      mstore\n        /* \"#utility.yul\":5005:5008   */\n      0x80\n        /* \"#utility.yul\":4990:5009   */\n      add\n      swap1\n        /* \"#utility.yul\":4617:5015   */\n      jump\t// out\n        /* \"#utility.yul\":5020:5147   */\n    tag_140:\n        /* \"#utility.yul\":5081:5091   */\n      0x4e487b71\n        /* \"#utility.yul\":5076:5079   */\n      0xe0\n        /* \"#utility.yul\":5072:5092   */\n      shl\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5062:5093   */\n      mstore\n        /* \"#utility.yul\":5112:5116   */\n      0x32\n        /* \"#utility.yul\":5109:5110   */\n      0x04\n        /* \"#utility.yul\":5102:5117   */\n      mstore\n        /* \"#utility.yul\":5136:5140   */\n      0x24\n        /* \"#utility.yul\":5133:5134   */\n      0x00\n        /* \"#utility.yul\":5126:5141   */\n      revert\n        /* \"#utility.yul\":5152:5279   */\n    tag_482:\n        /* \"#utility.yul\":5213:5223   */\n      0x4e487b71\n        /* \"#utility.yul\":5208:5211   */\n      0xe0\n        /* \"#utility.yul\":5204:5224   */\n      shl\n        /* \"#utility.yul\":5201:5202   */\n      0x00\n        /* \"#utility.yul\":5194:5225   */\n      mstore\n        /* \"#utility.yul\":5244:5248   */\n      0x11\n        /* \"#utility.yul\":5241:5242   */\n      0x04\n        /* \"#utility.yul\":5234:5249   */\n      mstore\n        /* \"#utility.yul\":5268:5272   */\n      0x24\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5273   */\n      revert\n        /* \"#utility.yul\":5284:5459   */\n    tag_153:\n        /* \"#utility.yul\":5321:5324   */\n      0x00\n        /* \"#utility.yul\":5365:5369   */\n      0xff\n        /* \"#utility.yul\":5358:5363   */\n      dup3\n        /* \"#utility.yul\":5354:5370   */\n      and\n        /* \"#utility.yul\":5394:5398   */\n      0xff\n        /* \"#utility.yul\":5385:5392   */\n      dup2\n        /* \"#utility.yul\":5382:5399   */\n      eq\n        /* \"#utility.yul\":5379:5422   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":5402:5420   */\n      tag_534\n      tag_482\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":5451:5452   */\n      0x01\n        /* \"#utility.yul\":5438:5453   */\n      add\n      swap3\n        /* \"#utility.yul\":5284:5459   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5464:5844   */\n    tag_160:\n        /* \"#utility.yul\":5543:5544   */\n      0x01\n        /* \"#utility.yul\":5539:5551   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5586:5598   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5607:5668   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":5661:5665   */\n      0x7f\n        /* \"#utility.yul\":5653:5659   */\n      dup3\n        /* \"#utility.yul\":5649:5666   */\n      and\n        /* \"#utility.yul\":5639:5666   */\n      swap2\n      pop\n        /* \"#utility.yul\":5607:5668   */\n    tag_536:\n        /* \"#utility.yul\":5714:5716   */\n      0x20\n        /* \"#utility.yul\":5706:5712   */\n      dup3\n        /* \"#utility.yul\":5703:5717   */\n      lt\n        /* \"#utility.yul\":5683:5701   */\n      dup2\n        /* \"#utility.yul\":5680:5718   */\n      eq\n        /* \"#utility.yul\":5677:5838   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":5760:5770   */\n      0x4e487b71\n        /* \"#utility.yul\":5755:5758   */\n      0xe0\n        /* \"#utility.yul\":5751:5771   */\n      shl\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5741:5772   */\n      mstore\n        /* \"#utility.yul\":5795:5799   */\n      0x22\n        /* \"#utility.yul\":5792:5793   */\n      0x04\n        /* \"#utility.yul\":5785:5800   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5677:5838   */\n    tag_537:\n      pop\n        /* \"#utility.yul\":5464:5844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6741:7138   */\n    tag_198:\n        /* \"#utility.yul\":6943:6945   */\n      0x20\n        /* \"#utility.yul\":6925:6946   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6982:6984   */\n      0x21\n        /* \"#utility.yul\":6962:6980   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6955:6985   */\n      mstore\n        /* \"#utility.yul\":7021:7055   */\n      0x546865206163636f756e7420646f6573206e6f74206861766520616e79205342\n        /* \"#utility.yul\":7016:7018   */\n      0x40\n        /* \"#utility.yul\":7001:7019   */\n      dup3\n      add\n        /* \"#utility.yul\":6994:7056   */\n      mstore\n      shl(0xfa, 0x15)\n        /* \"#utility.yul\":7087:7089   */\n      0x60\n        /* \"#utility.yul\":7072:7090   */\n      dup3\n      add\n        /* \"#utility.yul\":7065:7096   */\n      mstore\n        /* \"#utility.yul\":7128:7131   */\n      0x80\n        /* \"#utility.yul\":7113:7132   */\n      add\n      swap1\n        /* \"#utility.yul\":6741:7138   */\n      jump\t// out\n        /* \"#utility.yul\":7143:7561   */\n    tag_210:\n        /* \"#utility.yul\":7345:7347   */\n      0x20\n        /* \"#utility.yul\":7327:7348   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7384:7386   */\n      0x36\n        /* \"#utility.yul\":7364:7382   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7357:7387   */\n      mstore\n        /* \"#utility.yul\":7423:7457   */\n      0x4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52\n        /* \"#utility.yul\":7418:7420   */\n      0x40\n        /* \"#utility.yul\":7403:7421   */\n      dup3\n      add\n        /* \"#utility.yul\":7396:7458   */\n      mstore\n      shl(0x52, 0x13d3114818d85b88185d1d195cdd081d1a194814d095)\n        /* \"#utility.yul\":7489:7491   */\n      0x60\n        /* \"#utility.yul\":7474:7492   */\n      dup3\n      add\n        /* \"#utility.yul\":7467:7519   */\n      mstore\n        /* \"#utility.yul\":7551:7554   */\n      0x80\n        /* \"#utility.yul\":7536:7555   */\n      add\n      swap1\n        /* \"#utility.yul\":7143:7561   */\n      jump\t// out\n        /* \"#utility.yul\":7566:7906   */\n    tag_245:\n        /* \"#utility.yul\":7768:7770   */\n      0x20\n        /* \"#utility.yul\":7750:7771   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7807:7809   */\n      0x10\n        /* \"#utility.yul\":7787:7805   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7780:7810   */\n      mstore\n      shl(0x80, 0x4164647265737320697320656d707479)\n        /* \"#utility.yul\":7841:7843   */\n      0x40\n        /* \"#utility.yul\":7826:7844   */\n      dup3\n      add\n        /* \"#utility.yul\":7819:7865   */\n      mstore\n        /* \"#utility.yul\":7897:7899   */\n      0x60\n        /* \"#utility.yul\":7882:7900   */\n      add\n      swap1\n        /* \"#utility.yul\":7566:7906   */\n      jump\t// out\n        /* \"#utility.yul\":8384:8569   */\n    tag_484:\n        /* \"#utility.yul\":8426:8429   */\n      0x00\n        /* \"#utility.yul\":8464:8469   */\n      dup2\n        /* \"#utility.yul\":8458:8470   */\n      mload\n        /* \"#utility.yul\":8479:8531   */\n      tag_546\n        /* \"#utility.yul\":8524:8530   */\n      dup2\n        /* \"#utility.yul\":8519:8522   */\n      dup6\n        /* \"#utility.yul\":8512:8516   */\n      0x20\n        /* \"#utility.yul\":8505:8510   */\n      dup7\n        /* \"#utility.yul\":8501:8517   */\n      add\n        /* \"#utility.yul\":8479:8531   */\n      tag_480\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8547:8563   */\n      swap3\n      swap1\n      swap3\n      add\n      swap3\n        /* \"#utility.yul\":8384:8569   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8574:9748   */\n    tag_281:\n        /* \"#utility.yul\":8750:8753   */\n      0x00\n        /* \"#utility.yul\":8779:8780   */\n      dup1\n        /* \"#utility.yul\":8812:8818   */\n      dup5\n        /* \"#utility.yul\":8806:8819   */\n      sload\n        /* \"#utility.yul\":8842:8845   */\n      dup2\n        /* \"#utility.yul\":8864:8865   */\n      0x01\n        /* \"#utility.yul\":8892:8901   */\n      dup3\n        /* \"#utility.yul\":8888:8890   */\n      dup2\n        /* \"#utility.yul\":8884:8902   */\n      shr\n        /* \"#utility.yul\":8874:8902   */\n      swap2\n      pop\n        /* \"#utility.yul\":8952:8954   */\n      dup1\n        /* \"#utility.yul\":8941:8950   */\n      dup4\n        /* \"#utility.yul\":8937:8955   */\n      and\n        /* \"#utility.yul\":8974:8992   */\n      dup1\n        /* \"#utility.yul\":8964:9025   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":9018:9022   */\n      0x7f\n        /* \"#utility.yul\":9010:9016   */\n      dup4\n        /* \"#utility.yul\":9006:9023   */\n      and\n        /* \"#utility.yul\":8996:9023   */\n      swap3\n      pop\n        /* \"#utility.yul\":8964:9025   */\n    tag_548:\n        /* \"#utility.yul\":9044:9046   */\n      0x20\n        /* \"#utility.yul\":9092:9094   */\n      dup1\n        /* \"#utility.yul\":9084:9090   */\n      dup5\n        /* \"#utility.yul\":9081:9095   */\n      lt\n        /* \"#utility.yul\":9061:9079   */\n      dup3\n        /* \"#utility.yul\":9058:9096   */\n      eq\n        /* \"#utility.yul\":9055:9220   */\n      iszero\n      tag_549\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":9119:9152   */\n      dup7\n      mstore\n        /* \"#utility.yul\":9175:9179   */\n      0x22\n        /* \"#utility.yul\":9172:9173   */\n      0x04\n        /* \"#utility.yul\":9165:9180   */\n      mstore\n        /* \"#utility.yul\":9205:9209   */\n      0x24\n        /* \"#utility.yul\":9126:9129   */\n      dup7\n        /* \"#utility.yul\":9193:9210   */\n      revert\n        /* \"#utility.yul\":9055:9220   */\n    tag_549:\n        /* \"#utility.yul\":9236:9254   */\n      dup2\n        /* \"#utility.yul\":9263:9367   */\n      dup1\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":9381:9382   */\n      0x01\n        /* \"#utility.yul\":9376:9696   */\n      dup2\n      eq\n      tag_552\n      jumpi\n        /* \"#utility.yul\":9229:9696   */\n      jump(tag_550)\n        /* \"#utility.yul\":9263:9367   */\n    tag_551:\n      not(0xff)\n        /* \"#utility.yul\":9296:9320   */\n      dup7\n      and\n        /* \"#utility.yul\":9284:9321   */\n      dup10\n      mstore\n        /* \"#utility.yul\":9341:9357   */\n      dup5\n      dup10\n      add\n      swap7\n      pop\n        /* \"#utility.yul\":9263:9367   */\n      jump(tag_550)\n        /* \"#utility.yul\":9376:9696   */\n    tag_552:\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8324:8338   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":8368:8372   */\n      0x20\n        /* \"#utility.yul\":8355:8373   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":9471:9472   */\n      0x00\n        /* \"#utility.yul\":9485:9650   */\n    tag_554:\n        /* \"#utility.yul\":9499:9505   */\n      dup7\n        /* \"#utility.yul\":9496:9497   */\n      dup2\n        /* \"#utility.yul\":9493:9506   */\n      lt\n        /* \"#utility.yul\":9485:9650   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":9577:9591   */\n      dup2\n      sload\n        /* \"#utility.yul\":9564:9575   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":9557:9592   */\n      mstore\n        /* \"#utility.yul\":9620:9636   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":9514:9524   */\n      dup4\n      add\n        /* \"#utility.yul\":9485:9650   */\n      jump(tag_554)\n    tag_556:\n        /* \"#utility.yul\":9489:9492   */\n      pop\n      pop\n        /* \"#utility.yul\":9679:9685   */\n      dup5\n        /* \"#utility.yul\":9674:9677   */\n      dup10\n        /* \"#utility.yul\":9670:9686   */\n      add\n        /* \"#utility.yul\":9663:9686   */\n      swap7\n      pop\n        /* \"#utility.yul\":9229:9696   */\n    tag_550:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9712:9742   */\n      tag_557\n        /* \"#utility.yul\":9738:9741   */\n      dup2\n        /* \"#utility.yul\":9730:9736   */\n      dup6\n        /* \"#utility.yul\":9712:9742   */\n      tag_484\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9705:9742   */\n      swap6\n        /* \"#utility.yul\":8574:9748   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9753:9888   */\n    tag_352:\n        /* \"#utility.yul\":9792:9795   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":9813:9830   */\n      dup3\n      eq\n        /* \"#utility.yul\":9810:9853   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":9833:9851   */\n      tag_560\n      tag_482\n      jump\t// in\n    tag_560:\n      pop\n        /* \"#utility.yul\":9880:9881   */\n      0x01\n        /* \"#utility.yul\":9869:9882   */\n      add\n      swap1\n        /* \"#utility.yul\":9753:9888   */\n      jump\t// out\n        /* \"#utility.yul\":9893:10020   */\n    tag_485:\n        /* \"#utility.yul\":9954:9964   */\n      0x4e487b71\n        /* \"#utility.yul\":9949:9952   */\n      0xe0\n        /* \"#utility.yul\":9945:9965   */\n      shl\n        /* \"#utility.yul\":9942:9943   */\n      0x00\n        /* \"#utility.yul\":9935:9966   */\n      mstore\n        /* \"#utility.yul\":9985:9989   */\n      0x12\n        /* \"#utility.yul\":9982:9983   */\n      0x04\n        /* \"#utility.yul\":9975:9990   */\n      mstore\n        /* \"#utility.yul\":10009:10013   */\n      0x24\n        /* \"#utility.yul\":10006:10007   */\n      0x00\n        /* \"#utility.yul\":9999:10014   */\n      revert\n        /* \"#utility.yul\":10025:10145   */\n    tag_354:\n        /* \"#utility.yul\":10065:10066   */\n      0x00\n        /* \"#utility.yul\":10091:10092   */\n      dup3\n        /* \"#utility.yul\":10081:10116   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":10096:10114   */\n      tag_564\n      tag_485\n      jump\t// in\n    tag_564:\n      pop\n        /* \"#utility.yul\":10130:10139   */\n      div\n      swap1\n        /* \"#utility.yul\":10025:10145   */\n      jump\t// out\n        /* \"#utility.yul\":10150:10277   */\n    tag_357:\n        /* \"#utility.yul\":10211:10221   */\n      0x4e487b71\n        /* \"#utility.yul\":10206:10209   */\n      0xe0\n        /* \"#utility.yul\":10202:10222   */\n      shl\n        /* \"#utility.yul\":10199:10200   */\n      0x00\n        /* \"#utility.yul\":10192:10223   */\n      mstore\n        /* \"#utility.yul\":10242:10246   */\n      0x41\n        /* \"#utility.yul\":10239:10240   */\n      0x04\n        /* \"#utility.yul\":10232:10247   */\n      mstore\n        /* \"#utility.yul\":10266:10270   */\n      0x24\n        /* \"#utility.yul\":10263:10264   */\n      0x00\n        /* \"#utility.yul\":10256:10271   */\n      revert\n        /* \"#utility.yul\":10282:10407   */\n    tag_362:\n        /* \"#utility.yul\":10322:10326   */\n      0x00\n        /* \"#utility.yul\":10350:10351   */\n      dup3\n        /* \"#utility.yul\":10347:10348   */\n      dup3\n        /* \"#utility.yul\":10344:10352   */\n      lt\n        /* \"#utility.yul\":10341:10375   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":10355:10373   */\n      tag_568\n      tag_482\n      jump\t// in\n    tag_568:\n      pop\n        /* \"#utility.yul\":10392:10401   */\n      sub\n      swap1\n        /* \"#utility.yul\":10282:10407   */\n      jump\t// out\n        /* \"#utility.yul\":10412:10524   */\n    tag_364:\n        /* \"#utility.yul\":10444:10445   */\n      0x00\n        /* \"#utility.yul\":10470:10471   */\n      dup3\n        /* \"#utility.yul\":10460:10495   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":10475:10493   */\n      tag_571\n      tag_485\n      jump\t// in\n    tag_571:\n      pop\n        /* \"#utility.yul\":10509:10518   */\n      mod\n      swap1\n        /* \"#utility.yul\":10412:10524   */\n      jump\t// out\n        /* \"#utility.yul\":10529:10657   */\n    tag_366:\n        /* \"#utility.yul\":10569:10572   */\n      0x00\n        /* \"#utility.yul\":10600:10601   */\n      dup3\n        /* \"#utility.yul\":10596:10602   */\n      not\n        /* \"#utility.yul\":10593:10594   */\n      dup3\n        /* \"#utility.yul\":10590:10603   */\n      gt\n        /* \"#utility.yul\":10587:10626   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":10606:10624   */\n      tag_574\n      tag_482\n      jump\t// in\n    tag_574:\n      pop\n        /* \"#utility.yul\":10642:10651   */\n      add\n      swap1\n        /* \"#utility.yul\":10529:10657   */\n      jump\t// out\n        /* \"#utility.yul\":11021:11807   */\n    tag_394:\n        /* \"#utility.yul\":11432:11457   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":11427:11430   */\n      dup2\n        /* \"#utility.yul\":11420:11458   */\n      mstore\n        /* \"#utility.yul\":11402:11405   */\n      0x00\n        /* \"#utility.yul\":11487:11493   */\n      dup4\n        /* \"#utility.yul\":11481:11494   */\n      mload\n        /* \"#utility.yul\":11503:11565   */\n      tag_577\n        /* \"#utility.yul\":11558:11564   */\n      dup2\n        /* \"#utility.yul\":11553:11555   */\n      0x17\n        /* \"#utility.yul\":11548:11551   */\n      dup6\n        /* \"#utility.yul\":11544:11556   */\n      add\n        /* \"#utility.yul\":11537:11541   */\n      0x20\n        /* \"#utility.yul\":11529:11535   */\n      dup9\n        /* \"#utility.yul\":11525:11542   */\n      add\n        /* \"#utility.yul\":11503:11565   */\n      tag_480\n      jump\t// in\n    tag_577:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":11624:11626   */\n      0x17\n        /* \"#utility.yul\":11584:11600   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":11616:11627   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":11609:11649   */\n      mstore\n        /* \"#utility.yul\":11674:11687   */\n      dup4\n      mload\n        /* \"#utility.yul\":11696:11759   */\n      tag_578\n        /* \"#utility.yul\":11674:11687   */\n      dup2\n        /* \"#utility.yul\":11745:11747   */\n      0x28\n        /* \"#utility.yul\":11737:11748   */\n      dup5\n      add\n        /* \"#utility.yul\":11730:11734   */\n      0x20\n        /* \"#utility.yul\":11718:11735   */\n      dup9\n      add\n        /* \"#utility.yul\":11696:11759   */\n      tag_480\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":11779:11796   */\n      add\n        /* \"#utility.yul\":11798:11800   */\n      0x28\n        /* \"#utility.yul\":11775:11801   */\n      add\n      swap5\n        /* \"#utility.yul\":11021:11807   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11812:11980   */\n    tag_421:\n        /* \"#utility.yul\":11852:11859   */\n      0x00\n        /* \"#utility.yul\":11918:11919   */\n      dup2\n        /* \"#utility.yul\":11914:11915   */\n      0x00\n        /* \"#utility.yul\":11910:11916   */\n      not\n        /* \"#utility.yul\":11906:11920   */\n      div\n        /* \"#utility.yul\":11903:11904   */\n      dup4\n        /* \"#utility.yul\":11900:11921   */\n      gt\n        /* \"#utility.yul\":11895:11896   */\n      dup3\n        /* \"#utility.yul\":11888:11897   */\n      iszero\n        /* \"#utility.yul\":11881:11898   */\n      iszero\n        /* \"#utility.yul\":11877:11922   */\n      and\n        /* \"#utility.yul\":11874:11945   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":11925:11943   */\n      tag_581\n      tag_482\n      jump\t// in\n    tag_581:\n      pop\n        /* \"#utility.yul\":11965:11974   */\n      mul\n      swap1\n        /* \"#utility.yul\":11812:11980   */\n      jump\t// out\n        /* \"#utility.yul\":11985:12121   */\n    tag_440:\n        /* \"#utility.yul\":12024:12027   */\n      0x00\n        /* \"#utility.yul\":12052:12057   */\n      dup2\n        /* \"#utility.yul\":12042:12081   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":12061:12079   */\n      tag_584\n      tag_482\n      jump\t// in\n    tag_584:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":12097:12115   */\n      add\n      swap1\n        /* \"#utility.yul\":11985:12121   */\n      jump\t// out\n        /* \"#utility.yul\":12487:12614   */\n    tag_461:\n        /* \"#utility.yul\":12548:12558   */\n      0x4e487b71\n        /* \"#utility.yul\":12543:12546   */\n      0xe0\n        /* \"#utility.yul\":12539:12559   */\n      shl\n        /* \"#utility.yul\":12536:12537   */\n      0x00\n        /* \"#utility.yul\":12529:12560   */\n      mstore\n        /* \"#utility.yul\":12579:12583   */\n      0x31\n        /* \"#utility.yul\":12576:12577   */\n      0x04\n        /* \"#utility.yul\":12569:12584   */\n      mstore\n        /* \"#utility.yul\":12603:12607   */\n      0x24\n        /* \"#utility.yul\":12600:12601   */\n      0x00\n        /* \"#utility.yul\":12593:12608   */\n      revert\n    stop\n    data_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397 5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254\n    data_9a4fd57166f98e8d7afa26bb80870b0ef0d42c4df4b5a4c9c02a345536d90e3a 97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa264697066735822122052c2977ea14240fafbdac993288dfecabba0725a9315fdd690ba00a82372a97664736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_64": {
									"entryPoint": null,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_994": {
									"entryPoint": 213,
									"id": 994,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1701": {
									"entryPoint": null,
									"id": 1701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_93": {
									"entryPoint": 107,
									"id": 93,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:15"
															},
															"nodeType": "YulIf",
															"src": "157:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:15"
															},
															"nodeType": "YulIf",
															"src": "227:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:15",
														"type": ""
													}
												],
												"src": "14:380:15"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50620000656040518060400160405280600881526020016725aca1aa37b5b2b760c11b8152506040518060400160405280600881526020016725aca1aa37b5b2b760c11b815250336200006b60201b60201c565b62000259565b82516200008090600890602086019062000176565b5081516200009690600990602085019062000176565b50620000a4600082620000d5565b620000d07f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92982620000d5565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000172576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001313390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b82805462000184906200021c565b90600052602060002090601f016020900481019282620001a85760008555620001f3565b82601f10620001c357805160ff1916838001178555620001f3565b82800160010185558215620001f3579182015b82811115620001f3578251825591602001919060010190620001d6565b506200020192915062000205565b5090565b5b8082111562000201576000815560010162000206565b600181811c908216806200023157607f821691505b602082108114156200025357634e487b7160e01b600052602260045260246000fd5b50919050565b611cbf80620002696000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636d70f7ae116100c3578063a217fddf1161007c578063a217fddf146102e1578063bc8dd06a146102e9578063c87b56dd146102fc578063d547741f1461030f578063eb31403f14610322578063f5b541a61461033557600080fd5b80636d70f7ae1461027a57806370a082311461028d57806374a8f103146102a0578063773c02d4146102b357806391d14854146102c657806395d89b41146102d957600080fd5b80632f2ff15d116101155780632f2ff15d146101fb57806330176e131461020e57806336568abe1461022157806344df8e70146102345780636352211e1461023c5780636c60144a1461026757600080fd5b8063011002df1461015d57806301ffc9a71461017257806306fdde031461019a57806318160ddd146101af578063248a9ca3146101c557806324d7806c146101e8575b600080fd5b61017061016b366004611620565b61034a565b005b610185610180366004611695565b6104ac565b60405190151581526020015b60405180910390f35b6101a26104f2565b60405161019191906116eb565b6101b7610580565b604051908152602001610191565b6101b76101d336600461171e565b60009081526020819052604090206001015490565b6101856101f6366004611753565b610591565b61017061020936600461176e565b61059d565b61017061021c36600461179a565b6105c7565b61017061022f36600461176e565b61065c565b6101706106da565b61024f61024a36600461171e565b610789565b6040516001600160a01b039091168152602001610191565b610170610275366004611620565b6107c8565b610185610288366004611753565b610927565b6101b761029b366004611753565b610941565b6101706102ae366004611753565b61096b565b6101b76102c1366004611753565b610a73565b6101856102d436600461176e565b610a9b565b6101a2610ac4565b6101b7600081565b6101b76102f73660046117fa565b610ad1565b6101a261030a36600461171e565b610bf6565b61017061031d36600461176e565b610c54565b6101b7610330366004611753565b610c79565b6101b7600080516020611c4a83398151915281565b80610363600080516020611c4a83398151915233610a9b565b6103885760405162461bcd60e51b815260040161037f90611824565b60405180910390fd5b60648111156103a95760405162461bcd60e51b815260040161037f9061187a565b60005b818160ff1610156104a657600084848360ff168181106103ce576103ce6118bc565b90506020020160208101906103e39190611753565b90506001600160a01b03811615806104035750610401600482610db9565b155b1561040e5750610494565b600061041b600483610dd5565b9050610428600483610dea565b50610434600182610dff565b5060405181906001600160a01b038416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a360405181906000906001600160a01b03851690600080516020611c6a833981519152908390a450505b8061049e816118e8565b9150506103ac565b50505050565b60006001600160e01b031982166380ac58cd60e01b14806104dd57506001600160e01b03198216635b5e139f60e01b145b806104ec57506104ec82610e0b565b92915050565b600880546104ff90611908565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90611908565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b505050505081565b600061058c6004610e40565b905090565b60006104ec8183610a9b565b6000828152602081905260409020600101546105b881610e4b565b6105c28383610e58565b505050565b6105d2600033610a9b565b6106505760405162461bcd60e51b815260206004820152604360248201527f4f6e6c7920746865206163636f756e7420776974682044454641554c545f414460448201527f4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e2060648201526255524960e81b608482015260a40161037f565b6105c2600a8383611587565b6001600160a01b03811633146106cc5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161037f565b6106d68282610edc565b5050565b336106e6600482610db9565b6107025760405162461bcd60e51b815260040161037f90611943565b600061070f600483610dd5565b905061071c600483610dea565b50610728600182610dff565b5060405181906001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a360405181906000906001600160a01b03851690600080516020611c6a833981519152908390a45050565b60006104ec826040518060400160405280600f81526020016e125b9d985b1a59081d1bdad95b9259608a1b8152506001610f419092919063ffffffff16565b806107e1600080516020611c4a83398151915233610a9b565b6107fd5760405162461bcd60e51b815260040161037f90611984565b606481111561081e5760405162461bcd60e51b815260040161037f9061187a565b60005b818160ff1610156104a657600084848360ff16818110610843576108436118bc565b90506020020160208101906108589190611753565b90506001600160a01b03811615806108765750610876600482610db9565b156108815750610915565b61088f600780546001019055565b600061089a60075490565b90506108a860048383610f56565b506108b560018284610f6c565b5060405181906001600160a01b038416907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a360405181906001600160a01b03841690600090600080516020611c6a833981519152908290a450505b8061091f816118e8565b915050610821565b60006104ec600080516020611c4a83398151915283610a9b565b60008061094f600484610f82565b5090508061095e576000610961565b60015b60ff169392505050565b610983600080516020611c4a83398151915233610a9b565b61099f5760405162461bcd60e51b815260040161037f90611824565b6001600160a01b0381166109c55760405162461bcd60e51b815260040161037f906119da565b6109d0600482610db9565b6109ec5760405162461bcd60e51b815260040161037f90611943565b60006109f9600483610dd5565b9050610a06600483610dea565b50610a12600182610dff565b5060405181906001600160a01b038416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a360405181906000906001600160a01b03851690600080516020611c6a833981519152908390a45050565b60006104ec82604051806060016040528060238152602001611c276023913960049190610fa9565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600980546104ff90611908565b6000610aeb600080516020611c4a83398151915233610a9b565b610b075760405162461bcd60e51b815260040161037f90611984565b6001600160a01b038316610b2d5760405162461bcd60e51b815260040161037f906119da565b610b38600484610db9565b15610b7a5760405162461bcd60e51b815260206004820152601260248201527153425420616c72656164792065786973747360701b604482015260640161037f565b610b8660048484610f56565b50610b9360018385610f6c565b5060405182906001600160a01b038516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a360405182906001600160a01b03851690600090600080516020611c6a833981519152908290a450919050565b60606000600a8054610c0790611908565b905011610c2357604051806020016040528060008152506104ec565b600a610c2e83610fbf565b604051602001610c3f929190611a20565b60405160208183030381529060405292915050565b600082815260208190526040902060010154610c6f81610e4b565b6105c28383610edc565b6000610c93600080516020611c4a83398151915233610a9b565b610caf5760405162461bcd60e51b815260040161037f90611984565b6001600160a01b038216610cd55760405162461bcd60e51b815260040161037f906119da565b610ce0600483610db9565b15610d225760405162461bcd60e51b815260206004820152601260248201527153425420616c72656164792065786973747360701b604482015260640161037f565b610d30600780546001019055565b6000610d3b60075490565b9050610d4960048483610f56565b50610d5660018285610f6c565b5060405181906001600160a01b038516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a360405181906001600160a01b03851690600090600080516020611c6a833981519152908290a492915050565b6000610dce836001600160a01b0384166110bd565b9392505050565b6000610dce836001600160a01b0384166110c9565b6000610dce836001600160a01b038416611139565b6000610dce8383611139565b60006001600160e01b03198216637965db0b60e01b14806104ec57506301ffc9a760e01b6001600160e01b03198316146104ec565b60006104ec82611156565b610e558133611161565b50565b610e628282610a9b565b6106d6576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e983390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610ee68282610a9b565b156106d6576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610f4e8484846111ba565b949350505050565b6000610f4e846001600160a01b03851684611206565b6000610f4e84846001600160a01b038516611206565b6000808080610f9a866001600160a01b038716611223565b909450925050505b9250929050565b6000610f4e846001600160a01b038516846111ba565b606081610fe35750506040805180820190915260018152600360fc1b602082015290565b8160005b811561100d5780610ff781611ac7565b91506110069050600a83611af8565b9150610fe7565b60008167ffffffffffffffff81111561102857611028611b0c565b6040519080825280601f01601f191660200182016040528015611052576020820181803683370190505b5090505b8415610f4e57611067600183611b22565b9150611074600a86611b39565b61107f906030611b4d565b60f81b818381518110611094576110946118bc565b60200101906001600160f81b031916908160001a9053506110b6600a86611af8565b9450611056565b6000610dce838361125d565b6000818152600283016020526040812054801515806110ed57506110ed84846110bd565b610dce5760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015260640161037f565b60008181526002830160205260408120819055610dce8383611275565b60006104ec82611281565b61116b8282610a9b565b6106d6576111788161128b565b61118383602061129d565b604051602001611194929190611b65565b60408051601f198184030181529082905262461bcd60e51b825261037f916004016116eb565b6000828152600284016020526040812054801515806111de57506111de85856110bd565b83906111fd5760405162461bcd60e51b815260040161037f91906116eb565b50949350505050565b60008281526002840160205260408120829055610f4e8484611439565b60008181526002830160205260408120548190806112525761124585856110bd565b925060009150610fa29050565b600192509050610fa2565b60008181526001830160205260408120541515610dce565b6000610dce8383611445565b60006104ec825490565b60606104ec6001600160a01b03831660145b606060006112ac836002611bda565b6112b7906002611b4d565b67ffffffffffffffff8111156112cf576112cf611b0c565b6040519080825280601f01601f1916602001820160405280156112f9576020820181803683370190505b509050600360fc1b81600081518110611314576113146118bc565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611343576113436118bc565b60200101906001600160f81b031916908160001a9053506000611367846002611bda565b611372906001611b4d565b90505b60018111156113ea576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113a6576113a66118bc565b1a60f81b8282815181106113bc576113bc6118bc565b60200101906001600160f81b031916908160001a90535060049490941c936113e381611bf9565b9050611375565b508315610dce5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161037f565b6000610dce8383611538565b6000818152600183016020526040812054801561152e576000611469600183611b22565b855490915060009061147d90600190611b22565b90508181146114e257600086600001828154811061149d5761149d6118bc565b90600052602060002001549050808760000184815481106114c0576114c06118bc565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806114f3576114f3611c10565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104ec565b60009150506104ec565b600081815260018301602052604081205461157f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104ec565b5060006104ec565b82805461159390611908565b90600052602060002090601f0160209004810192826115b557600085556115fb565b82601f106115ce5782800160ff198235161785556115fb565b828001600101855582156115fb579182015b828111156115fb5782358255916020019190600101906115e0565b5061160792915061160b565b5090565b5b80821115611607576000815560010161160c565b6000806020838503121561163357600080fd5b823567ffffffffffffffff8082111561164b57600080fd5b818501915085601f83011261165f57600080fd5b81358181111561166e57600080fd5b8660208260051b850101111561168357600080fd5b60209290920196919550909350505050565b6000602082840312156116a757600080fd5b81356001600160e01b031981168114610dce57600080fd5b60005b838110156116da5781810151838201526020016116c2565b838111156104a65750506000910152565b602081526000825180602084015261170a8160408501602087016116bf565b601f01601f19169190910160400192915050565b60006020828403121561173057600080fd5b5035919050565b80356001600160a01b038116811461174e57600080fd5b919050565b60006020828403121561176557600080fd5b610dce82611737565b6000806040838503121561178157600080fd5b8235915061179160208401611737565b90509250929050565b600080602083850312156117ad57600080fd5b823567ffffffffffffffff808211156117c557600080fd5b818501915085601f8301126117d957600080fd5b8135818111156117e857600080fd5b86602082850101111561168357600080fd5b6000806040838503121561180d57600080fd5b61181683611737565b946020939093013593505050565b60208082526036908201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260408201527513d3114818d85b881c995d9bdad9481d1a194814d09560521b606082015260800190565b60208082526022908201527f546865206d6178206c656e677468206f66206164647265737365732069732031604082015261030360f41b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156118ff576118ff6118d2565b60010192915050565b600181811c9082168061191c57607f821691505b6020821081141561193d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f546865206163636f756e7420646f6573206e6f74206861766520616e792053426040820152601560fa1b606082015260800190565b60208082526036908201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260408201527513d3114818d85b88185d1d195cdd081d1a194814d09560521b606082015260800190565b60208082526010908201526f4164647265737320697320656d70747960801b604082015260600190565b60008151611a168185602086016116bf565b9290920192915050565b600080845481600182811c915080831680611a3c57607f831692505b6020808410821415611a5c57634e487b7160e01b86526022600452602486fd5b818015611a705760018114611a8157611aae565b60ff19861689528489019650611aae565b60008b81526020902060005b86811015611aa65781548b820152908501908301611a8d565b505084890196505b505050505050611abe8185611a04565b95945050505050565b6000600019821415611adb57611adb6118d2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611b0757611b07611ae2565b500490565b634e487b7160e01b600052604160045260246000fd5b600082821015611b3457611b346118d2565b500390565b600082611b4857611b48611ae2565b500690565b60008219821115611b6057611b606118d2565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b9d8160178501602088016116bf565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611bce8160288401602088016116bf565b01602801949350505050565b6000816000190483118215151615611bf457611bf46118d2565b500290565b600081611c0857611c086118d2565b506000190190565b634e487b7160e01b600052603160045260246000fdfe5468652077616c6c657420686173206e6f7420617474657374656420616e792053425497667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122052c2977ea14240fafbdac993288dfecabba0725a9315fdd690ba00a82372a97664736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x25ACA1AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x25ACA1AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP CALLER PUSH3 0x6B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x259 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x80 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x176 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x96 SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x176 JUMP JUMPDEST POP PUSH3 0xA4 PUSH1 0x0 DUP3 PUSH3 0xD5 JUMP JUMPDEST PUSH3 0xD0 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP3 PUSH3 0xD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x172 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x131 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x184 SWAP1 PUSH3 0x21C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1F3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1C3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D6 JUMP JUMPDEST POP PUSH3 0x201 SWAP3 SWAP2 POP PUSH3 0x205 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x201 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x206 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x231 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x253 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBF DUP1 PUSH3 0x269 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D70F7AE GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xBC8DD06A EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xEB31403F EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x30176E13 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x6C60144A EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11002DF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x1E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x170 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x179A JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x171E JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST DUP1 PUSH2 0x363 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x3CE JUMPI PUSH2 0x3CE PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x403 JUMPI POP PUSH2 0x401 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x40E JUMPI POP PUSH2 0x494 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B PUSH1 0x4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x428 PUSH1 0x4 DUP4 PUSH2 0xDEA JUMP JUMPDEST POP PUSH2 0x434 PUSH1 0x1 DUP3 PUSH2 0xDFF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0x49E DUP2 PUSH2 0x18E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3AC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4DD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4EC JUMPI POP PUSH2 0x4EC DUP3 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x4FF SWAP1 PUSH2 0x1908 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52B SWAP1 PUSH2 0x1908 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C PUSH1 0x4 PUSH2 0xE40 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP2 DUP4 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5B8 DUP2 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x5C2 DUP4 DUP4 PUSH2 0xE58 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH1 0x0 CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E7420776974682044454641554C545F4144 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4D494E5F524F4C452063616E2073657420746865206261736520746F6B656E20 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x555249 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x5C2 PUSH1 0xA DUP4 DUP4 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x6D6 DUP3 DUP3 PUSH2 0xEDC JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x6E6 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F PUSH1 0x4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C PUSH1 0x4 DUP4 PUSH2 0xDEA JUMP JUMPDEST POP PUSH2 0x728 PUSH1 0x1 DUP3 PUSH2 0xDFF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x7E1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x843 JUMPI PUSH2 0x843 PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x876 JUMPI POP PUSH2 0x876 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST ISZERO PUSH2 0x881 JUMPI POP PUSH2 0x915 JUMP JUMPDEST PUSH2 0x88F PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89A PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A8 PUSH1 0x4 DUP4 DUP4 PUSH2 0xF56 JUMP JUMPDEST POP PUSH2 0x8B5 PUSH1 0x1 DUP3 DUP5 PUSH2 0xF6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0x91F DUP2 PUSH2 0x18E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x94F PUSH1 0x4 DUP5 PUSH2 0xF82 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x95E JUMPI PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x983 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x9D0 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F9 PUSH1 0x4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0xA06 PUSH1 0x4 DUP4 PUSH2 0xDEA JUMP JUMPDEST POP PUSH2 0xA12 PUSH1 0x1 DUP3 PUSH2 0xDFF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C27 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x4 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x4FF SWAP1 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0xB38 PUSH1 0x4 DUP5 PUSH2 0xDB9 JUMP JUMPDEST ISZERO PUSH2 0xB7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53425420616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0xB86 PUSH1 0x4 DUP5 DUP5 PUSH2 0xF56 JUMP JUMPDEST POP PUSH2 0xB93 PUSH1 0x1 DUP4 DUP6 PUSH2 0xF6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA DUP1 SLOAD PUSH2 0xC07 SWAP1 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP GT PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0xA PUSH2 0xC2E DUP4 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3F SWAP3 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC6F DUP2 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x5C2 DUP4 DUP4 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0xCE0 PUSH1 0x4 DUP4 PUSH2 0xDB9 JUMP JUMPDEST ISZERO PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53425420616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0xD30 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3B PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD49 PUSH1 0x4 DUP5 DUP4 PUSH2 0xF56 JUMP JUMPDEST POP PUSH2 0xD56 PUSH1 0x1 DUP3 DUP6 PUSH2 0xF6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4EC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0xE55 DUP2 CALLER PUSH2 0x1161 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE62 DUP3 DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE98 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xEE6 DUP3 DUP3 PUSH2 0xA9B JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 DUP5 DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF9A DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1223 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x100D JUMPI DUP1 PUSH2 0xFF7 DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1006 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1028 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1052 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF4E JUMPI PUSH2 0x1067 PUSH1 0x1 DUP4 PUSH2 0x1B22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1074 PUSH1 0xA DUP7 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x107F SWAP1 PUSH1 0x30 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1094 JUMPI PUSH2 0x1094 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10B6 PUSH1 0xA DUP7 PUSH2 0x1AF8 JUMP JUMPDEST SWAP5 POP PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x10ED JUMPI POP PUSH2 0x10ED DUP5 DUP5 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x116B DUP3 DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x6D6 JUMPI PUSH2 0x1178 DUP2 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1183 DUP4 PUSH1 0x20 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1194 SWAP3 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x37F SWAP2 PUSH1 0x4 ADD PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x11DE JUMPI POP PUSH2 0x11DE DUP6 DUP6 PUSH2 0x10BD JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0xF4E DUP5 DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x1252 JUMPI PUSH2 0x1245 DUP6 DUP6 PUSH2 0x10BD JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0xFA2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4EC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12AC DUP4 PUSH1 0x2 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x12B7 SWAP1 PUSH1 0x2 PUSH2 0x1B4D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12CF JUMPI PUSH2 0x12CF PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1314 JUMPI PUSH2 0x1314 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1367 DUP5 PUSH1 0x2 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1372 SWAP1 PUSH1 0x1 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13EA JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x13A6 JUMPI PUSH2 0x13A6 PUSH2 0x18BC JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BC PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x13E3 DUP2 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1375 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x152E JUMPI PUSH1 0x0 PUSH2 0x1469 PUSH1 0x1 DUP4 PUSH2 0x1B22 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x147D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x149D JUMPI PUSH2 0x149D PUSH2 0x18BC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x14C0 JUMPI PUSH2 0x14C0 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x14F3 JUMPI PUSH2 0x14F3 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x157F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4EC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4EC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x1908 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x15FB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x15CE JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x15FB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x15FB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15FB JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x15E0 JUMP JUMPDEST POP PUSH2 0x1607 SWAP3 SWAP2 POP PUSH2 0x160B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x166E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16DA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x170A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x174E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP3 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1791 PUSH1 0x20 DUP5 ADD PUSH2 0x1737 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x180D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1816 DUP4 PUSH2 0x1737 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x13D3114818D85B881C995D9BDAD9481D1A194814D095 PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206D6178206C656E677468206F66206164647265737365732069732031 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x303 PUSH1 0xF4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x18FF JUMPI PUSH2 0x18FF PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x191C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x193D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F74206861766520616E79205342 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x13D3114818D85B88185D1D195CDD081D1A194814D095 PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x4164647265737320697320656D707479 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1A16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1A3C JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1A5C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A81 JUMPI PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1AA6 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1A8D JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x1ABE DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADB PUSH2 0x18D2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B07 JUMPI PUSH2 0x1B07 PUSH2 0x1AE2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x18D2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B48 JUMPI PUSH2 0x1B48 PUSH2 0x1AE2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B60 PUSH2 0x18D2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1B9D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1BCE DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BF JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF4 PUSH2 0x18D2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C08 JUMPI PUSH2 0x1C08 PUSH2 0x18D2 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SLOAD PUSH9 0x652077616C6C657420 PUSH9 0x6173206E6F74206174 PUSH21 0x657374656420616E792053425497667070C54EF182 0xB0 CREATE2 DUP6 DUP12 SUB 0x4B 0xEA 0xC1 0xB6 RETURN ADDMOD SWAP11 LOG2 0xD3 XOR DUP12 0xB1 0xE8 SWAP3 SWAP16 0x4F 0xA9 0xB9 0x29 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xC2 SWAP8 PUSH31 0xA14240FAFBDAC993288DFECABBA0725A9315FDD690BA00A82372A97664736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "628:6655:0:-:0;;;1325:77;;;;;;;;;;1349:46;;;;;;;;;;;;;;-1:-1:-1;;;1349:46:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1349:46:0;;;1384:10;1349;;;:46;;:::i;:::-;628:6655;;1520:321;1648:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1670:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1753:38:0;2068:4:1;1784:6:0;1753:10;:38::i;:::-;1801:33;1292:26;1827:6;1801:10;:33::i;:::-;1520:321;;;:::o;7457:233:1:-;2977:4;3000:12;;;;;;;;;;;-1:-1:-1;;;;;3000:29:1;;;;;;;;;;;;7535:149;;7578:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7578:29:1;;;;;;;;;:36;;-1:-1:-1;;7578:36:1;7610:4;7578:36;;;7660:12;719:10:9;;640:96;7660:12:1;-1:-1:-1;;;;;7633:40:1;7651:7;-1:-1:-1;;;;;7633:40:1;7645:4;7633:40;;;;;;;;;;7535:149;7457:233;;:::o;628:6655:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:6655:0;;;-1:-1:-1;628:6655:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:15;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;628:6655:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OPERATOR_ROLE_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_2960": {
									"entryPoint": 5432,
									"id": 2960,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkRole_803": {
									"entryPoint": 3659,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_842": {
									"entryPoint": 4449,
									"id": 842,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_contains_3063": {
									"entryPoint": null,
									"id": 3063,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_994": {
									"entryPoint": 3672,
									"id": 994,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_length_3077": {
									"entryPoint": null,
									"id": 3077,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1701": {
									"entryPoint": null,
									"id": 1701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_3044": {
									"entryPoint": 5189,
									"id": 3044,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_1025": {
									"entryPoint": 3804,
									"id": 1025,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_3130": {
									"entryPoint": 5177,
									"id": 3130,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@attestId_161": {
									"entryPoint": 2769,
									"id": 161,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@attest_238": {
									"entryPoint": 3193,
									"id": 238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_587": {
									"entryPoint": 2369,
									"id": 587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchAttest_337": {
									"entryPoint": 1992,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@batchRevoke_497": {
									"entryPoint": 842,
									"id": 497,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_547": {
									"entryPoint": 1754,
									"id": 547,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1871": {
									"entryPoint": 4285,
									"id": 1871,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_2562": {
									"entryPoint": 3513,
									"id": 2562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_3166": {
									"entryPoint": 4701,
									"id": 3166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@current_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_1992": {
									"entryPoint": 4297,
									"id": 1992,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@get_2027": {
									"entryPoint": 4538,
									"id": 2027,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@get_2471": {
									"entryPoint": 3905,
									"id": 2471,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@get_2687": {
									"entryPoint": 3541,
									"id": 2687,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@get_2720": {
									"entryPoint": 4009,
									"id": 2720,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@grantRole_877": {
									"entryPoint": 1437,
									"id": 877,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_790": {
									"entryPoint": 2715,
									"id": 790,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increment_1743": {
									"entryPoint": null,
									"id": 1743,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isAdmin_651": {
									"entryPoint": 1425,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOperator_638": {
									"entryPoint": 2343,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_1886": {
									"entryPoint": 4438,
									"id": 1886,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_2577": {
									"entryPoint": 3648,
									"id": 2577,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_3181": {
									"entryPoint": 4737,
									"id": 3181,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_44": {
									"entryPoint": 1266,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_615": {
									"entryPoint": 1929,
									"id": 615,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_1853": {
									"entryPoint": 4409,
									"id": 1853,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@remove_2292": {
									"entryPoint": 3583,
									"id": 2292,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@remove_2535": {
									"entryPoint": 3562,
									"id": 2535,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@remove_3148": {
									"entryPoint": 4725,
									"id": 3148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_920": {
									"entryPoint": 1628,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_897": {
									"entryPoint": 3156,
									"id": 897,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revoke_403": {
									"entryPoint": 2411,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBaseTokenURI_567": {
									"entryPoint": 1479,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@set_1829": {
									"entryPoint": 4614,
									"id": 1829,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@set_2271": {
									"entryPoint": 3948,
									"id": 2271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@set_2508": {
									"entryPoint": 3926,
									"id": 2508,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@supportsInterface_1049": {
									"entryPoint": null,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_709": {
									"entryPoint": 1196,
									"id": 709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_771": {
									"entryPoint": 3595,
									"id": 771,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_46": {
									"entryPoint": 2756,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toHexString_3862": {
									"entryPoint": 4765,
									"id": 3862,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_3882": {
									"entryPoint": 4747,
									"id": 3882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_3745": {
									"entryPoint": 4031,
									"id": 3745,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenIdOf_601": {
									"entryPoint": 2675,
									"id": 601,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_680": {
									"entryPoint": 3062,
									"id": 680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_625": {
									"entryPoint": 1408,
									"id": 625,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tryGet_1959": {
									"entryPoint": 4643,
									"id": 1959,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryGet_2657": {
									"entryPoint": 3970,
									"id": 2657,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12616:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "119:510:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "140:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "149:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "136:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "136:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "161:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "132:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "132:32:15"
															},
															"nodeType": "YulIf",
															"src": "129:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "190:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "204:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "194:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "246:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "240:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:15"
															},
															"nodeType": "YulIf",
															"src": "273:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:15"
															},
															"nodeType": "YulIf",
															"src": "357:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "448:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "435:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "425:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "487:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "490:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "480:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "466:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "463:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:14:15"
															},
															"nodeType": "YulIf",
															"src": "460:34:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "561:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "517:2:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "525:1:15",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "528:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "521:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "521:14:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "513:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "513:23:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "538:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "509:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:32:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "543:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "506:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:45:15"
															},
															"nodeType": "YulIf",
															"src": "503:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "577:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:11:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "607:16:15",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "617:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "77:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "88:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "100:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "108:6:15",
														"type": ""
													}
												],
												"src": "14:615:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:217:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "749:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "761:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "724:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "733:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "745:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:32:15"
															},
															"nodeType": "YulIf",
															"src": "713:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "774:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "800:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "787:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "778:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "874:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "883:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "886:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "876:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "876:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "876:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "832:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "843:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "854:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "859:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "850:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "850:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "839:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "839:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "829:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "829:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:51:15"
															},
															"nodeType": "YulIf",
															"src": "819:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "899:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "909:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "680:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "692:6:15",
														"type": ""
													}
												],
												"src": "634:286:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1020:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1030:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1042:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1053:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1030:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1072:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1097:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1090:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1083:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1065:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "989:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1000:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1011:4:15",
														"type": ""
													}
												],
												"src": "925:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1170:205:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1189:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1184:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1249:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1274:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1279:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1270:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1270:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1293:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1298:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1289:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1289:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1283:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1283:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1263:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1263:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1263:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1210:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1213:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1207:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1221:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1223:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1232:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1235:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1228:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1228:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1223:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1203:3:15",
																"statements": []
															},
															"src": "1199:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1338:31:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1351:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1356:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1347:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1347:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1340:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1340:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1340:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1327:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1324:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:13:15"
															},
															"nodeType": "YulIf",
															"src": "1321:48:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1148:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1153:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1158:6:15",
														"type": ""
													}
												],
												"src": "1117:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:262:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1518:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1541:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1561:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1555:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1545:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1588:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1599:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1584:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1584:18:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1654:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1642:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1663:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1674:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1659:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1659:18:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1679:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1620:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:66:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1620:66:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1695:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1711:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1730:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1738:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1726:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1726:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1747:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1743:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1743:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1722:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1722:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1707:45:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1754:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1695:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1470:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1481:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1492:4:15",
														"type": ""
													}
												],
												"src": "1380:383:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1869:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1879:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1887:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1879:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1932:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1914:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1838:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1849:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1860:4:15",
														"type": ""
													}
												],
												"src": "1768:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2066:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2078:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2068:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2068:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2041:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2050:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2037:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2037:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2062:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2033:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:32:15"
															},
															"nodeType": "YulIf",
															"src": "2030:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2091:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2114:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2101:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1986:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1997:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2009:6:15",
														"type": ""
													}
												],
												"src": "1950:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2288:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2281:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2205:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2216:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2227:4:15",
														"type": ""
													}
												],
												"src": "2135:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2366:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2376:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2398:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2385:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2376:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2468:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2477:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2470:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2470:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2470:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2427:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2438:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2453:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2458:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2449:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2449:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2462:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2445:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2445:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2434:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2434:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2424:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2424:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:50:15"
															},
															"nodeType": "YulIf",
															"src": "2414:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2356:5:15",
														"type": ""
													}
												],
												"src": "2317:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2611:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2586:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2595:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2582:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2578:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:32:15"
															},
															"nodeType": "YulIf",
															"src": "2575:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2636:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2665:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2646:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2636:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2531:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2542:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2554:6:15",
														"type": ""
													}
												],
												"src": "2495:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2773:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2819:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2828:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2821:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2821:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2821:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2794:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2790:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2786:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2786:32:15"
															},
															"nodeType": "YulIf",
															"src": "2783:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2844:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2867:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2854:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2886:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2919:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2930:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2896:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2886:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2731:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2742:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2762:6:15",
														"type": ""
													}
												],
												"src": "2686:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3035:502:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3081:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3090:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3083:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3056:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3065:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3077:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3048:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:32:15"
															},
															"nodeType": "YulIf",
															"src": "3045:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3106:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3133:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3120:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3110:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3152:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3162:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3156:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3207:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3209:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3203:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3192:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:14:15"
															},
															"nodeType": "YulIf",
															"src": "3189:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3232:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3257:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3236:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3312:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3321:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3324:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3314:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3314:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3314:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3291:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3295:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3287:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3287:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3302:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:35:15"
															},
															"nodeType": "YulIf",
															"src": "3273:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3337:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3364:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3351:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3351:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3341:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3394:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3403:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3406:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3396:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3396:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3396:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3382:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3390:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3379:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:14:15"
															},
															"nodeType": "YulIf",
															"src": "3376:34:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3460:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3472:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3462:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3462:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3462:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3433:2:15"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3437:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3429:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3446:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3451:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3422:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:37:15"
															},
															"nodeType": "YulIf",
															"src": "3419:57:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3485:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3499:2:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3495:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:11:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3515:16:15",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3525:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3515:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2993:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3004:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3016:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3024:6:15",
														"type": ""
													}
												],
												"src": "2945:592:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3658:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3667:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3670:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3660:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3660:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3660:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3633:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3642:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:32:15"
															},
															"nodeType": "YulIf",
															"src": "3622:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3683:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3706:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3693:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3578:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3589:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3601:6:15",
														"type": ""
													}
												],
												"src": "3542:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3828:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3838:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3850:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3846:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3838:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3880:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3895:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3911:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3916:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3907:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3907:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3920:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3903:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3903:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3891:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3873:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3797:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3808:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3819:4:15",
														"type": ""
													}
												],
												"src": "3727:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4022:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4068:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4077:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4080:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4070:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4070:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4070:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4043:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4052:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4064:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:32:15"
															},
															"nodeType": "YulIf",
															"src": "4032:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4093:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4122:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4103:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4141:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4168:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4179:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4164:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4151:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3980:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3991:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4003:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4011:6:15",
														"type": ""
													}
												],
												"src": "3935:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:244:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4385:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4378:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4419:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4430:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:2:15",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4408:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4408:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4458:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4469:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4454:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4474:34:15",
																		"type": "",
																		"value": "Only the account with OPERATOR_R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4447:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4529:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4540:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4525:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4525:18:15"
																	},
																	{
																		"hexValue": "4f4c452063616e207265766f6b652074686520534254",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4545:24:15",
																		"type": "",
																		"value": "OLE can revoke the SBT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4579:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4591:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4602:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4587:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4579:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4345:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4359:4:15",
														"type": ""
													}
												],
												"src": "4194:418:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:224:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4808:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4819:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4853:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4838:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4858:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4831:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4831:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4881:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4892:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:18:15"
																	},
																	{
																		"hexValue": "546865206d6178206c656e677468206f66206164647265737365732069732031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4897:34:15",
																		"type": "",
																		"value": "The max length of addresses is 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4870:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4952:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4963:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4948:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4948:18:15"
																	},
																	{
																		"hexValue": "3030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4968:4:15",
																		"type": "",
																		"value": "00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4941:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4941:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4982:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5005:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4982:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4768:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4782:4:15",
														"type": ""
													}
												],
												"src": "4617:398:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5052:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5069:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5076:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5081:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5062:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5062:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5112:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5102:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5102:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5133:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5136:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5126:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5020:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5184:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5201:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5208:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5213:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5204:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5204:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5194:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5241:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5244:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5234:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5234:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5265:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5268:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5258:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5152:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5329:130:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5339:31:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5358:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5365:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5354:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:16:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5343:7:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5400:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5402:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5385:7:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5382:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5382:17:15"
															},
															"nodeType": "YulIf",
															"src": "5379:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5431:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5442:7:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5451:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5438:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5438:15:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5311:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5321:3:15",
														"type": ""
													}
												],
												"src": "5284:175:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5519:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5529:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5543:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5546:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5529:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5560:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5590:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5596:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5564:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5637:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5639:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5653:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5649:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5649:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5617:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:26:15"
															},
															"nodeType": "YulIf",
															"src": "5607:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5727:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5748:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5755:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5760:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5751:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5751:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5741:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5741:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5741:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5795:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5785:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5785:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5785:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5820:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5823:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5813:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5813:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5813:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5683:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5706:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5714:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5703:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5680:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5680:38:15"
															},
															"nodeType": "YulIf",
															"src": "5677:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5499:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5508:6:15",
														"type": ""
													}
												],
												"src": "5464:380:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6023:297:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6040:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6085:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6090:2:15",
																		"type": "",
																		"value": "67"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6113:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6109:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206163636f756e7420776974682044454641554c545f4144",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6129:34:15",
																		"type": "",
																		"value": "Only the account with DEFAULT_AD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6102:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6102:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6184:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6195:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6180:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6180:18:15"
																	},
																	{
																		"hexValue": "4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6200:34:15",
																		"type": "",
																		"value": "MIN_ROLE can set the base token "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6173:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6173:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6173:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6255:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6266:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6251:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6251:19:15"
																	},
																	{
																		"hexValue": "555249",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6272:5:15",
																		"type": "",
																		"value": "URI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6244:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6244:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6287:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6299:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6310:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6295:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6287:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6000:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6014:4:15",
														"type": ""
													}
												],
												"src": "5849:471:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6499:237:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6516:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6509:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6509:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6550:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6561:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6546:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6546:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:2:15",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6539:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6539:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6589:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6600:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6585:18:15"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6605:34:15",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6578:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6578:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:15"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6676:17:15",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:45:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6703:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6715:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6726:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6711:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6703:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6476:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6490:4:15",
														"type": ""
													}
												],
												"src": "6325:411:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6915:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6932:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6943:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6966:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6977:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6982:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6955:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6955:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6955:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7005:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7016:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7001:18:15"
																	},
																	{
																		"hexValue": "546865206163636f756e7420646f6573206e6f74206861766520616e79205342",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7021:34:15",
																		"type": "",
																		"value": "The account does not have any SB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6994:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7076:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7087:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7072:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7072:18:15"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7092:3:15",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7065:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7117:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7128:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7113:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7105:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6892:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6906:4:15",
														"type": ""
													}
												],
												"src": "6741:397:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7317:244:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7334:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7345:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7327:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7327:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7327:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7368:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7379:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7364:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7364:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:2:15",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7357:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7407:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7403:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7403:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7423:34:15",
																		"type": "",
																		"value": "Only the account with OPERATOR_R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7396:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7396:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7478:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7489:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7474:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7474:18:15"
																	},
																	{
																		"hexValue": "4f4c452063616e206174746573742074686520534254",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7494:24:15",
																		"type": "",
																		"value": "OLE can attest the SBT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7467:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7528:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7540:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7551:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7536:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7528:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7294:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7308:4:15",
														"type": ""
													}
												],
												"src": "7143:418:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7740:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7757:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7768:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7750:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7750:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7791:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7802:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7787:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7787:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7807:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7780:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7830:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7841:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7826:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7826:18:15"
																	},
																	{
																		"hexValue": "4164647265737320697320656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7846:18:15",
																		"type": "",
																		"value": "Address is empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7819:46:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7874:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7886:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7897:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7874:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7717:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7731:4:15",
														"type": ""
													}
												],
												"src": "7566:340:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8085:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8102:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8113:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8095:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8147:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8132:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8152:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8125:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8125:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8186:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8171:18:15"
																	},
																	{
																		"hexValue": "53425420616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8191:20:15",
																		"type": "",
																		"value": "SBT already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8164:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8164:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8221:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8233:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8244:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8221:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8062:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8076:4:15",
														"type": ""
													}
												],
												"src": "7911:342:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8314:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8334:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8324:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:14:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8324:14:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8347:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8365:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8368:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8355:9:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8355:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8297:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8305:4:15",
														"type": ""
													}
												],
												"src": "8258:121:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8434:135:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8444:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8464:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8458:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8448:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8505:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8512:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8501:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8501:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8519:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8524:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8479:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8479:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8479:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8540:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8556:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8547:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8547:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8540:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8411:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8418:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8426:3:15",
														"type": ""
													}
												],
												"src": "8384:185:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8758:990:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8768:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8779:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "8772:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8789:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8812:6:15"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "8806:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8806:13:15"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "8793:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8828:17:15",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "8842:3:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8832:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8854:11:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8864:1:15",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8858:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8874:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8888:2:15"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "8892:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8884:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8884:18:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8911:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "8941:9:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8952:2:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8937:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:18:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8915:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8994:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8996:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9010:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9018:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9006:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9006:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8996:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8974:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8967:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8967:26:15"
															},
															"nodeType": "YulIf",
															"src": "8964:61:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9034:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9044:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9038:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9105:115:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "9126:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9135:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9140:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9131:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9131:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9119:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9119:33:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9119:33:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9172:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9175:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9165:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9165:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9165:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "9200:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9205:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9193:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9193:17:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9193:17:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9061:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9084:6:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "9092:2:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9081:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9081:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9058:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9058:38:15"
															},
															"nodeType": "YulIf",
															"src": "9055:165:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9270:97:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9291:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "9300:9:15"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9315:3:15",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "9311:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9311:8:15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "9296:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9296:24:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "9284:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9284:37:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9284:37:15"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9334:23:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9345:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9350:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9341:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9341:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9334:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9263:104:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9268:1:15",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9383:313:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9397:52:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "9442:6:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "9412:29:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9412:37:15"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "9401:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9462:10:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9471:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "9466:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9539:111:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "9568:3:15"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "9573:1:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9564:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9564:11:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "9583:7:15"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "9577:5:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9577:14:15"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "9557:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9557:35:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9557:35:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "9609:27:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "9624:7:15"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "9633:2:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9620:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9620:16:15"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "9609:7:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9496:1:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9499:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9493:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9493:13:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "9507:19:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9509:15:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "9518:1:15"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "9521:2:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9514:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9514:10:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9509:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "9489:3:15",
																					"statements": []
																				},
																				"src": "9485:165:15"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9663:23:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9674:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9679:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9670:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9670:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9663:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9376:320:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9381:1:15",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "9236:18:15"
															},
															"nodeType": "YulSwitch",
															"src": "9229:467:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9705:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9730:6:15"
																	},
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "9738:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "9712:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9712:30:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9705:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8726:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8731:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8739:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8750:3:15",
														"type": ""
													}
												],
												"src": "8574:1174:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9800:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9831:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9833:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9833:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9833:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9816:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9827:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9823:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9823:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9813:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9813:17:15"
															},
															"nodeType": "YulIf",
															"src": "9810:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9862:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9873:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9880:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9869:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9862:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9782:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9792:3:15",
														"type": ""
													}
												],
												"src": "9753:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9925:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9942:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9949:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9954:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9945:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9945:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9935:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9935:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9935:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9982:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9985:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10009:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9999:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9893:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10071:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10094:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10096:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10096:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10096:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10091:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10084:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10084:9:15"
															},
															"nodeType": "YulIf",
															"src": "10081:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10125:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10134:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10137:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10125:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10056:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10059:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10065:1:15",
														"type": ""
													}
												],
												"src": "10025:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10182:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10199:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10206:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10211:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10202:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10202:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10192:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10192:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10192:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10239:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10232:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10232:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10232:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10263:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10266:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10256:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10256:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10256:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10150:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10331:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10353:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10355:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10355:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10355:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10347:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10350:1:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10344:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:8:15"
															},
															"nodeType": "YulIf",
															"src": "10341:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10384:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10396:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10399:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10392:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10392:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10384:4:15"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10313:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10316:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10322:4:15",
														"type": ""
													}
												],
												"src": "10282:125:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10450:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10473:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10475:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10475:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10475:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10470:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10463:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10463:9:15"
															},
															"nodeType": "YulIf",
															"src": "10460:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10504:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10513:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10516:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "10509:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10504:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10435:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10438:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10444:1:15",
														"type": ""
													}
												],
												"src": "10412:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10577:80:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10604:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10606:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10606:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10606:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10593:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10600:1:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10596:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10596:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10590:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10590:13:15"
															},
															"nodeType": "YulIf",
															"src": "10587:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10635:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10646:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10649:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10642:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10635:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10560:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10563:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10569:3:15",
														"type": ""
													}
												],
												"src": "10529:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10836:180:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10853:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10864:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10846:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10846:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10846:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10887:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10898:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10883:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10883:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10876:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10876:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10876:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10926:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10937:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10922:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10922:18:15"
																	},
																	{
																		"hexValue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10942:32:15",
																		"type": "",
																		"value": "EnumerableMap: nonexistent key"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10915:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10915:60:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10915:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10984:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10996:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11007:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10992:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10984:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10813:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10827:4:15",
														"type": ""
													}
												],
												"src": "10662:354:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11410:397:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11427:3:15"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11432:25:15",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11420:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11420:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11420:38:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11467:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11487:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11481:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11471:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11529:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11537:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11525:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11525:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11548:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11553:2:15",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11544:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11544:12:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11558:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11503:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11503:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11503:62:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11574:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11588:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11593:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11584:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11584:16:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11578:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11620:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11624:2:15",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11616:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11616:11:15"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11629:19:15",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11609:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11609:40:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11609:40:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11658:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11680:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11674:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11674:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "11662:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11722:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11730:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11718:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11718:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11741:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11745:2:15",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11737:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11737:11:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11750:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11696:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11696:63:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11696:63:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11768:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11783:2:15"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "11787:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11779:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11779:17:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11798:2:15",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11775:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:26:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11768:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11378:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11383:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11391:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11402:3:15",
														"type": ""
													}
												],
												"src": "11021:786:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11864:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11923:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11925:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11925:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11925:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11895:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11888:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11888:9:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11881:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11881:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11903:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11914:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11910:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11910:6:15"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11918:1:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11906:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11906:14:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11900:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11900:21:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11877:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:45:15"
															},
															"nodeType": "YulIf",
															"src": "11874:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11954:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11969:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11972:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11965:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11954:7:15"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11843:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11846:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11852:7:15",
														"type": ""
													}
												],
												"src": "11812:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:89:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12059:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12061:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12061:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12061:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12052:5:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12045:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12045:13:15"
															},
															"nodeType": "YulIf",
															"src": "12042:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12090:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12101:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12112:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12108:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12097:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12097:18:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12090:3:15"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12014:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12024:3:15",
														"type": ""
													}
												],
												"src": "11985:136:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12300:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12317:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12328:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12310:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12310:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12351:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12362:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12347:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12347:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12367:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12340:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12340:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12340:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12390:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12401:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12386:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12386:18:15"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12406:34:15",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12379:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12379:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12379:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12450:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12462:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12473:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12458:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12458:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12450:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12277:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12291:4:15",
														"type": ""
													}
												],
												"src": "12126:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12519:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12536:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12543:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12548:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12539:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12539:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12529:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12529:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12576:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12579:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12569:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12569:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12569:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12600:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12603:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12593:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12593:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12593:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "12487:127:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Only the account with OPERATOR_R\")\n        mstore(add(headStart, 96), \"OLE can revoke the SBT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"The max length of addresses is 1\")\n        mstore(add(headStart, 96), \"00\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"Only the account with DEFAULT_AD\")\n        mstore(add(headStart, 96), \"MIN_ROLE can set the base token \")\n        mstore(add(headStart, 128), \"URI\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"The account does not have any SB\")\n        mstore(add(headStart, 96), \"T\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Only the account with OPERATOR_R\")\n        mstore(add(headStart, 96), \"OLE can attest the SBT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Address is empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"SBT already exists\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := abi_encode_string(value1, ret)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"EnumerableMap: nonexistent key\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c80636d70f7ae116100c3578063a217fddf1161007c578063a217fddf146102e1578063bc8dd06a146102e9578063c87b56dd146102fc578063d547741f1461030f578063eb31403f14610322578063f5b541a61461033557600080fd5b80636d70f7ae1461027a57806370a082311461028d57806374a8f103146102a0578063773c02d4146102b357806391d14854146102c657806395d89b41146102d957600080fd5b80632f2ff15d116101155780632f2ff15d146101fb57806330176e131461020e57806336568abe1461022157806344df8e70146102345780636352211e1461023c5780636c60144a1461026757600080fd5b8063011002df1461015d57806301ffc9a71461017257806306fdde031461019a57806318160ddd146101af578063248a9ca3146101c557806324d7806c146101e8575b600080fd5b61017061016b366004611620565b61034a565b005b610185610180366004611695565b6104ac565b60405190151581526020015b60405180910390f35b6101a26104f2565b60405161019191906116eb565b6101b7610580565b604051908152602001610191565b6101b76101d336600461171e565b60009081526020819052604090206001015490565b6101856101f6366004611753565b610591565b61017061020936600461176e565b61059d565b61017061021c36600461179a565b6105c7565b61017061022f36600461176e565b61065c565b6101706106da565b61024f61024a36600461171e565b610789565b6040516001600160a01b039091168152602001610191565b610170610275366004611620565b6107c8565b610185610288366004611753565b610927565b6101b761029b366004611753565b610941565b6101706102ae366004611753565b61096b565b6101b76102c1366004611753565b610a73565b6101856102d436600461176e565b610a9b565b6101a2610ac4565b6101b7600081565b6101b76102f73660046117fa565b610ad1565b6101a261030a36600461171e565b610bf6565b61017061031d36600461176e565b610c54565b6101b7610330366004611753565b610c79565b6101b7600080516020611c4a83398151915281565b80610363600080516020611c4a83398151915233610a9b565b6103885760405162461bcd60e51b815260040161037f90611824565b60405180910390fd5b60648111156103a95760405162461bcd60e51b815260040161037f9061187a565b60005b818160ff1610156104a657600084848360ff168181106103ce576103ce6118bc565b90506020020160208101906103e39190611753565b90506001600160a01b03811615806104035750610401600482610db9565b155b1561040e5750610494565b600061041b600483610dd5565b9050610428600483610dea565b50610434600182610dff565b5060405181906001600160a01b038416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a360405181906000906001600160a01b03851690600080516020611c6a833981519152908390a450505b8061049e816118e8565b9150506103ac565b50505050565b60006001600160e01b031982166380ac58cd60e01b14806104dd57506001600160e01b03198216635b5e139f60e01b145b806104ec57506104ec82610e0b565b92915050565b600880546104ff90611908565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90611908565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b505050505081565b600061058c6004610e40565b905090565b60006104ec8183610a9b565b6000828152602081905260409020600101546105b881610e4b565b6105c28383610e58565b505050565b6105d2600033610a9b565b6106505760405162461bcd60e51b815260206004820152604360248201527f4f6e6c7920746865206163636f756e7420776974682044454641554c545f414460448201527f4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e2060648201526255524960e81b608482015260a40161037f565b6105c2600a8383611587565b6001600160a01b03811633146106cc5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161037f565b6106d68282610edc565b5050565b336106e6600482610db9565b6107025760405162461bcd60e51b815260040161037f90611943565b600061070f600483610dd5565b905061071c600483610dea565b50610728600182610dff565b5060405181906001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a360405181906000906001600160a01b03851690600080516020611c6a833981519152908390a45050565b60006104ec826040518060400160405280600f81526020016e125b9d985b1a59081d1bdad95b9259608a1b8152506001610f419092919063ffffffff16565b806107e1600080516020611c4a83398151915233610a9b565b6107fd5760405162461bcd60e51b815260040161037f90611984565b606481111561081e5760405162461bcd60e51b815260040161037f9061187a565b60005b818160ff1610156104a657600084848360ff16818110610843576108436118bc565b90506020020160208101906108589190611753565b90506001600160a01b03811615806108765750610876600482610db9565b156108815750610915565b61088f600780546001019055565b600061089a60075490565b90506108a860048383610f56565b506108b560018284610f6c565b5060405181906001600160a01b038416907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a360405181906001600160a01b03841690600090600080516020611c6a833981519152908290a450505b8061091f816118e8565b915050610821565b60006104ec600080516020611c4a83398151915283610a9b565b60008061094f600484610f82565b5090508061095e576000610961565b60015b60ff169392505050565b610983600080516020611c4a83398151915233610a9b565b61099f5760405162461bcd60e51b815260040161037f90611824565b6001600160a01b0381166109c55760405162461bcd60e51b815260040161037f906119da565b6109d0600482610db9565b6109ec5760405162461bcd60e51b815260040161037f90611943565b60006109f9600483610dd5565b9050610a06600483610dea565b50610a12600182610dff565b5060405181906001600160a01b038416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a360405181906000906001600160a01b03851690600080516020611c6a833981519152908390a45050565b60006104ec82604051806060016040528060238152602001611c276023913960049190610fa9565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600980546104ff90611908565b6000610aeb600080516020611c4a83398151915233610a9b565b610b075760405162461bcd60e51b815260040161037f90611984565b6001600160a01b038316610b2d5760405162461bcd60e51b815260040161037f906119da565b610b38600484610db9565b15610b7a5760405162461bcd60e51b815260206004820152601260248201527153425420616c72656164792065786973747360701b604482015260640161037f565b610b8660048484610f56565b50610b9360018385610f6c565b5060405182906001600160a01b038516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a360405182906001600160a01b03851690600090600080516020611c6a833981519152908290a450919050565b60606000600a8054610c0790611908565b905011610c2357604051806020016040528060008152506104ec565b600a610c2e83610fbf565b604051602001610c3f929190611a20565b60405160208183030381529060405292915050565b600082815260208190526040902060010154610c6f81610e4b565b6105c28383610edc565b6000610c93600080516020611c4a83398151915233610a9b565b610caf5760405162461bcd60e51b815260040161037f90611984565b6001600160a01b038216610cd55760405162461bcd60e51b815260040161037f906119da565b610ce0600483610db9565b15610d225760405162461bcd60e51b815260206004820152601260248201527153425420616c72656164792065786973747360701b604482015260640161037f565b610d30600780546001019055565b6000610d3b60075490565b9050610d4960048483610f56565b50610d5660018285610f6c565b5060405181906001600160a01b038516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a360405181906001600160a01b03851690600090600080516020611c6a833981519152908290a492915050565b6000610dce836001600160a01b0384166110bd565b9392505050565b6000610dce836001600160a01b0384166110c9565b6000610dce836001600160a01b038416611139565b6000610dce8383611139565b60006001600160e01b03198216637965db0b60e01b14806104ec57506301ffc9a760e01b6001600160e01b03198316146104ec565b60006104ec82611156565b610e558133611161565b50565b610e628282610a9b565b6106d6576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e983390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610ee68282610a9b565b156106d6576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610f4e8484846111ba565b949350505050565b6000610f4e846001600160a01b03851684611206565b6000610f4e84846001600160a01b038516611206565b6000808080610f9a866001600160a01b038716611223565b909450925050505b9250929050565b6000610f4e846001600160a01b038516846111ba565b606081610fe35750506040805180820190915260018152600360fc1b602082015290565b8160005b811561100d5780610ff781611ac7565b91506110069050600a83611af8565b9150610fe7565b60008167ffffffffffffffff81111561102857611028611b0c565b6040519080825280601f01601f191660200182016040528015611052576020820181803683370190505b5090505b8415610f4e57611067600183611b22565b9150611074600a86611b39565b61107f906030611b4d565b60f81b818381518110611094576110946118bc565b60200101906001600160f81b031916908160001a9053506110b6600a86611af8565b9450611056565b6000610dce838361125d565b6000818152600283016020526040812054801515806110ed57506110ed84846110bd565b610dce5760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015260640161037f565b60008181526002830160205260408120819055610dce8383611275565b60006104ec82611281565b61116b8282610a9b565b6106d6576111788161128b565b61118383602061129d565b604051602001611194929190611b65565b60408051601f198184030181529082905262461bcd60e51b825261037f916004016116eb565b6000828152600284016020526040812054801515806111de57506111de85856110bd565b83906111fd5760405162461bcd60e51b815260040161037f91906116eb565b50949350505050565b60008281526002840160205260408120829055610f4e8484611439565b60008181526002830160205260408120548190806112525761124585856110bd565b925060009150610fa29050565b600192509050610fa2565b60008181526001830160205260408120541515610dce565b6000610dce8383611445565b60006104ec825490565b60606104ec6001600160a01b03831660145b606060006112ac836002611bda565b6112b7906002611b4d565b67ffffffffffffffff8111156112cf576112cf611b0c565b6040519080825280601f01601f1916602001820160405280156112f9576020820181803683370190505b509050600360fc1b81600081518110611314576113146118bc565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611343576113436118bc565b60200101906001600160f81b031916908160001a9053506000611367846002611bda565b611372906001611b4d565b90505b60018111156113ea576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113a6576113a66118bc565b1a60f81b8282815181106113bc576113bc6118bc565b60200101906001600160f81b031916908160001a90535060049490941c936113e381611bf9565b9050611375565b508315610dce5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161037f565b6000610dce8383611538565b6000818152600183016020526040812054801561152e576000611469600183611b22565b855490915060009061147d90600190611b22565b90508181146114e257600086600001828154811061149d5761149d6118bc565b90600052602060002001549050808760000184815481106114c0576114c06118bc565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806114f3576114f3611c10565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104ec565b60009150506104ec565b600081815260018301602052604081205461157f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104ec565b5060006104ec565b82805461159390611908565b90600052602060002090601f0160209004810192826115b557600085556115fb565b82601f106115ce5782800160ff198235161785556115fb565b828001600101855582156115fb579182015b828111156115fb5782358255916020019190600101906115e0565b5061160792915061160b565b5090565b5b80821115611607576000815560010161160c565b6000806020838503121561163357600080fd5b823567ffffffffffffffff8082111561164b57600080fd5b818501915085601f83011261165f57600080fd5b81358181111561166e57600080fd5b8660208260051b850101111561168357600080fd5b60209290920196919550909350505050565b6000602082840312156116a757600080fd5b81356001600160e01b031981168114610dce57600080fd5b60005b838110156116da5781810151838201526020016116c2565b838111156104a65750506000910152565b602081526000825180602084015261170a8160408501602087016116bf565b601f01601f19169190910160400192915050565b60006020828403121561173057600080fd5b5035919050565b80356001600160a01b038116811461174e57600080fd5b919050565b60006020828403121561176557600080fd5b610dce82611737565b6000806040838503121561178157600080fd5b8235915061179160208401611737565b90509250929050565b600080602083850312156117ad57600080fd5b823567ffffffffffffffff808211156117c557600080fd5b818501915085601f8301126117d957600080fd5b8135818111156117e857600080fd5b86602082850101111561168357600080fd5b6000806040838503121561180d57600080fd5b61181683611737565b946020939093013593505050565b60208082526036908201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260408201527513d3114818d85b881c995d9bdad9481d1a194814d09560521b606082015260800190565b60208082526022908201527f546865206d6178206c656e677468206f66206164647265737365732069732031604082015261030360f41b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156118ff576118ff6118d2565b60010192915050565b600181811c9082168061191c57607f821691505b6020821081141561193d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f546865206163636f756e7420646f6573206e6f74206861766520616e792053426040820152601560fa1b606082015260800190565b60208082526036908201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260408201527513d3114818d85b88185d1d195cdd081d1a194814d09560521b606082015260800190565b60208082526010908201526f4164647265737320697320656d70747960801b604082015260600190565b60008151611a168185602086016116bf565b9290920192915050565b600080845481600182811c915080831680611a3c57607f831692505b6020808410821415611a5c57634e487b7160e01b86526022600452602486fd5b818015611a705760018114611a8157611aae565b60ff19861689528489019650611aae565b60008b81526020902060005b86811015611aa65781548b820152908501908301611a8d565b505084890196505b505050505050611abe8185611a04565b95945050505050565b6000600019821415611adb57611adb6118d2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611b0757611b07611ae2565b500490565b634e487b7160e01b600052604160045260246000fd5b600082821015611b3457611b346118d2565b500390565b600082611b4857611b48611ae2565b500690565b60008219821115611b6057611b606118d2565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b9d8160178501602088016116bf565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611bce8160288401602088016116bf565b01602801949350505050565b6000816000190483118215151615611bf457611bf46118d2565b500290565b600081611c0857611c086118d2565b506000190190565b634e487b7160e01b600052603160045260246000fdfe5468652077616c6c657420686173206e6f7420617474657374656420616e792053425497667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122052c2977ea14240fafbdac993288dfecabba0725a9315fdd690ba00a82372a97664736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D70F7AE GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xBC8DD06A EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xEB31403F EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x30176E13 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x6C60144A EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11002DF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x1E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x170 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x179A JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x171E JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x176E JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST DUP1 PUSH2 0x363 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x3CE JUMPI PUSH2 0x3CE PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x403 JUMPI POP PUSH2 0x401 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x40E JUMPI POP PUSH2 0x494 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B PUSH1 0x4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x428 PUSH1 0x4 DUP4 PUSH2 0xDEA JUMP JUMPDEST POP PUSH2 0x434 PUSH1 0x1 DUP3 PUSH2 0xDFF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0x49E DUP2 PUSH2 0x18E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3AC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4DD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4EC JUMPI POP PUSH2 0x4EC DUP3 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x4FF SWAP1 PUSH2 0x1908 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52B SWAP1 PUSH2 0x1908 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C PUSH1 0x4 PUSH2 0xE40 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP2 DUP4 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5B8 DUP2 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x5C2 DUP4 DUP4 PUSH2 0xE58 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH1 0x0 CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E7420776974682044454641554C545F4144 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4D494E5F524F4C452063616E2073657420746865206261736520746F6B656E20 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x555249 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x5C2 PUSH1 0xA DUP4 DUP4 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x6D6 DUP3 DUP3 PUSH2 0xEDC JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x6E6 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F PUSH1 0x4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C PUSH1 0x4 DUP4 PUSH2 0xDEA JUMP JUMPDEST POP PUSH2 0x728 PUSH1 0x1 DUP3 PUSH2 0xDFF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x7E1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x843 JUMPI PUSH2 0x843 PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x876 JUMPI POP PUSH2 0x876 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST ISZERO PUSH2 0x881 JUMPI POP PUSH2 0x915 JUMP JUMPDEST PUSH2 0x88F PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89A PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A8 PUSH1 0x4 DUP4 DUP4 PUSH2 0xF56 JUMP JUMPDEST POP PUSH2 0x8B5 PUSH1 0x1 DUP3 DUP5 PUSH2 0xF6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0x91F DUP2 PUSH2 0x18E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x94F PUSH1 0x4 DUP5 PUSH2 0xF82 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x95E JUMPI PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x983 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x9D0 PUSH1 0x4 DUP3 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F9 PUSH1 0x4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0xA06 PUSH1 0x4 DUP4 PUSH2 0xDEA JUMP JUMPDEST POP PUSH2 0xA12 PUSH1 0x1 DUP3 PUSH2 0xDFF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C27 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x4 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x4FF SWAP1 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0xB38 PUSH1 0x4 DUP5 PUSH2 0xDB9 JUMP JUMPDEST ISZERO PUSH2 0xB7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53425420616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0xB86 PUSH1 0x4 DUP5 DUP5 PUSH2 0xF56 JUMP JUMPDEST POP PUSH2 0xB93 PUSH1 0x1 DUP4 DUP6 PUSH2 0xF6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA DUP1 SLOAD PUSH2 0xC07 SWAP1 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP GT PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0xA PUSH2 0xC2E DUP4 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3F SWAP3 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC6F DUP2 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x5C2 DUP4 DUP4 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0xCE0 PUSH1 0x4 DUP4 PUSH2 0xDB9 JUMP JUMPDEST ISZERO PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53425420616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0xD30 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3B PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD49 PUSH1 0x4 DUP5 DUP4 PUSH2 0xF56 JUMP JUMPDEST POP PUSH2 0xD56 PUSH1 0x1 DUP3 DUP6 PUSH2 0xF6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C6A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG4 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4EC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0xE55 DUP2 CALLER PUSH2 0x1161 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE62 DUP3 DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE98 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xEE6 DUP3 DUP3 PUSH2 0xA9B JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 DUP5 DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF9A DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1223 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x100D JUMPI DUP1 PUSH2 0xFF7 DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1006 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1028 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1052 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF4E JUMPI PUSH2 0x1067 PUSH1 0x1 DUP4 PUSH2 0x1B22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1074 PUSH1 0xA DUP7 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x107F SWAP1 PUSH1 0x30 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1094 JUMPI PUSH2 0x1094 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10B6 PUSH1 0xA DUP7 PUSH2 0x1AF8 JUMP JUMPDEST SWAP5 POP PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x10ED JUMPI POP PUSH2 0x10ED DUP5 DUP5 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x116B DUP3 DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x6D6 JUMPI PUSH2 0x1178 DUP2 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1183 DUP4 PUSH1 0x20 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1194 SWAP3 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x37F SWAP2 PUSH1 0x4 ADD PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x11DE JUMPI POP PUSH2 0x11DE DUP6 DUP6 PUSH2 0x10BD JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0xF4E DUP5 DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x1252 JUMPI PUSH2 0x1245 DUP6 DUP6 PUSH2 0x10BD JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0xFA2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4EC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12AC DUP4 PUSH1 0x2 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x12B7 SWAP1 PUSH1 0x2 PUSH2 0x1B4D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12CF JUMPI PUSH2 0x12CF PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1314 JUMPI PUSH2 0x1314 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1367 DUP5 PUSH1 0x2 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1372 SWAP1 PUSH1 0x1 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13EA JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x13A6 JUMPI PUSH2 0x13A6 PUSH2 0x18BC JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BC PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x13E3 DUP2 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1375 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP4 DUP4 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x152E JUMPI PUSH1 0x0 PUSH2 0x1469 PUSH1 0x1 DUP4 PUSH2 0x1B22 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x147D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x149D JUMPI PUSH2 0x149D PUSH2 0x18BC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x14C0 JUMPI PUSH2 0x14C0 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x14F3 JUMPI PUSH2 0x14F3 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x157F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4EC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4EC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x1908 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x15FB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x15CE JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x15FB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x15FB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15FB JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x15E0 JUMP JUMPDEST POP PUSH2 0x1607 SWAP3 SWAP2 POP PUSH2 0x160B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x165F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x166E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16DA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x170A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x174E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP3 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1791 PUSH1 0x20 DUP5 ADD PUSH2 0x1737 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x180D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1816 DUP4 PUSH2 0x1737 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x13D3114818D85B881C995D9BDAD9481D1A194814D095 PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206D6178206C656E677468206F66206164647265737365732069732031 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x303 PUSH1 0xF4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x18FF JUMPI PUSH2 0x18FF PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x191C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x193D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F74206861766520616E79205342 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x13D3114818D85B88185D1D195CDD081D1A194814D095 PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x4164647265737320697320656D707479 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1A16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1A3C JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1A5C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A81 JUMPI PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1AA6 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1A8D JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x1ABE DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADB PUSH2 0x18D2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B07 JUMPI PUSH2 0x1B07 PUSH2 0x1AE2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x18D2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B48 JUMPI PUSH2 0x1B48 PUSH2 0x1AE2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B60 PUSH2 0x18D2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1B9D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1BCE DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BF JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF4 PUSH2 0x18D2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C08 JUMPI PUSH2 0x1C08 PUSH2 0x18D2 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SLOAD PUSH9 0x652077616C6C657420 PUSH9 0x6173206E6F74206174 PUSH21 0x657374656420616E792053425497667070C54EF182 0xB0 CREATE2 DUP6 DUP12 SUB 0x4B 0xEA 0xC1 0xB6 RETURN ADDMOD SWAP11 LOG2 0xD3 XOR DUP12 0xB1 0xE8 SWAP3 SWAP16 0x4F 0xA9 0xB9 0x29 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xC2 SWAP8 PUSH31 0xA14240FAFBDAC993288DFECABBA0725A9315FDD690BA00A82372A97664736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "628:6655:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4301:756;;;;;;:::i;:::-;;:::i;:::-;;6954:327;;;;;;:::i;:::-;;:::i;:::-;;;1090:14:15;;1083:22;1065:41;;1053:2;1038:18;6954:327:0;;;;;;;;1112:18;;;:::i;:::-;;;;;;;:::i;6229:97::-;;;:::i;:::-;;;1914:25:15;;;1902:2;1887:18;6229:97:0;1768:177:15;4374:129:1;;;;;;:::i;:::-;4448:7;4474:12;;;;;;;;;;:22;;;;4374:129;6459:123:0;;;;;;:::i;:::-;;:::i;4799:145:1:-;;;;;;:::i;:::-;;:::i;5515:255:0:-;;;;;;:::i;:::-;;:::i;5908:214:1:-;;;;;;:::i;:::-;;:::i;5063:397:0:-;;;:::i;6092:131::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3891:32:15;;;3873:51;;3861:2;3846:18;6092:131:0;3727:203:15;2973:783:0;;;;;;:::i;:::-;;:::i;6332:121::-;;;;;;:::i;:::-;;:::i;5776:157::-;;;;;;:::i;:::-;;:::i;3762:533::-;;;;;;:::i;:::-;;:::i;5939:147::-;;;;;;:::i;:::-;;:::i;2891:145:1:-;;;;;;:::i;:::-;;:::i;1157:20:0:-;;;:::i;2023:49:1:-;;2068:4;2023:49;;1847:528:0;;;;;;:::i;:::-;;:::i;6648:239::-;;;;;;:::i;:::-;;:::i;5224:147:1:-;;;;;;:::i;:::-;;:::i;2381:586:0:-;;;;;;:::i;:::-;;:::i;1252:66::-;;-1:-1:-1;;;;;;;;;;;1252:66:0;;4301:756;4388:5;4432:36;-1:-1:-1;;;;;;;;;;;719:10:9;2891:145:1;:::i;4432:36:0:-;4411:137;;;;-1:-1:-1;;;4411:137:0;;;;;;;:::i;:::-;;;;;;;;;4580:3;4566:10;:17;;4558:64;;;;-1:-1:-1;;;4558:64:0;;;;;;;:::i;:::-;4638:7;4633:418;4655:10;4651:1;:14;;;4633:418;;;4686:12;4701:5;;4707:1;4701:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4686:23;-1:-1:-1;;;;;;4728:18:0;;;;:47;;-1:-1:-1;4751:24:0;:9;4770:4;4751:18;:24::i;:::-;4750:25;4728:47;4724:94;;;4795:8;;;4724:94;4832:15;4850:19;:9;4864:4;4850:13;:19::i;:::-;4832:37;-1:-1:-1;4884:22:0;:9;4901:4;4884:16;:22::i;:::-;-1:-1:-1;4920:25:0;:9;4937:7;4920:16;:25::i;:::-;-1:-1:-1;4965:21:0;;4978:7;;-1:-1:-1;;;;;4965:21:0;;;;;;;;5005:35;;5032:7;;5028:1;;-1:-1:-1;;;;;5005:35:0;;;-1:-1:-1;;;;;;;;;;;5005:35:0;5028:1;;5005:35;4672:379;;4633:418;4667:3;;;;:::i;:::-;;;;4633:418;;;;4357:700;4301:756;;:::o;6954:327::-;7079:4;-1:-1:-1;;;;;;7118:40:0;;-1:-1:-1;;;7118:40:0;;:104;;-1:-1:-1;;;;;;;7174:48:0;;-1:-1:-1;;;7174:48:0;7118:104;:156;;;;7238:36;7262:11;7238:23;:36::i;:::-;7099:175;6954:327;-1:-1:-1;;6954:327:0:o;1112:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6229:97::-;6275:7;6301:18;:9;:16;:18::i;:::-;6294:25;;6229:97;:::o;6459:123::-;6516:4;6539:36;6516:4;6567:7;6539;:36::i;4799:145:1:-;4448:7;4474:12;;;;;;;;;;:22;;;2501:16;2512:4;2501:10;:16::i;:::-;4912:25:::1;4923:4;4929:7;4912:10;:25::i;:::-;4799:145:::0;;;:::o;5515:255:0:-;5599:41;2068:4:1;719:10:9;2891:145:1;:::i;5599:41:0:-;5578:155;;;;-1:-1:-1;;;5578:155:0;;6051:2:15;5578:155:0;;;6033:21:15;6090:2;6070:18;;;6063:30;6129:34;6109:18;;;6102:62;6200:34;6180:18;;;6173:62;-1:-1:-1;;;6251:19:15;;;6244:34;6295:19;;5578:155:0;5849:471:15;5578:155:0;5744:19;:13;5760:3;;5744:19;:::i;5908:214:1:-;-1:-1:-1;;;;;6003:23:1;;719:10:9;6003:23:1;5995:83;;;;-1:-1:-1;;;5995:83:1;;6527:2:15;5995:83:1;;;6509:21:15;6566:2;6546:18;;;6539:30;6605:34;6585:18;;;6578:62;-1:-1:-1;;;6656:18:15;;;6649:45;6711:19;;5995:83:1;6325:411:15;5995:83:1;6089:26;6101:4;6107:7;6089:11;:26::i;:::-;5908:214;;:::o;5063:397:0:-;719:10:9;5159:26:0;:9;719:10:9;5159:18:0;:26::i;:::-;5138:106;;;;-1:-1:-1;;;5138:106:0;;;;;;;:::i;:::-;5255:15;5273:21;:9;5287:6;5273:13;:21::i;:::-;5255:39;-1:-1:-1;5305:24:0;:9;5322:6;5305:16;:24::i;:::-;-1:-1:-1;5339:25:0;:9;5356:7;5339:16;:25::i;:::-;-1:-1:-1;5380:21:0;;5393:7;;-1:-1:-1;;;;;5380:21:0;;;;;;;;5416:37;;5445:7;;5441:1;;-1:-1:-1;;;;;5416:37:0;;;-1:-1:-1;;;;;;;;;;;5416:37:0;5441:1;;5416:37;5088:372;;5063:397::o;6092:131::-;6149:7;6175:41;6189:7;6175:41;;;;;;;;;;;;;-1:-1:-1;;;6175:41:0;;;:9;:13;;:41;;;;;:::i;2973:783::-;3060:5;3104:36;-1:-1:-1;;;;;;;;;;;719:10:9;2891:145:1;:::i;3104:36:0:-;3083:137;;;;-1:-1:-1;;;3083:137:0;;;;;;;:::i;:::-;3252:3;3238:10;:17;;3230:64;;;;-1:-1:-1;;;3230:64:0;;;;;;;:::i;:::-;3310:7;3305:445;3327:10;3323:1;:14;;;3305:445;;;3358:10;3371:5;;3377:1;3371:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3358:21;-1:-1:-1;;;;;;3398:16:0;;;;:42;;-1:-1:-1;3418:22:0;:9;3437:2;3418:18;:22::i;:::-;3394:89;;;3460:8;;;3394:89;3497:20;:8;1032:19:10;;1050:1;1032:19;;;945:123;3497:20:0;3531:15;3549:18;:8;918:14:10;;827:112;3549:18:0;3531:36;-1:-1:-1;3582:26:0;:9;3596:2;3531:36;3582:13;:26::i;:::-;-1:-1:-1;3622:26:0;:9;3636:7;3645:2;3622:13;:26::i;:::-;-1:-1:-1;3668:19:0;;3679:7;;-1:-1:-1;;;;;3668:19:0;;;;;;;;3706:33;;3731:7;;-1:-1:-1;;;;;3706:33:0;;;3723:1;;-1:-1:-1;;;;;;;;;;;3706:33:0;3723:1;;3706:33;3344:406;;3305:445;3339:3;;;;:::i;:::-;;;;3305:445;;6332:121;6392:4;6415:31;-1:-1:-1;;;;;;;;;;;6438:7:0;6415;:31::i;5776:157::-;5833:7;;5871:23;:9;5888:5;5871:16;:23::i;:::-;5852:42;;;5911:7;:15;;5925:1;5911:15;;;5921:1;5911:15;5904:22;;;5776:157;-1:-1:-1;;;5776:157:0:o;3762:533::-;3832:36;-1:-1:-1;;;;;;;;;;;719:10:9;2891:145:1;:::i;3832:36:0:-;3811:137;;;;-1:-1:-1;;;3811:137:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3966:18:0;;3958:47;;;;-1:-1:-1;;;3958:47:0;;;;;;;:::i;:::-;4023:24;:9;4042:4;4023:18;:24::i;:::-;4015:70;;;;-1:-1:-1;;;4015:70:0;;;;;;;:::i;:::-;4096:15;4114:19;:9;4128:4;4114:13;:19::i;:::-;4096:37;-1:-1:-1;4144:22:0;:9;4161:4;4144:16;:22::i;:::-;-1:-1:-1;4176:25:0;:9;4193:7;4176:16;:25::i;:::-;-1:-1:-1;4217:21:0;;4230:7;;-1:-1:-1;;;;;4217:21:0;;;;;;;;4253:35;;4280:7;;4276:1;;-1:-1:-1;;;;;4253:35:0;;;-1:-1:-1;;;;;;;;;;;4253:35:0;4276:1;;4253:35;3801:494;3762:533;:::o;5939:147::-;5995:7;6021:58;6035:4;6021:58;;;;;;;;;;;;;;;;;:9;;:58;:13;:58::i;2891:145:1:-;2977:4;3000:12;;;;;;;;;;;-1:-1:-1;;;;;3000:29:1;;;;;;;;;;;;;;;2891:145::o;1157:20:0:-;;;;;;;:::i;1847:528::-;1912:7;1952:36;-1:-1:-1;;;;;;;;;;;719:10:9;2891:145:1;:::i;1952:36:0:-;1931:137;;;;-1:-1:-1;;;1931:137:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2086:16:0;;2078:45;;;;-1:-1:-1;;;2078:45:0;;;;;;;:::i;:::-;2142:22;:9;2161:2;2142:18;:22::i;:::-;2141:23;2133:54;;;;-1:-1:-1;;;2133:54:0;;8113:2:15;2133:54:0;;;8095:21:15;8152:2;8132:18;;;8125:30;-1:-1:-1;;;8171:18:15;;;8164:48;8229:18;;2133:54:0;7911:342:15;2133:54:0;2198:26;:9;2212:2;2216:7;2198:13;:26::i;:::-;-1:-1:-1;2234:26:0;:9;2248:7;2257:2;2234:13;:26::i;:::-;-1:-1:-1;2276:19:0;;2287:7;;-1:-1:-1;;;;;2276:19:0;;;;;;;;2310:33;;2335:7;;-1:-1:-1;;;;;2310:33:0;;;2327:1;;-1:-1:-1;;;;;;;;;;;2310:33:0;2327:1;;2310:33;-1:-1:-1;2361:7:0;1847:528;-1:-1:-1;1847:528:0:o;6648:239::-;6706:13;6780:1;6756:13;6750:27;;;;;:::i;:::-;;;:31;:130;;;;;;;;;;;;;;;;;6824:13;6839:18;:7;:16;:18::i;:::-;6807:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6731:149;6648:239;-1:-1:-1;;6648:239:0:o;5224:147:1:-;4448:7;4474:12;;;;;;;;;;:22;;;2501:16;2512:4;2501:10;:16::i;:::-;5338:26:::1;5350:4;5356:7;5338:11;:26::i;2381:586:0:-:0;2427:7;2467:36;-1:-1:-1;;;;;;;;;;;719:10:9;2891:145:1;:::i;2467:36:0:-;2446:137;;;;-1:-1:-1;;;2446:137:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2601:16:0;;2593:45;;;;-1:-1:-1;;;2593:45:0;;;;;;;:::i;:::-;2657:22;:9;2676:2;2657:18;:22::i;:::-;2656:23;2648:54;;;;-1:-1:-1;;;2648:54:0;;8113:2:15;2648:54:0;;;8095:21:15;8152:2;8132:18;;;8125:30;-1:-1:-1;;;8171:18:15;;;8164:48;8229:18;;2648:54:0;7911:342:15;2648:54:0;2713:20;:8;1032:19:10;;1050:1;1032:19;;;945:123;2713:20:0;2743:15;2761:18;:8;918:14:10;;827:112;2761:18:0;2743:36;-1:-1:-1;2790:26:0;:9;2804:2;2743:36;2790:13;:26::i;:::-;-1:-1:-1;2826:26:0;:9;2840:7;2849:2;2826:13;:26::i;:::-;-1:-1:-1;2868:19:0;;2879:7;;-1:-1:-1;;;;;2868:19:0;;;;;;;;2902:33;;2927:7;;-1:-1:-1;;;;;2902:33:0;;;2919:1;;-1:-1:-1;;;;;;;;;;;2902:33:0;2919:1;;2902:33;2953:7;2381:586;-1:-1:-1;;2381:586:0:o;12315:166:11:-;12399:4;12422:52;12431:3;-1:-1:-1;;;;;12451:21:11;;12422:8;:52::i;:::-;12415:59;12315:166;-1:-1:-1;;;12315:166:11:o;13785:168::-;13864:7;13898:47;13902:3;-1:-1:-1;;;;;13922:21:11;;13898:3;:47::i;12079:157::-;12156:4;12179:50;12186:3;-1:-1:-1;;;;;12206:21:11;;12179:6;:50::i;8987:139::-;9064:4;9087:32;9094:3;9114;9087:6;:32::i;2602:202:1:-;2687:4;-1:-1:-1;;;;;;2710:47:1;;-1:-1:-1;;;2710:47:1;;:87;;-1:-1:-1;;;;;;;;;;949:40:2;;;2761:36:1;841:155:2;12564:120:11;12633:7;12659:18;12666:3;12659:6;:18::i;3330:103:1:-;3396:30;3407:4;719:10:9;3396::1;:30::i;:::-;3330:103;:::o;7457:233::-;7540:22;7548:4;7554:7;7540;:22::i;:::-;7535:149;;7578:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7578:29:1;;;;;;;;;:36;;-1:-1:-1;;7578:36:1;7610:4;7578:36;;;7660:12;719:10:9;;640:96;7660:12:1;-1:-1:-1;;;;;7633:40:1;7651:7;-1:-1:-1;;;;;7633:40:1;7645:4;7633:40;;;;;;;;;;7457:233;;:::o;7861:234::-;7944:22;7952:4;7958:7;7944;:22::i;:::-;7940:149;;;8014:5;7982:12;;;;;;;;;;;-1:-1:-1;;;;;7982:29:1;;;;;;;;;;:37;;-1:-1:-1;;7982:37:1;;;8038:40;719:10:9;;7982:12:1;;8038:40;;8014:5;8038:40;7861:234;;:::o;11143:240:11:-;11280:7;11330:43;11334:3;11354;11360:12;11330:3;:43::i;:::-;11322:52;11143:240;-1:-1:-1;;;;11143:240:11:o;11708:212::-;11827:4;11850:63;11854:3;-1:-1:-1;;;;;11874:21:11;;11906:5;11850:3;:63::i;8616:212::-;8735:4;8758:63;8762:3;8782;-1:-1:-1;;;;;8796:23:11;;8758:3;:63::i;13395:238::-;13477:4;;;;13534:50;13541:3;-1:-1:-1;;;;;13561:21:11;;13534:6;:50::i;:::-;13502:82;;-1:-1:-1;13502:82:11;-1:-1:-1;;;13395:238:11;;;;;;:::o;14233:240::-;14370:7;14404:61;14408:3;-1:-1:-1;;;;;14428:21:11;;14452:12;14404:3;:61::i;392:703:14:-;448:13;665:10;661:51;;-1:-1:-1;;691:10:14;;;;;;;;;;;;-1:-1:-1;;;691:10:14;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:14;;-1:-1:-1;837:2:14;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:14;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:14;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:14;;;;;;;;-1:-1:-1;1036:11:14;1045:2;1036:11;;:::i;:::-;;;908:150;;3054:140:11;3141:4;3164:23;:3;3183;3164:18;:23::i;4543:247::-;4625:7;4660:16;;;:11;;;:16;;;;;;4694:10;;;;:32;;;4708:18;4717:3;4722;4708:8;:18::i;:::-;4686:75;;;;-1:-1:-1;;;4686:75:11;;10864:2:15;4686:75:11;;;10846:21:15;10903:2;10883:18;;;10876:30;10942:32;10922:18;;;10915:60;10992:18;;4686:75:11;10662:354:15;2811:164:11;2891:4;2914:16;;;:11;;;:16;;;;;2907:23;;;2947:21;2914:3;2926;2947:16;:21::i;3284:123::-;3356:7;3382:18;:3;:16;:18::i;3714:479:1:-;3802:22;3810:4;3816:7;3802;:22::i;:::-;3797:390;;3985:28;4005:7;3985:19;:28::i;:::-;4084:38;4112:4;4119:2;4084:19;:38::i;:::-;3892:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3892:252:1;;;;;;;;;;-1:-1:-1;;;3840:336:1;;;;;;;:::i;5072:285:11:-;5212:7;5247:16;;;:11;;;:16;;;;;;5281:10;;;;:32;;;5295:18;5304:3;5309;5295:8;:18::i;:::-;5315:12;5273:55;;;;;-1:-1:-1;;;5273:55:11;;;;;;;;:::i;:::-;-1:-1:-1;5345:5:11;5072:285;-1:-1:-1;;;;5072:285:11:o;2439:204::-;2561:4;2577:16;;;:11;;;:16;;;;;:24;;;2618:18;2577:3;2589;2618:13;:18::i;4093:298::-;4178:4;4219:16;;;:11;;;:16;;;;;;4178:4;;4249:19;4245:140;;4292:18;4301:3;4306;4292:8;:18::i;:::-;4284:39;-1:-1:-1;4320:1:11;;-1:-1:-1;4284:39:11;;-1:-1:-1;4284:39:11;4245:140;4362:4;;-1:-1:-1;4368:5:11;-1:-1:-1;4354:20:11;;6319:138:12;6399:4;4250:19;;;:12;;;:19;;;;;;:24;;6422:28;4154:127;6109:129;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;6538:115::-;6601:7;6627:19;6635:3;4444:18;;4362:107;2245:149:14;2303:13;2335:52;-1:-1:-1;;;;;2347:22:14;;288:2;1652:441;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:14;;1752:47;;-1:-1:-1;;;1809:6:14;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1809:15:14;;;;;;;;;-1:-1:-1;;;1834:6:14;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1834:15:14;;;;;;;;-1:-1:-1;1864:9:14;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:14;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1918:37:14;;;;;;;;-1:-1:-1;1979:1:14;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:14;;2000:55;;;;-1:-1:-1;;;2000:55:14;;12328:2:15;2000:55:14;;;12310:21:15;;;12347:18;;;12340:30;12406:34;12386:18;;;12379:62;12458:18;;2000:55:14;12126:356:15;5818:123:12;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:12;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;2113:404;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:12;2488:12;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:615:15;100:6;108;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;217:9;204:23;246:18;287:2;279:6;276:14;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;448:2;435:16;474:2;466:6;463:14;460:34;;;490:1;487;480:12;460:34;543:7;538:2;528:6;525:1;521:14;517:2;513:23;509:32;506:45;503:65;;;564:1;561;554:12;503:65;595:2;587:11;;;;;617:6;;-1:-1:-1;14:615:15;;-1:-1:-1;;;;14:615:15:o;634:286::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;787:23;;-1:-1:-1;;;;;;839:32:15;;829:43;;819:71;;886:1;883;876:12;1117:258;1189:1;1199:113;1213:6;1210:1;1207:13;1199:113;;;1289:11;;;1283:18;1270:11;;;1263:39;1235:2;1228:10;1199:113;;;1330:6;1327:1;1324:13;1321:48;;;-1:-1:-1;;1365:1:15;1347:16;;1340:27;1117:258::o;1380:383::-;1529:2;1518:9;1511:21;1492:4;1561:6;1555:13;1604:6;1599:2;1588:9;1584:18;1577:34;1620:66;1679:6;1674:2;1663:9;1659:18;1654:2;1646:6;1642:15;1620:66;:::i;:::-;1747:2;1726:15;-1:-1:-1;;1722:29:15;1707:45;;;;1754:2;1703:54;;1380:383;-1:-1:-1;;1380:383:15:o;1950:180::-;2009:6;2062:2;2050:9;2041:7;2037:23;2033:32;2030:52;;;2078:1;2075;2068:12;2030:52;-1:-1:-1;2101:23:15;;1950:180;-1:-1:-1;1950:180:15:o;2317:173::-;2385:20;;-1:-1:-1;;;;;2434:31:15;;2424:42;;2414:70;;2480:1;2477;2470:12;2414:70;2317:173;;;:::o;2495:186::-;2554:6;2607:2;2595:9;2586:7;2582:23;2578:32;2575:52;;;2623:1;2620;2613:12;2575:52;2646:29;2665:9;2646:29;:::i;2686:254::-;2754:6;2762;2815:2;2803:9;2794:7;2790:23;2786:32;2783:52;;;2831:1;2828;2821:12;2783:52;2867:9;2854:23;2844:33;;2896:38;2930:2;2919:9;2915:18;2896:38;:::i;:::-;2886:48;;2686:254;;;;;:::o;2945:592::-;3016:6;3024;3077:2;3065:9;3056:7;3052:23;3048:32;3045:52;;;3093:1;3090;3083:12;3045:52;3133:9;3120:23;3162:18;3203:2;3195:6;3192:14;3189:34;;;3219:1;3216;3209:12;3189:34;3257:6;3246:9;3242:22;3232:32;;3302:7;3295:4;3291:2;3287:13;3283:27;3273:55;;3324:1;3321;3314:12;3273:55;3364:2;3351:16;3390:2;3382:6;3379:14;3376:34;;;3406:1;3403;3396:12;3376:34;3451:7;3446:2;3437:6;3433:2;3429:15;3425:24;3422:37;3419:57;;;3472:1;3469;3462:12;3935:254;4003:6;4011;4064:2;4052:9;4043:7;4039:23;4035:32;4032:52;;;4080:1;4077;4070:12;4032:52;4103:29;4122:9;4103:29;:::i;:::-;4093:39;4179:2;4164:18;;;;4151:32;;-1:-1:-1;;;3935:254:15:o;4194:418::-;4396:2;4378:21;;;4435:2;4415:18;;;4408:30;4474:34;4469:2;4454:18;;4447:62;-1:-1:-1;;;4540:2:15;4525:18;;4518:52;4602:3;4587:19;;4194:418::o;4617:398::-;4819:2;4801:21;;;4858:2;4838:18;;;4831:30;4897:34;4892:2;4877:18;;4870:62;-1:-1:-1;;;4963:2:15;4948:18;;4941:32;5005:3;4990:19;;4617:398::o;5020:127::-;5081:10;5076:3;5072:20;5069:1;5062:31;5112:4;5109:1;5102:15;5136:4;5133:1;5126:15;5152:127;5213:10;5208:3;5204:20;5201:1;5194:31;5244:4;5241:1;5234:15;5268:4;5265:1;5258:15;5284:175;5321:3;5365:4;5358:5;5354:16;5394:4;5385:7;5382:17;5379:43;;;5402:18;;:::i;:::-;5451:1;5438:15;;5284:175;-1:-1:-1;;5284:175:15:o;5464:380::-;5543:1;5539:12;;;;5586;;;5607:61;;5661:4;5653:6;5649:17;5639:27;;5607:61;5714:2;5706:6;5703:14;5683:18;5680:38;5677:161;;;5760:10;5755:3;5751:20;5748:1;5741:31;5795:4;5792:1;5785:15;5823:4;5820:1;5813:15;5677:161;;5464:380;;;:::o;6741:397::-;6943:2;6925:21;;;6982:2;6962:18;;;6955:30;7021:34;7016:2;7001:18;;6994:62;-1:-1:-1;;;7087:2:15;7072:18;;7065:31;7128:3;7113:19;;6741:397::o;7143:418::-;7345:2;7327:21;;;7384:2;7364:18;;;7357:30;7423:34;7418:2;7403:18;;7396:62;-1:-1:-1;;;7489:2:15;7474:18;;7467:52;7551:3;7536:19;;7143:418::o;7566:340::-;7768:2;7750:21;;;7807:2;7787:18;;;7780:30;-1:-1:-1;;;7841:2:15;7826:18;;7819:46;7897:2;7882:18;;7566:340::o;8384:185::-;8426:3;8464:5;8458:12;8479:52;8524:6;8519:3;8512:4;8505:5;8501:16;8479:52;:::i;:::-;8547:16;;;;;8384:185;-1:-1:-1;;8384:185:15:o;8574:1174::-;8750:3;8779:1;8812:6;8806:13;8842:3;8864:1;8892:9;8888:2;8884:18;8874:28;;8952:2;8941:9;8937:18;8974;8964:61;;9018:4;9010:6;9006:17;8996:27;;8964:61;9044:2;9092;9084:6;9081:14;9061:18;9058:38;9055:165;;;-1:-1:-1;;;9119:33:15;;9175:4;9172:1;9165:15;9205:4;9126:3;9193:17;9055:165;9236:18;9263:104;;;;9381:1;9376:320;;;;9229:467;;9263:104;-1:-1:-1;;9296:24:15;;9284:37;;9341:16;;;;-1:-1:-1;9263:104:15;;9376:320;8331:1;8324:14;;;8368:4;8355:18;;9471:1;9485:165;9499:6;9496:1;9493:13;9485:165;;;9577:14;;9564:11;;;9557:35;9620:16;;;;9514:10;;9485:165;;;9489:3;;9679:6;9674:3;9670:16;9663:23;;9229:467;;;;;;;9712:30;9738:3;9730:6;9712:30;:::i;:::-;9705:37;8574:1174;-1:-1:-1;;;;;8574:1174:15:o;9753:135::-;9792:3;-1:-1:-1;;9813:17:15;;9810:43;;;9833:18;;:::i;:::-;-1:-1:-1;9880:1:15;9869:13;;9753:135::o;9893:127::-;9954:10;9949:3;9945:20;9942:1;9935:31;9985:4;9982:1;9975:15;10009:4;10006:1;9999:15;10025:120;10065:1;10091;10081:35;;10096:18;;:::i;:::-;-1:-1:-1;10130:9:15;;10025:120::o;10150:127::-;10211:10;10206:3;10202:20;10199:1;10192:31;10242:4;10239:1;10232:15;10266:4;10263:1;10256:15;10282:125;10322:4;10350:1;10347;10344:8;10341:34;;;10355:18;;:::i;:::-;-1:-1:-1;10392:9:15;;10282:125::o;10412:112::-;10444:1;10470;10460:35;;10475:18;;:::i;:::-;-1:-1:-1;10509:9:15;;10412:112::o;10529:128::-;10569:3;10600:1;10596:6;10593:1;10590:13;10587:39;;;10606:18;;:::i;:::-;-1:-1:-1;10642:9:15;;10529:128::o;11021:786::-;11432:25;11427:3;11420:38;11402:3;11487:6;11481:13;11503:62;11558:6;11553:2;11548:3;11544:12;11537:4;11529:6;11525:17;11503:62;:::i;:::-;-1:-1:-1;;;11624:2:15;11584:16;;;11616:11;;;11609:40;11674:13;;11696:63;11674:13;11745:2;11737:11;;11730:4;11718:17;;11696:63;:::i;:::-;11779:17;11798:2;11775:26;;11021:786;-1:-1:-1;;;;11021:786:15:o;11812:168::-;11852:7;11918:1;11914;11910:6;11906:14;11903:1;11900:21;11895:1;11888:9;11881:17;11877:45;11874:71;;;11925:18;;:::i;:::-;-1:-1:-1;11965:9:15;;11812:168::o;11985:136::-;12024:3;12052:5;12042:39;;12061:18;;:::i;:::-;-1:-1:-1;;;12097:18:15;;11985:136::o;12487:127::-;12548:10;12543:3;12539:20;12536:1;12529:31;12579:4;12576:1;12569:15;12603:4;12600:1;12593:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1471800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "217",
								"OPERATOR_ROLE()": "infinite",
								"attest(address)": "infinite",
								"attestId(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"batchAttest(address[])": "infinite",
								"batchRevoke(address[])": "infinite",
								"burn()": "infinite",
								"getRoleAdmin(bytes32)": "2559",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2762",
								"isAdmin(address)": "2802",
								"isOperator(address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"renounceRole(bytes32,address)": "29062",
								"revoke(address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setBaseTokenURI(string)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenIdOf(address)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "infinite"
							},
							"internal": {
								"initialize(string memory,string memory,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1325,
									"end": 1402,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "25ACA1AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "25ACA1AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1384,
									"end": 1394,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1349,
									"end": 1359,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1349,
									"end": 1359,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1349,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1520,
									"end": 1841,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1520,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1652,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1652,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1670,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1753,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2068,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1784,
									"end": 1790,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1753,
									"end": 1763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1753,
									"end": 1791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1753,
									"end": 1791,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1753,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1801,
									"end": 1834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "PUSH",
									"source": 0,
									"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
								},
								{
									"begin": 1827,
									"end": 1833,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1801,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1801,
									"end": 1834,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1801,
									"end": 1834,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1801,
									"end": 1834,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1520,
									"end": 1841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1520,
									"end": 1841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1520,
									"end": 1841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1520,
									"end": 1841,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7457,
									"end": 7690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7457,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2977,
									"end": 2981,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3012,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3000,
									"end": 3029,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7535,
									"end": 7684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7535,
									"end": 7684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7584,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7590,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7607,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7614,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7614,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7578,
									"end": 7614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7610,
									"end": 7614,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7578,
									"end": 7614,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7614,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7578,
									"end": 7614,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7660,
									"end": 7672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7660,
									"end": 7672,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7660,
									"end": 7672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7658,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7645,
									"end": 7649,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7633,
									"end": 7673,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7535,
									"end": 7684,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7535,
									"end": 7684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7457,
									"end": 7690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7457,
									"end": 7690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7457,
									"end": 7690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 7283,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052c2977ea14240fafbdac993288dfecabba0725a9315fdd690ba00a82372a97664736f6c634300080c0033",
									".code": [
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "6D70F7AE"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "BC8DD06A"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "EB31403F"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "F5B541A6"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "6D70F7AE"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "74A8F103"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "773C02D4"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "30176E13"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "44DF8E70"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "6C60144A"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "11002DF"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "24D7806C"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 7283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1104,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1104,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1105,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1106,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1106,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1902,
											"end": 1904,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1768,
											"end": 1945,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3727,
											"end": 3930,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1318,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1252,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1318,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4432,
											"end": 4468,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4432,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4411,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4583,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4566,
											"end": 4576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4583,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4558,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4651,
											"end": 4665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4665,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4701,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4686,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4728,
											"end": 4775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4751,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4751,
											"end": 4775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4751,
											"end": 4775,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4751,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4775,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4728,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4724,
											"end": 4818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4795,
											"end": 4803,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4818,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4724,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4832,
											"end": 4847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4850,
											"end": 4859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 4868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4850,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4850,
											"end": 4869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 4869,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4850,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4832,
											"end": 4869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4884,
											"end": 4893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4901,
											"end": 4905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4920,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4937,
											"end": 4944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4920,
											"end": 4945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4920,
											"end": 4945,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4920,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH",
											"source": 0,
											"value": "EC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5040,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 5051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 5051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 5051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 5057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 5057,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7118,
											"end": 7158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7118,
											"end": 7158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7118,
											"end": 7222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7222,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7118,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7118,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7238,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7262,
											"end": 7273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7238,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7238,
											"end": 7274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7238,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7238,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7099,
											"end": 7274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6954,
											"end": 7281,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6294,
											"end": 6319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6294,
											"end": 6319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 6326,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6459,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6516,
											"end": 6520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4923,
											"end": 4927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4912,
											"end": 4937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4912,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4912,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5515,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6053,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6033,
											"end": 6054,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6090,
											"end": 6092,
											"name": "PUSH",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6063,
											"end": 6093,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E7420776974682044454641554C545F4144"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6102,
											"end": 6164,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6200,
											"end": 6234,
											"name": "PUSH",
											"source": 15,
											"value": "4D494E5F524F4C452063616E2073657420746865206261736520746F6B656E20"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6173,
											"end": 6235,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "555249"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6251,
											"end": 6270,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6251,
											"end": 6270,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6251,
											"end": 6270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6278,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "PUSH",
											"source": 15,
											"value": "A4"
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5849,
											"end": 6320,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5578,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5744,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5744,
											"end": 5763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6530,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "PUSH",
											"source": 15,
											"value": "2F"
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 6569,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "PUSH",
											"source": 15,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6578,
											"end": 6640,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6711,
											"end": 6730,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6711,
											"end": 6730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6325,
											"end": 6736,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5159,
											"end": 5185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5159,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5138,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5273,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5273,
											"end": 5294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5273,
											"end": 5294,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5273,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5305,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5305,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5305,
											"end": 5329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5305,
											"end": 5329,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5305,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5339,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5339,
											"end": 5348,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5339,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5339,
											"end": 5364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5339,
											"end": 5364,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5339,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5401,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5453,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5063,
											"end": 5460,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6092,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6189,
											"end": 6196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D1BDAD95B9259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6175,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6175,
											"end": 6188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3140,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3104,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3083,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3238,
											"end": 3248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3255,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3230,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3337,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3323,
											"end": 3337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3337,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3398,
											"end": 3440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3418,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3418,
											"end": 3427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3418,
											"end": 3440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3418,
											"end": 3440,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3418,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3394,
											"end": 3483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3460,
											"end": 3468,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3483,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3394,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3497,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3497,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3549,
											"end": 3557,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3622,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3622,
											"end": 3631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3622,
											"end": 3648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3622,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 0,
											"value": "E9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3305,
											"end": 3750,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6332,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6438,
											"end": 6445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6415,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6415,
											"end": 6446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5833,
											"end": 5840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5888,
											"end": 5893,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 5894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 5894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 5894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5911,
											"end": 5918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5911,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3832,
											"end": 3868,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3832,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3811,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3958,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4023,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 4015,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4096,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 4114,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4114,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4096,
											"end": 4133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4176,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4176,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4193,
											"end": 4200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4176,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4176,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4176,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "EC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4288,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 4295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5939,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6035,
											"end": 6039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH data",
											"source": 0,
											"value": "4C0EF6BFA0A398FE3098D6B3C8BC2C4C45D120EC13B77201D29305B0ABB24397"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 6021,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1157,
											"end": 1177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1952,
											"end": 1988,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1952,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1931,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2078,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2142,
											"end": 2164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2142,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8155,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53425420616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8164,
											"end": 8212,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7911,
											"end": 8253,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2133,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "E9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2343,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6719,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6780,
											"end": 6781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6769,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6781,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6750,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6839,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6880,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6648,
											"end": 6887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5350,
											"end": 5354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5338,
											"end": 5364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2467,
											"end": 2503,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2467,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2446,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2593,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2656,
											"end": 2679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8155,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53425420616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8164,
											"end": 8212,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7911,
											"end": 8253,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2648,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2790,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2790,
											"end": 2799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 2806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2790,
											"end": 2816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2790,
											"end": 2816,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2790,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2826,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2840,
											"end": 2847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2826,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "E9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2935,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2953,
											"end": 2960,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2967,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12431,
											"end": 12434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12451,
											"end": 12472,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12451,
											"end": 12472,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12474,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13785,
											"end": 13953,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 13785,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13864,
											"end": 13871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13898,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 13902,
											"end": 13905,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13922,
											"end": 13943,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 13943,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13898,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 13898,
											"end": 13945,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12079,
											"end": 12236,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 12079,
											"end": 12236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12186,
											"end": 12189,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12206,
											"end": 12227,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12206,
											"end": 12227,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12179,
											"end": 12229,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8987,
											"end": 9126,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8987,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 9094,
											"end": 9097,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9114,
											"end": 9117,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 9087,
											"end": 9119,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2804,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2602,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2710,
											"end": 2797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 949,
											"end": 989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 949,
											"end": 989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 949,
											"end": 989,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 841,
											"end": 996,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12684,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 12564,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12633,
											"end": 12640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 12666,
											"end": 12669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12659,
											"end": 12677,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7548,
											"end": 7552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7540,
											"end": 7562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7540,
											"end": 7562,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7540,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 7535,
											"end": 7684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7614,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7660,
											"end": 7672,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7660,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7952,
											"end": 7956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 7940,
											"end": 8089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11280,
											"end": 11287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 11334,
											"end": 11337,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11354,
											"end": 11357,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11360,
											"end": 11372,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11322,
											"end": 11374,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11708,
											"end": 11920,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 11708,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 11854,
											"end": 11857,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11874,
											"end": 11895,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11874,
											"end": 11895,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11906,
											"end": 11911,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 11850,
											"end": 11913,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8616,
											"end": 8828,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 8616,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 8762,
											"end": 8765,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8785,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8796,
											"end": 8819,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8819,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 8758,
											"end": 8821,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 13541,
											"end": 13544,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13561,
											"end": 13582,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 13561,
											"end": 13582,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13502,
											"end": 13584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13502,
											"end": 13584,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13502,
											"end": 13584,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14233,
											"end": 14473,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 14233,
											"end": 14473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14370,
											"end": 14377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14404,
											"end": 14465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 14408,
											"end": 14411,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14428,
											"end": 14449,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14404,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 14404,
											"end": 14465,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 782,
											"end": 791,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 915,
											"end": 925,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 915,
											"end": 925,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3054,
											"end": 3194,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3054,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3186,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4790,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4543,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10866,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10903,
											"end": 10905,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 10974,
											"name": "PUSH",
											"source": 15,
											"value": "456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10915,
											"end": 10975,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 10662,
											"end": 11016,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2975,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2811,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 2895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3284,
											"end": 3407,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3284,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3382,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 4193,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3714,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 3810,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3797,
											"end": 4187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4005,
											"end": 4012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5258,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5247,
											"end": 5258,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 5281,
											"end": 5313,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 5304,
											"end": 5307,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5312,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2439,
											"end": 2643,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2439,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2577,
											"end": 2580,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2592,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 2618,
											"end": 2636,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4093,
											"end": 4391,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 4093,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4301,
											"end": 4304,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4309,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4368,
											"end": 4373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4354,
											"end": 4374,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 6319,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 4154,
											"end": 4281,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6238,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 6109,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6213,
											"end": 6216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6205,
											"end": 6231,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6538,
											"end": 6653,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6538,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 6635,
											"end": 6638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4469,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2245,
											"end": 2394,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 2245,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 288,
											"end": 290,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1740,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 1943,
											"end": 1954,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12328,
											"end": 12330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12310,
											"end": 12331,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12310,
											"end": 12331,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12310,
											"end": 12331,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12340,
											"end": 12370,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12406,
											"end": 12440,
											"name": "PUSH",
											"source": 15,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 12386,
											"end": 12404,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12386,
											"end": 12404,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12386,
											"end": 12404,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12441,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 12126,
											"end": 12482,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5818,
											"end": 5941,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 5818,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 5892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 5916,
											"end": 5919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5911,
											"end": 5934,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "470"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "470"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "472"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "475"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "472"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "475"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "475"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "475"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "475"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "477"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "477"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "478"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "478"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 629,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 100,
											"end": 106,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 114,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 161,
											"end": 163,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 158,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 140,
											"end": 147,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 136,
											"end": 159,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 132,
											"end": 164,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 129,
											"end": 181,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 129,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 129,
											"end": 181,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 129,
											"end": 181,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 129,
											"end": 181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 217,
											"end": 226,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 204,
											"end": 227,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 264,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 279,
											"end": 285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 276,
											"end": 290,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 273,
											"end": 307,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 273,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 273,
											"end": 307,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 303,
											"end": 304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 293,
											"end": 305,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 273,
											"end": 307,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 273,
											"end": 307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 341,
											"end": 347,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 330,
											"end": 339,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 326,
											"end": 348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 316,
											"end": 348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 377,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 371,
											"end": 384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 367,
											"end": 394,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 357,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 357,
											"end": 412,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 408,
											"end": 409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 398,
											"end": 410,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 357,
											"end": 412,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 357,
											"end": 412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 435,
											"end": 451,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 474,
											"end": 476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 463,
											"end": 477,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 494,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 460,
											"end": 494,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 490,
											"end": 491,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 480,
											"end": 492,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 494,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 460,
											"end": 494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 543,
											"end": 550,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 538,
											"end": 540,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 521,
											"end": 535,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 517,
											"end": 519,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 513,
											"end": 536,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 509,
											"end": 541,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 506,
											"end": 551,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 503,
											"end": 568,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 503,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 503,
											"end": 568,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 564,
											"end": 565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 562,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 554,
											"end": 566,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 503,
											"end": 568,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 503,
											"end": 568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 617,
											"end": 623,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 617,
											"end": 623,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 629,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14,
											"end": 629,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 629,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 920,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 634,
											"end": 920,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 692,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 724,
											"end": 731,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 716,
											"end": 748,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 713,
											"end": 765,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 713,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 751,
											"end": 763,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 713,
											"end": 765,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 787,
											"end": 810,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 787,
											"end": 810,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 839,
											"end": 871,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 839,
											"end": 871,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 829,
											"end": 872,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 829,
											"end": 872,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 819,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 819,
											"end": 890,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 886,
											"end": 887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 876,
											"end": 888,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1375,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 1117,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1270,
											"end": 1281,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1270,
											"end": 1281,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1270,
											"end": 1281,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1302,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1238,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 1199,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1337,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1369,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 1321,
											"end": 1369,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1367,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1375,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1380,
											"end": 1763,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1380,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1529,
											"end": 1531,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1672,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 1620,
											"end": 1686,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1686,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 1620,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1747,
											"end": 1749,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1757,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1703,
											"end": 1757,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1763,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1950,
											"end": 2130,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1950,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2009,
											"end": 2015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2064,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2059,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2060,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2030,
											"end": 2082,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2030,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2030,
											"end": 2082,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2068,
											"end": 2080,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2030,
											"end": 2082,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2030,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2124,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2124,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1950,
											"end": 2130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1950,
											"end": 2130,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2317,
											"end": 2490,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 2317,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2465,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2465,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2466,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 2414,
											"end": 2484,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2482,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2484,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 2414,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2490,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2490,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2495,
											"end": 2681,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2495,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2560,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2593,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2582,
											"end": 2605,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2627,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 2575,
											"end": 2627,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2627,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 2575,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2646,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2646,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 2646,
											"end": 2675,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2754,
											"end": 2760,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2815,
											"end": 2817,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2801,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2835,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 2783,
											"end": 2835,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2821,
											"end": 2833,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2835,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 2783,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2877,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2896,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 2930,
											"end": 2932,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2896,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 2896,
											"end": 2934,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2896,
											"end": 2934,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 2896,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2886,
											"end": 2934,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2886,
											"end": 2934,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2940,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2945,
											"end": 3537,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2945,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3052,
											"end": 3075,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3080,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3083,
											"end": 3095,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3120,
											"end": 3143,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3206,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3189,
											"end": 3223,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3189,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 3189,
											"end": 3223,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3189,
											"end": 3223,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 3189,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3242,
											"end": 3264,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3264,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3232,
											"end": 3264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3295,
											"end": 3299,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3287,
											"end": 3300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3283,
											"end": 3310,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 3273,
											"end": 3328,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3328,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 3273,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3390,
											"end": 3392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3379,
											"end": 3393,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 3376,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3429,
											"end": 3444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3425,
											"end": 3449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3459,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3419,
											"end": 3476,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3419,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 3419,
											"end": 3476,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3462,
											"end": 3474,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3935,
											"end": 4189,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 3935,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4017,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4039,
											"end": 4062,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4035,
											"end": 4067,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4084,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 4032,
											"end": 4084,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4082,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4032,
											"end": 4084,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 4032,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 4103,
											"end": 4132,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4132,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 4103,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4093,
											"end": 4132,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4151,
											"end": 4183,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4151,
											"end": 4183,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3935,
											"end": 4189,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4194,
											"end": 4612,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 4194,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4399,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4399,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4399,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4435,
											"end": 4437,
											"name": "PUSH",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4408,
											"end": 4438,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4474,
											"end": 4508,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52"
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4447,
											"end": 4509,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13D3114818D85B881C995D9BDAD9481D1A194814D095"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4525,
											"end": 4543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4525,
											"end": 4543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4518,
											"end": 4570,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4605,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4587,
											"end": 4606,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4587,
											"end": 4606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4612,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4617,
											"end": 5015,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 4617,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4819,
											"end": 4821,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4858,
											"end": 4860,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4831,
											"end": 4861,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 4931,
											"name": "PUSH",
											"source": 15,
											"value": "546865206D6178206C656E677468206F66206164647265737365732069732031"
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4932,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4941,
											"end": 4973,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5005,
											"end": 5008,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4617,
											"end": 5015,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5020,
											"end": 5147,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 5020,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5081,
											"end": 5091,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5072,
											"end": 5092,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5093,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5102,
											"end": 5117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5136,
											"end": 5140,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5141,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5152,
											"end": 5279,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 5152,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5223,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5208,
											"end": 5211,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5204,
											"end": 5224,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5201,
											"end": 5202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5225,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5248,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 5249,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5268,
											"end": 5272,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5273,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5284,
											"end": 5459,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 5284,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5321,
											"end": 5324,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5369,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5354,
											"end": 5370,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5382,
											"end": 5399,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5379,
											"end": 5422,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5379,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 5379,
											"end": 5422,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5284,
											"end": 5459,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5284,
											"end": 5459,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5464,
											"end": 5844,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 5464,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5598,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5598,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5607,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 5607,
											"end": 5668,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 5653,
											"end": 5659,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5666,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5666,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5607,
											"end": 5668,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 5607,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5717,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5718,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5838,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 5677,
											"end": 5838,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5770,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5755,
											"end": 5758,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5751,
											"end": 5771,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5772,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5795,
											"end": 5799,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5785,
											"end": 5800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5838,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 5677,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5838,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5844,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5844,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5844,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6741,
											"end": 7138,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 6741,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6943,
											"end": 6945,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6946,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6925,
											"end": 6946,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6925,
											"end": 6946,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6982,
											"end": 6984,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 6962,
											"end": 6980,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6962,
											"end": 6980,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6962,
											"end": 6980,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6955,
											"end": 6985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7021,
											"end": 7055,
											"name": "PUSH",
											"source": 15,
											"value": "546865206163636F756E7420646F6573206E6F74206861766520616E79205342"
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7001,
											"end": 7019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7001,
											"end": 7019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6994,
											"end": 7056,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7089,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7065,
											"end": 7096,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7128,
											"end": 7131,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7132,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7113,
											"end": 7132,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6741,
											"end": 7138,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7143,
											"end": 7561,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 7143,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7347,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7327,
											"end": 7348,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7327,
											"end": 7348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7327,
											"end": 7348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7386,
											"name": "PUSH",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7357,
											"end": 7387,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7457,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52"
										},
										{
											"begin": 7418,
											"end": 7420,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7396,
											"end": 7458,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13D3114818D85B88185D1D195CDD081D1A194814D095"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7489,
											"end": 7491,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7474,
											"end": 7492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7474,
											"end": 7492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7467,
											"end": 7519,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 7536,
											"end": 7555,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7536,
											"end": 7555,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7143,
											"end": 7561,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7566,
											"end": 7906,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 7566,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7768,
											"end": 7770,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7771,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7750,
											"end": 7771,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7750,
											"end": 7771,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7780,
											"end": 7810,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4164647265737320697320656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7841,
											"end": 7843,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7819,
											"end": 7865,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7566,
											"end": 7906,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8384,
											"end": 8569,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 8384,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8426,
											"end": 8429,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8469,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8458,
											"end": 8470,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8479,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8519,
											"end": 8522,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8512,
											"end": 8516,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8505,
											"end": 8510,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8501,
											"end": 8517,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8479,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 8479,
											"end": 8531,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8479,
											"end": 8531,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 8479,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8563,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8563,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8563,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8563,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8384,
											"end": 8569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8384,
											"end": 8569,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8574,
											"end": 9748,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 8574,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8750,
											"end": 8753,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8806,
											"end": 8819,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8842,
											"end": 8845,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8864,
											"end": 8865,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8892,
											"end": 8901,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8888,
											"end": 8890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8884,
											"end": 8902,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8874,
											"end": 8902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8874,
											"end": 8902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8952,
											"end": 8954,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8941,
											"end": 8950,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8974,
											"end": 8992,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8964,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 8964,
											"end": 9025,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 9010,
											"end": 9016,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9006,
											"end": 9023,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8996,
											"end": 9023,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8996,
											"end": 9023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8964,
											"end": 9025,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 8964,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9095,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9096,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9055,
											"end": 9220,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9055,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 9055,
											"end": 9220,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9152,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9119,
											"end": 9152,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 9172,
											"end": 9173,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9165,
											"end": 9180,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9126,
											"end": 9129,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9210,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9055,
											"end": 9220,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 9055,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9236,
											"end": 9254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9376,
											"end": 9696,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9376,
											"end": 9696,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9376,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 9376,
											"end": 9696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "tag",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9296,
											"end": 9320,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9296,
											"end": 9320,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9284,
											"end": 9321,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9284,
											"end": 9321,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9357,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9357,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9357,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9357,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 9263,
											"end": 9367,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9376,
											"end": 9696,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 9376,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8338,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 8324,
											"end": 8338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8324,
											"end": 8338,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8368,
											"end": 8372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8355,
											"end": 8373,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8355,
											"end": 8373,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 9471,
											"end": 9472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9493,
											"end": 9506,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9577,
											"end": 9591,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9577,
											"end": 9591,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 9564,
											"end": 9575,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 9564,
											"end": 9575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9564,
											"end": 9575,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9592,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9620,
											"end": 9636,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9620,
											"end": 9636,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9620,
											"end": 9636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9620,
											"end": 9636,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9514,
											"end": 9524,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9514,
											"end": 9524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9485,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9489,
											"end": 9492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9489,
											"end": 9492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9679,
											"end": 9685,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9670,
											"end": 9686,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9663,
											"end": 9686,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 9663,
											"end": 9686,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9712,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9712,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 9712,
											"end": 9742,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9712,
											"end": 9742,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 9712,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9705,
											"end": 9742,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 8574,
											"end": 9748,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8574,
											"end": 9748,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9753,
											"end": 9888,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 9753,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9792,
											"end": 9795,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9830,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9813,
											"end": 9830,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9810,
											"end": 9853,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9810,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9810,
											"end": 9853,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9869,
											"end": 9882,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9869,
											"end": 9882,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9753,
											"end": 9888,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9893,
											"end": 10020,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 9893,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 9964,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9949,
											"end": 9952,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9945,
											"end": 9965,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9942,
											"end": 9943,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9966,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9985,
											"end": 9989,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 9982,
											"end": 9983,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10009,
											"end": 10013,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10006,
											"end": 10007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10014,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10025,
											"end": 10145,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 10025,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10065,
											"end": 10066,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10081,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 10081,
											"end": 10116,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10025,
											"end": 10145,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10150,
											"end": 10277,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 10150,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 10206,
											"end": 10209,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10202,
											"end": 10222,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10199,
											"end": 10200,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10223,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10242,
											"end": 10246,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 10239,
											"end": 10240,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10232,
											"end": 10247,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10266,
											"end": 10270,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10263,
											"end": 10264,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10271,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10282,
											"end": 10407,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 10282,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10322,
											"end": 10326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10347,
											"end": 10348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10344,
											"end": 10352,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10341,
											"end": 10375,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10341,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 10341,
											"end": 10375,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10282,
											"end": 10407,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10412,
											"end": 10524,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 10412,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10444,
											"end": 10445,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10471,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10460,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 10460,
											"end": 10495,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10475,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 10475,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 10475,
											"end": 10493,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10493,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 10475,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10412,
											"end": 10524,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10529,
											"end": 10657,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 10529,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10569,
											"end": 10572,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10600,
											"end": 10601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 10593,
											"end": 10594,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10590,
											"end": 10603,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10587,
											"end": 10626,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10587,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10587,
											"end": 10626,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10642,
											"end": 10651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10642,
											"end": 10651,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10529,
											"end": 10657,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11021,
											"end": 11807,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 11021,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "PUSH",
											"source": 15,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 11427,
											"end": 11430,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11420,
											"end": 11458,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11402,
											"end": 11405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11493,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11481,
											"end": 11494,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11503,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11553,
											"end": 11555,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11544,
											"end": 11556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11537,
											"end": 11541,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11529,
											"end": 11535,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11525,
											"end": 11542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11503,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11503,
											"end": 11565,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11503,
											"end": 11565,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 11503,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11624,
											"end": 11626,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11616,
											"end": 11627,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11616,
											"end": 11627,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11616,
											"end": 11627,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11609,
											"end": 11649,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11674,
											"end": 11687,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11674,
											"end": 11687,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11696,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 11674,
											"end": 11687,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11745,
											"end": 11747,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 11737,
											"end": 11748,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 11748,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11718,
											"end": 11735,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11718,
											"end": 11735,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11696,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11696,
											"end": 11759,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11696,
											"end": 11759,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 11696,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 11796,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11798,
											"end": 11800,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 11775,
											"end": 11801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11775,
											"end": 11801,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11021,
											"end": 11807,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11021,
											"end": 11807,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11812,
											"end": 11980,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 11812,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11859,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11918,
											"end": 11919,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11910,
											"end": 11916,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 11906,
											"end": 11920,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11903,
											"end": 11904,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11900,
											"end": 11921,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11895,
											"end": 11896,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11888,
											"end": 11897,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11881,
											"end": 11898,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11877,
											"end": 11922,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11874,
											"end": 11945,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11874,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11874,
											"end": 11945,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11812,
											"end": 11980,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11985,
											"end": 12121,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 11985,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12024,
											"end": 12027,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12052,
											"end": 12057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12042,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 12042,
											"end": 12081,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12061,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 12061,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 12061,
											"end": 12079,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12061,
											"end": 12079,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 12061,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11985,
											"end": 12121,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12487,
											"end": 12614,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 12487,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 12539,
											"end": 12559,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12537,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12529,
											"end": 12560,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12579,
											"end": 12583,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 12576,
											"end": 12577,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12569,
											"end": 12584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12603,
											"end": 12607,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12600,
											"end": 12601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "REVERT",
											"source": 15
										}
									],
									".data": {
										"4C0EF6BFA0A398FE3098D6B3C8BC2C4C45D120EC13B77201D29305B0ABB24397": "5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254",
										"9A4FD57166F98E8D7AFA26BB80870B0EF0D42C4DF4B5A4C9C02A345536D90E3A": "97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"OPERATOR_ROLE()": "f5b541a6",
							"attest(address)": "eb31403f",
							"attestId(address,uint256)": "bc8dd06a",
							"balanceOf(address)": "70a08231",
							"batchAttest(address[])": "6c60144a",
							"batchRevoke(address[])": "011002df",
							"burn()": "44df8e70",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isAdmin(address)": "24d7806c",
							"isOperator(address)": "6d70f7ae",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"renounceRole(bytes32,address)": "36568abe",
							"revoke(address)": "74a8f103",
							"revokeRole(bytes32,address)": "d547741f",
							"setBaseTokenURI(string)": "30176e13",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenIdOf(address)": "773c02d4",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"attestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"batchAttest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"batchRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest(address)\":{\"details\":\"Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.\",\"returns\":{\"_0\":\"The tokenId of the minted SBT\"}},\"balanceOf(address)\":{\"details\":\"SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of SBTs owned by `owner`, possibly zero\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"ownerOf(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT\"},\"returns\":{\"_0\":\"The address of the owner bound to the SBT\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revoke(address)\":{\"details\":\"Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setBaseTokenURI(string)\":{\"details\":\"Update _baseTokenURI\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdOf(address)\":{\"params\":{\"from\":\"The address of the SBT owner\"},\"returns\":{\"_0\":\"The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\"}},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"stateVariables\":{\"name\":{\"details\":\"Returns the token collection name.\"},\"symbol\":{\"details\":\"Returns the token collection symbol.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all SBTs assigned to an owner\"},\"burn()\":{\"notice\":\"At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to a SBT\"}},\"notice\":\"An experiment in Soul Bound Tokens (SBT's) following Vitalik's co-authored whitepaper at: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763 I propose for a rename to Non-Transferable Tokens NTT's\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/SBT.sol\":\"SBT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/SBT.sol\":{\"keccak256\":\"0xb0e89feb3e0b14c5c50987990a463e15e283a8a06db6283c2a9bfcd453a39771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0008db43e41b24fe7ef1ad667c86ffa72a293b93ba2ae4e548d195daf2691e3\",\"dweb:/ipfs/QmU5gV9pXYaTFYTP4SqS5nav5yXxHnEcnwd2xf3T21UYTT\"]},\"source/BinanceBABT/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x2535e58470a436bfe7807c5aeb9fafb82e3b14ac2a793e11acd507bdfdfac5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ff53d3d425ae902bcefedfc31080c49547169936558fd50b1894faeef8105c\",\"dweb:/ipfs/QmXm8rN2KxcbCqJ5soEof2krM9pPBEzy6QTr1eDZNY1Lq1\"]},\"source/BinanceBABT/contracts/erc/ERC165.sol\":{\"keccak256\":\"0xc479459e1497470e4d00d94714ca427d679f16f874ce0cb0fa0acc83723d0973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d779f928890f24f239d2559bd7afb084c8527a5ccbc825ffb69658a719c8d981\",\"dweb:/ipfs/Qmd7hJrXNF1LWKcZCTovtN1hy84KedS4vZgi4YwmSdGN3s\"]},\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"source/BinanceBABT/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x40c6e1a38b9b98351b956cca757dcc693e6ed1b22afb30a7d6f8229641b450fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e95a323287da65d9cd99a043d32d044bcbf0af1b689322418512914e2ab3d52b\",\"dweb:/ipfs/QmT4dvf8g7WceSZM9Qrdiuf2cipb19LAhih3QcJwcDdvwN\"]},\"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd17d910ca6cb19eb8a0f0f818378c59ba23bc7e1f34ac48ce1c39cd0966571ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf89e1f49ddcfe7635ec5208f991579409e54920d86f4c520b66a51d98f9fa37\",\"dweb:/ipfs/QmfKxjojszJHZcrNZ45kAPXDspPYUyT1ZhzNsGhmLyo8Bj\"]},\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":{\"keccak256\":\"0x50ae47a39ddfa2f3679bb34960d2d3280eae2d7271bc3a6caecf97d7e2fb771d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75f2712131257c8b7f072e25cd0c38c665564db1c511fe103dacb44ac8f80c3\",\"dweb:/ipfs/QmdxKMJTgCYfvUpp3QHALnZUWtJBmh9Udw1H2HejRdJywX\"]},\"source/BinanceBABT/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"source/BinanceBABT/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"source/BinanceBABT/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"source/BinanceBABT/contracts/utils/Initializable.sol\":{\"keccak256\":\"0x1a72923481a292233164768c7e857cda2b9061f5c9ecceeae576d3ebd8858052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58855430f25070211954c7e809dd39233094e402f01d5161ba3dcb8b5b355b48\",\"dweb:/ipfs/QmYbQQwwGZFukXSbqLAc1K5c1pw6BiXMfgMhFWR87RP5Cd\"]},\"source/BinanceBABT/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 735,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)730_storage)"
							},
							{
								"astId": 36,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_ownerMap",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(UintToAddressMap)2238_storage"
							},
							{
								"astId": 39,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_tokenMap",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(AddressToUintMap)2475_storage"
							},
							{
								"astId": 42,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_tokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1717_storage"
							},
							{
								"astId": 44,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "name",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 46,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "symbol",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 48,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_baseTokenURI",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)730_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)730_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressToUintMap)2475_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.AddressToUintMap",
								"members": [
									{
										"astId": 2474,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)1801_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Bytes32Set)3112_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Bytes32Set",
								"members": [
									{
										"astId": 3111,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2918_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Bytes32ToBytes32Map)1801_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.Bytes32ToBytes32Map",
								"members": [
									{
										"astId": 1796,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_keys",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32Set)3112_storage"
									},
									{
										"astId": 1800,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_values",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_bytes32,t_bytes32)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Counter)1717_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1716,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)730_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 727,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 729,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)2918_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2913,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2917,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintToAddressMap)2238_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.UintToAddressMap",
								"members": [
									{
										"astId": 2237,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)1801_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all SBTs assigned to an owner"
							},
							"burn()": {
								"notice": "At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event."
							},
							"ownerOf(uint256)": {
								"notice": "Find the address bound to a SBT"
							}
						},
						"notice": "An experiment in Soul Bound Tokens (SBT's) following Vitalik's co-authored whitepaper at: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763 I propose for a rename to Non-Transferable Tokens NTT's",
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x2535e58470a436bfe7807c5aeb9fafb82e3b14ac2a793e11acd507bdfdfac5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ff53d3d425ae902bcefedfc31080c49547169936558fd50b1894faeef8105c\",\"dweb:/ipfs/QmXm8rN2KxcbCqJ5soEof2krM9pPBEzy6QTr1eDZNY1Lq1\"]},\"source/BinanceBABT/contracts/erc/ERC165.sol\":{\"keccak256\":\"0xc479459e1497470e4d00d94714ca427d679f16f874ce0cb0fa0acc83723d0973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d779f928890f24f239d2559bd7afb084c8527a5ccbc825ffb69658a719c8d981\",\"dweb:/ipfs/Qmd7hJrXNF1LWKcZCTovtN1hy84KedS4vZgi4YwmSdGN3s\"]},\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"source/BinanceBABT/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"source/BinanceBABT/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 735,
								"contract": "source/BinanceBABT/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)730_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)730_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)730_storage"
							},
							"t_struct(RoleData)730_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 727,
										"contract": "source/BinanceBABT/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 729,
										"contract": "source/BinanceBABT/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/erc/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/erc/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/erc/ERC165.sol\":{\"keccak256\":\"0xc479459e1497470e4d00d94714ca427d679f16f874ce0cb0fa0acc83723d0973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d779f928890f24f239d2559bd7afb084c8527a5ccbc825ffb69658a719c8d981\",\"dweb:/ipfs/Qmd7hJrXNF1LWKcZCTovtN1hy84KedS4vZgi4YwmSdGN3s\"]},\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"source/BinanceBABT/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x40c6e1a38b9b98351b956cca757dcc693e6ed1b22afb30a7d6f8229641b450fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e95a323287da65d9cd99a043d32d044bcbf0af1b689322418512914e2ab3d52b\",\"dweb:/ipfs/QmT4dvf8g7WceSZM9Qrdiuf2cipb19LAhih3QcJwcDdvwN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "tokenIdOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"attest(address)": {
								"details": "Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.",
								"returns": {
									"_0": "The tokenId of the minted SBT"
								}
							},
							"balanceOf(address)": {
								"details": "SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of SBTs owned by `owner`, possibly zero"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "SBTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"tokenId": "The identifier for an SBT"
								},
								"returns": {
									"_0": "The address of the owner bound to the SBT"
								}
							},
							"revoke(address)": {
								"details": "Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenIdOf(address)": {
								"params": {
									"from": "The address of the SBT owner"
								},
								"returns": {
									"_0": "The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest(address)": "eb31403f",
							"balanceOf(address)": "70a08231",
							"burn()": "44df8e70",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"revoke(address)": "74a8f103",
							"symbol()": "95d89b41",
							"tokenIdOf(address)": "773c02d4",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"attest(address)\":{\"details\":\"Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.\",\"returns\":{\"_0\":\"The tokenId of the minted SBT\"}},\"balanceOf(address)\":{\"details\":\"SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of SBTs owned by `owner`, possibly zero\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT\"},\"returns\":{\"_0\":\"The address of the owner bound to the SBT\"}},\"revoke(address)\":{\"details\":\"Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenIdOf(address)\":{\"params\":{\"from\":\"The address of the SBT owner\"},\"returns\":{\"_0\":\"The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all SBTs assigned to an owner\"},\"burn()\":{\"notice\":\"At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to a SBT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd17d910ca6cb19eb8a0f0f818378c59ba23bc7e1f34ac48ce1c39cd0966571ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf89e1f49ddcfe7635ec5208f991579409e54920d86f4c520b66a51d98f9fa37\",\"dweb:/ipfs/QmfKxjojszJHZcrNZ45kAPXDspPYUyT1ZhzNsGhmLyo8Bj\"]},\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":{\"keccak256\":\"0x50ae47a39ddfa2f3679bb34960d2d3280eae2d7271bc3a6caecf97d7e2fb771d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75f2712131257c8b7f072e25cd0c38c665564db1c511fe103dacb44ac8f80c3\",\"dweb:/ipfs/QmdxKMJTgCYfvUpp3QHALnZUWtJBmh9Udw1H2HejRdJywX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all SBTs assigned to an owner"
							},
							"burn()": {
								"notice": "At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event."
							},
							"ownerOf(uint256)": {
								"notice": "Find the address bound to a SBT"
							}
						},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/ISBT721.sol": {
				"ISBT721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "tokenIdOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Attest(address,uint256)": {
								"details": "This emits when a new token is created and bound to an account by any mechanism. Note: For a reliable `to` parameter, retrieve the transaction's authenticated `to` field."
							},
							"Burn(address,uint256)": {
								"details": "This emits when an existing SBT is burned by an account"
							},
							"Revoke(address,uint256)": {
								"details": "This emits when an existing SBT is revoked from an account and destroyed by any mechanism. Note: For a reliable `from` parameter, retrieve the transaction's authenticated `from` field."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"attest(address)": {
								"details": "Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.",
								"returns": {
									"_0": "The tokenId of the minted SBT"
								}
							},
							"balanceOf(address)": {
								"details": "SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of SBTs owned by `owner`, possibly zero"
								}
							},
							"ownerOf(uint256)": {
								"details": "SBTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"tokenId": "The identifier for an SBT"
								},
								"returns": {
									"_0": "The address of the owner bound to the SBT"
								}
							},
							"revoke(address)": {
								"details": "Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event."
							},
							"tokenIdOf(address)": {
								"params": {
									"from": "The address of the SBT owner"
								},
								"returns": {
									"_0": "The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest(address)": "eb31403f",
							"balanceOf(address)": "70a08231",
							"burn()": "44df8e70",
							"ownerOf(uint256)": "6352211e",
							"revoke(address)": "74a8f103",
							"tokenIdOf(address)": "773c02d4",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attest(address,uint256)\":{\"details\":\"This emits when a new token is created and bound to an account by any mechanism. Note: For a reliable `to` parameter, retrieve the transaction's authenticated `to` field.\"},\"Burn(address,uint256)\":{\"details\":\"This emits when an existing SBT is burned by an account\"},\"Revoke(address,uint256)\":{\"details\":\"This emits when an existing SBT is revoked from an account and destroyed by any mechanism. Note: For a reliable `from` parameter, retrieve the transaction's authenticated `from` field.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"attest(address)\":{\"details\":\"Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.\",\"returns\":{\"_0\":\"The tokenId of the minted SBT\"}},\"balanceOf(address)\":{\"details\":\"SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of SBTs owned by `owner`, possibly zero\"}},\"ownerOf(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT\"},\"returns\":{\"_0\":\"The address of the owner bound to the SBT\"}},\"revoke(address)\":{\"details\":\"Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event.\"},\"tokenIdOf(address)\":{\"params\":{\"from\":\"The address of the SBT owner\"},\"returns\":{\"_0\":\"The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all SBTs assigned to an owner\"},\"burn()\":{\"notice\":\"At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to a SBT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":\"ISBT721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":{\"keccak256\":\"0x50ae47a39ddfa2f3679bb34960d2d3280eae2d7271bc3a6caecf97d7e2fb771d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75f2712131257c8b7f072e25cd0c38c665564db1c511fe103dacb44ac8f80c3\",\"dweb:/ipfs/QmdxKMJTgCYfvUpp3QHALnZUWtJBmh9Udw1H2HejRdJywX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all SBTs assigned to an owner"
							},
							"burn()": {
								"notice": "At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event."
							},
							"ownerOf(uint256)": {
								"notice": "Find the address bound to a SBT"
							}
						},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e0dfa99705abb0937a83169c57c521a28a3fd479cfe05a988e466a555781cc3564736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e0dfa99705abb0937a83169c57c521a28a3fd479cfe05a988e466a555781cc3564736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xDF 0xA9 SWAP8 SDIV 0xAB 0xB0 SWAP4 PUSH27 0x83169C57C521A28A3FD479CFE05A988E466A555781CC3564736F6C PUSH4 0x4300080C STOP CALLER ",
							"sourceMap": "194:8964:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e0dfa99705abb0937a83169c57c521a28a3fd479cfe05a988e466a555781cc3564736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xDF 0xA9 SWAP8 SDIV 0xAB 0xB0 SWAP4 PUSH27 0x83169C57C521A28A3FD479CFE05A988E466A555781CC3564736F6C PUSH4 0x4300080C STOP CALLER ",
							"sourceMap": "194:8964:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0dfa99705abb0937a83169c57c521a28a3fd479cfe05a988e466a555781cc3564736f6c634300080c0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb3cdedac139c35eb8ac0b64183c45fdf07c03491f78b40b272baa8336b834dc64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb3cdedac139c35eb8ac0b64183c45fdf07c03491f78b40b272baa8336b834dc64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB EXTCODECOPY 0xDE 0xDA 0xC1 CODECOPY 0xC3 0x5E 0xB8 0xAC SIGNEXTEND PUSH5 0x183C45FDF0 PUSH29 0x3491F78B40B272BAA8336B834DC64736F6C634300080C003300000000 ",
							"sourceMap": "424:971:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb3cdedac139c35eb8ac0b64183c45fdf07c03491f78b40b272baa8336b834dc64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB EXTCODECOPY 0xDE 0xDA 0xC1 CODECOPY 0xC3 0x5E 0xB8 0xAC SIGNEXTEND PUSH5 0x183C45FDF0 PUSH29 0x3491F78B40B272BAA8336B834DC64736F6C634300080C003300000000 ",
							"sourceMap": "424:971:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb3cdedac139c35eb8ac0b64183c45fdf07c03491f78b40b272baa8336b834dc64736f6c634300080c0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/EnumerableMap.sol": {
				"EnumerableMap": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":1525:17376  library EnumerableMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":1525:17376  library EnumerableMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122058a1dd636e46435397054a88b07944dde6bf9cd67fc83fae5f3230e8eaa1128c64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058a1dd636e46435397054a88b07944dde6bf9cd67fc83fae5f3230e8eaa1128c64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC LOG1 0xDD PUSH4 0x6E464353 SWAP8 SDIV 0x4A DUP9 0xB0 PUSH26 0x44DDE6BF9CD67FC83FAE5F3230E8EAA1128C64736F6C63430008 0xC STOP CALLER ",
							"sourceMap": "1525:15851:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1525:15851:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058a1dd636e46435397054a88b07944dde6bf9cd67fc83fae5f3230e8eaa1128c64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC LOG1 0xDD PUSH4 0x6E464353 SWAP8 SDIV 0x4A DUP9 0xB0 PUSH26 0x44DDE6BF9CD67FC83FAE5F3230E8EAA1128C64736F6C63430008 0xC STOP CALLER ",
							"sourceMap": "1525:15851:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"at(struct EnumerableMap.AddressToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address,string memory)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,string memory)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256,string memory)": "infinite",
								"length(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"remove(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"remove(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"set(struct EnumerableMap.AddressToUintMap storage pointer,address,uint256)": "infinite",
								"set(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32)": "infinite",
								"set(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256)": "infinite",
								"set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)": "infinite",
								"set(struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256)": "infinite",
								"tryGet(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"tryGet(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058a1dd636e46435397054a88b07944dde6bf9cd67fc83fae5f3230e8eaa1128c64736f6c634300080c0033",
									".code": [
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e92492fab628cbb6a459fa185ff5ad6ec6c4939a240fcad2ad0e78a48778fb6964736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e92492fab628cbb6a459fa185ff5ad6ec6c4939a240fcad2ad0e78a48778fb6964736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0x24 SWAP3 STATICCALL 0xB6 0x28 0xCB 0xB6 LOG4 MSIZE STATICCALL XOR 0x5F CREATE2 0xAD PUSH15 0xC6C4939A240FCAD2AD0E78A48778FB PUSH10 0x64736F6C634300080C00 CALLER ",
							"sourceMap": "1228:11454:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e92492fab628cbb6a459fa185ff5ad6ec6c4939a240fcad2ad0e78a48778fb6964736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0x24 SWAP3 STATICCALL 0xB6 0x28 0xCB 0xB6 LOG4 MSIZE STATICCALL XOR 0x5F CREATE2 0xAD PUSH15 0xC6C4939A240FCAD2AD0E78A48778FB PUSH10 0x64736F6C634300080C00 CALLER ",
							"sourceMap": "1228:11454:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e92492fab628cbb6a459fa185ff5ad6ec6c4939a240fcad2ad0e78a48778fb6964736f6c634300080c0033",
									".code": [
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"source/BinanceBABT/contracts/utils/Initializable.sol\":{\"keccak256\":\"0x1a72923481a292233164768c7e857cda2b9061f5c9ecceeae576d3ebd8858052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58855430f25070211954c7e809dd39233094e402f01d5161ba3dcb8b5b355b48\",\"dweb:/ipfs/QmYbQQwwGZFukXSbqLAc1K5c1pw6BiXMfgMhFWR87RP5Cd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3513,
								"contract": "source/BinanceBABT/contracts/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 3516,
								"contract": "source/BinanceBABT/contracts/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a3d23b6ccda3f8aceac645acc730c76125d973e0fa93f55ee9d131ca16629d264736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a3d23b6ccda3f8aceac645acc730c76125d973e0fa93f55ee9d131ca16629d264736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A RETURNDATASIZE 0x23 0xB6 0xCC 0xDA EXTCODEHASH DUP11 0xCE 0xAC PUSH5 0x5ACC730C76 SLT 0x5D SWAP8 RETURNDATACOPY 0xF 0xA9 EXTCODEHASH SSTORE 0xEE SWAP14 SGT SHR LOG1 PUSH7 0x29D264736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "161:2235:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a3d23b6ccda3f8aceac645acc730c76125d973e0fa93f55ee9d131ca16629d264736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A RETURNDATASIZE 0x23 0xB6 0xCC 0xDA EXTCODEHASH DUP11 0xCE 0xAC PUSH5 0x5ACC730C76 SLT 0x5D SWAP8 RETURNDATACOPY 0xF 0xA9 EXTCODEHASH SSTORE 0xEE SWAP14 SGT SHR LOG1 PUSH7 0x29D264736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "161:2235:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a3d23b6ccda3f8aceac645acc730c76125d973e0fa93f55ee9d131ca16629d264736f6c634300080c0033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/BinanceBABT/contracts/SBT.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/SBT.sol",
					"exportedSymbols": {
						"AccessControl": [
							1026
						],
						"Address": [
							1689
						],
						"Context": [
							1711
						],
						"Counters": [
							1785
						],
						"ERC165": [
							1050
						],
						"EnumerableMap": [
							2907
						],
						"EnumerableSet": [
							3506
						],
						"IAccessControl": [
							1123
						],
						"IERC165": [
							1135
						],
						"IERC721": [
							1251
						],
						"IERC721Metadata": [
							1278
						],
						"ISBT721": [
							1359
						],
						"Initializable": [
							3657
						],
						"SBT": [
							710
						],
						"Strings": [
							3883
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721.sol",
							"file": "./interfaces/IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1252,
							"src": "57:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/ISBT721.sol",
							"file": "./interfaces/ISBT721.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1360,
							"src": "92:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
							"file": "./interfaces/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1279,
							"src": "127:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Context.sol",
							"file": "./utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1712,
							"src": "170:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Counters.sol",
							"file": "./utils/Counters.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1786,
							"src": "200:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableMap.sol",
							"file": "./utils/EnumerableMap.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 2908,
							"src": "231:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Strings.sol",
							"file": "./utils/Strings.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 3884,
							"src": "267:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Initializable.sol",
							"file": "./utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 3658,
							"src": "297:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/erc/ERC165.sol",
							"file": "./erc/ERC165.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1051,
							"src": "334:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/access/AccessControl.sol",
							"file": "./access/AccessControl.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 1027,
							"src": "361:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1026,
										"src": "644:13:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "644:13:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "ISBT721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "659:7:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "659:7:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1278,
										"src": "668:15:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "668:15:0"
								}
							],
							"canonicalName": "SBT",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "399:228:0",
								"text": " An experiment in Soul Bound Tokens (SBT's) following Vitalik's\n co-authored whitepaper at:\n https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763\n I propose for a rename to Non-Transferable Tokens NTT's"
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710,
								1278,
								1359,
								1026,
								1050,
								1135,
								1123,
								1711
							],
							"name": "SBT",
							"nameLocation": "637:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 21,
									"libraryName": {
										"id": 19,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3883,
										"src": "696:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "690:26:0",
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 25,
									"libraryName": {
										"id": 22,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1785,
										"src": "727:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "721:36:0",
									"typeName": {
										"id": 24,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 23,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1717,
											"src": "740:16:0"
										},
										"referencedDeclaration": 1717,
										"src": "740:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"id": 29,
									"libraryName": {
										"id": 26,
										"name": "EnumerableMap",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2907,
										"src": "768:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "762:55:0",
									"typeName": {
										"id": 28,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 27,
											"name": "EnumerableMap.AddressToUintMap",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2475,
											"src": "786:30:0"
										},
										"referencedDeclaration": 2475,
										"src": "786:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
											"typeString": "struct EnumerableMap.AddressToUintMap"
										}
									}
								},
								{
									"id": 33,
									"libraryName": {
										"id": 30,
										"name": "EnumerableMap",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2907,
										"src": "828:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "822:55:0",
									"typeName": {
										"id": 32,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 31,
											"name": "EnumerableMap.UintToAddressMap",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2238,
											"src": "846:30:0"
										},
										"referencedDeclaration": 2238,
										"src": "846:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									}
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "_ownerMap",
									"nameLocation": "968:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "929:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
										"typeString": "struct EnumerableMap.UintToAddressMap"
									},
									"typeName": {
										"id": 35,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 34,
											"name": "EnumerableMap.UintToAddressMap",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2238,
											"src": "929:30:0"
										},
										"referencedDeclaration": 2238,
										"src": "929:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenMap",
									"nameLocation": "1022:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "983:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
										"typeString": "struct EnumerableMap.AddressToUintMap"
									},
									"typeName": {
										"id": 38,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 37,
											"name": "EnumerableMap.AddressToUintMap",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2475,
											"src": "983:30:0"
										},
										"referencedDeclaration": 2475,
										"src": "983:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
											"typeString": "struct EnumerableMap.AddressToUintMap"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_tokenId",
									"nameLocation": "1079:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "1054:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1717_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 41,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 40,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1717,
											"src": "1054:16:0"
										},
										"referencedDeclaration": 1717,
										"src": "1054:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1263
									],
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 44,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1126:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "1112:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 43,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1112:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 46,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1171:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "1157:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 45,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1157:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "_baseTokenURI",
									"nameLocation": "1216:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "1201:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 47,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1201:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "f5b541a6",
									"id": 53,
									"mutability": "constant",
									"name": "OPERATOR_ROLE",
									"nameLocation": "1276:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 710,
									"src": "1252:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 49,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1252:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4f50455241544f525f524f4c45",
												"id": 51,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1302:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
													"typeString": "literal_string \"OPERATOR_ROLE\""
												},
												"value": "OPERATOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
													"typeString": "literal_string \"OPERATOR_ROLE\""
												}
											],
											"id": 50,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1292:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1292:26:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "1339:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4b5943546f6b656e",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d49bfb43de0671a7465210d3e501d6510a95e5c3a5b864745329545c1694579a",
																"typeString": "literal_string \"KYCToken\""
															},
															"value": "KYCToken"
														},
														{
															"hexValue": "4b5943546f6b656e",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1372:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d49bfb43de0671a7465210d3e501d6510a95e5c3a5b864745329545c1694579a",
																"typeString": "literal_string \"KYCToken\""
															},
															"value": "KYCToken"
														},
														{
															"expression": {
																"id": 59,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1384:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1384:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d49bfb43de0671a7465210d3e501d6510a95e5c3a5b864745329545c1694579a",
																"typeString": "literal_string \"KYCToken\""
															},
															{
																"typeIdentifier": "t_stringliteral_d49bfb43de0671a7465210d3e501d6510a95e5c3a5b864745329545c1694579a",
																"typeString": "literal_string \"KYCToken\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1349:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,string memory,address)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1349:46:0"
											}
										]
									},
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1339:0:0"
									},
									"scope": 710,
									"src": "1325:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1638:203:0",
										"statements": [
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 74,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1648:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 75,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1655:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1648:12:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1670:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1679:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1670:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1670:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1764:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 84,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 82,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1753:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1753:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1753:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1812:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 89,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1801:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1801:33:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1407:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1529:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1563:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1549:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1592:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1578:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 68,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1578:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "1617:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1539:90:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:0"
									},
									"scope": 710,
									"src": "1520:321:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1921:454:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 104,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1960:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 105,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "1975:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1975:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 103,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1952:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1952:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e206174746573742074686520534254",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2002:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can attest the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1931:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1931:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 112,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "2086:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2092:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 113,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2092:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2092:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2086:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320656d707479",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2104:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															},
															"value": "Address is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															}
														],
														"id": 111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2078:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2141:23:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 124,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "2161:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 122,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "2142:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2562,
																	"src": "2142:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2142:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53425420616c726561647920657869737473",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2166:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e",
																"typeString": "literal_string \"SBT already exists\""
															},
															"value": "SBT already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e",
																"typeString": "literal_string \"SBT already exists\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "2133:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2212:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 130,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2198:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2508,
														"src": "2198:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2198:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 141,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2257:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 137,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2234:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2271,
														"src": "2234:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2234:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2283:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2287:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 144,
														"name": "Attest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "2276:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2276:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "2271:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2319:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2331:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 149,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "2310:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2310:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "EmitStatement",
												"src": "2305:38:0"
											},
											{
												"expression": {
													"id": 158,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "2361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 159,
												"nodeType": "Return",
												"src": "2354:14:0"
											}
										]
									},
									"functionSelector": "bc8dd06a",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attestId",
									"nameLocation": "1856:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1873:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1865:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1885:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:29:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1912:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:9:0"
									},
									"scope": 710,
									"src": "1847:528:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1318
									],
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2436:531:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 170,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "2475:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 171,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "2490:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2490:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 169,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "2467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2467:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e206174746573742074686520534254",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2517:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can attest the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2446:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 178,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "2601:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2615:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 179,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2607:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2607:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2601:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320656d707479",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2619:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															},
															"value": "Address is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2593:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2593:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2656:23:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 190,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "2676:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 188,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "2657:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2562,
																	"src": "2657:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2657:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53425420616c726561647920657869737473",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2681:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e",
																"typeString": "literal_string \"SBT already exists\""
															},
															"value": "SBT already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e",
																"typeString": "literal_string \"SBT already exists\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "2648:54:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 196,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "2713:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1717_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1743,
														"src": "2713:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1717_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1717_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2713:20:0"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "2751:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "2743:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 206,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 203,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "2761:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1717_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1729,
														"src": "2761:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1717_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1717_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2743:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2804:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 207,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2790:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2508,
														"src": "2790:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2790:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2790:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 217,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2849:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 214,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2826:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2271,
														"src": "2826:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2826:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 222,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2875:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 223,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 221,
														"name": "Attest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "2868:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "2863:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2919:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 227,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2911:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2911:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2923:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2927:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "2902:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2902:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "EmitStatement",
												"src": "2897:38:0"
											},
											{
												"expression": {
													"id": 235,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "2953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 167,
												"id": 236,
												"nodeType": "Return",
												"src": "2946:14:0"
											}
										]
									},
									"functionSelector": "eb31403f",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "2390:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2405:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2396:12:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2427:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:9:0"
									},
									"scope": 710,
									"src": "2381:586:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "3029:727:0",
										"statements": [
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "addrLength",
														"nameLocation": "3047:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "3039:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"expression": {
														"id": 246,
														"name": "addrs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3060:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3060:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3039:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 251,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "3112:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 252,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "3127:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3127:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 250,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "3104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3104:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e206174746573742074686520534254",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3154:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can attest the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3083:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3083:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "addrLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "3238:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3252:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3238:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206d6178206c656e677468206f662061646472657373657320697320313030",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3257:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															},
															"value": "The max length of addresses is 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "3230:64:0"
											},
											{
												"body": {
													"id": 334,
													"nodeType": "Block",
													"src": "3344:406:0",
													"statements": [
														{
															"assignments": [
																276
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 276,
																	"mutability": "mutable",
																	"name": "to",
																	"nameLocation": "3366:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 334,
																	"src": "3358:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 275,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3358:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 280,
															"initialValue": {
																"baseExpression": {
																	"id": 277,
																	"name": "addrs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "3371:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 279,
																"indexExpression": {
																	"id": 278,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3371:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3358:21:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 281,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3398:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3412:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3404:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 282,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3404:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3404:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3398:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 289,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 276,
																			"src": "3437:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "_tokenMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 39,
																			"src": "3418:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																				"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "contains",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2562,
																		"src": "3418:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																			"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3418:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3398:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "IfStatement",
															"src": "3394:89:0",
															"trueBody": {
																"id": 293,
																"nodeType": "Block",
																"src": "3442:41:0",
																"statements": [
																	{
																		"id": 292,
																		"nodeType": "Continue",
																		"src": "3460:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 295,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "3497:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1717_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "increment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1743,
																	"src": "3497:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1717_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1717_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer)"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3497:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "3497:20:0"
														},
														{
															"assignments": [
																301
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 301,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "3539:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 334,
																	"src": "3531:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 300,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3531:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 305,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 302,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "3549:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1717_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1729,
																	"src": "3549:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1717_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1717_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3549:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3531:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3596:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 310,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "3600:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 306,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "3582:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2508,
																	"src": "3582:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3582:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 312,
															"nodeType": "ExpressionStatement",
															"src": "3582:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 316,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "3636:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 317,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3645:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 313,
																		"name": "_ownerMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "3622:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																			"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2271,
																	"src": "3622:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3622:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "3622:26:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 321,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3675:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 322,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "3679:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 320,
																	"name": "Attest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "3668:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3668:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "EmitStatement",
															"src": "3663:24:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3723:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3715:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 326,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3715:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3715:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 330,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3727:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 331,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "3731:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 325,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "3706:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3706:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 333,
															"nodeType": "EmitStatement",
															"src": "3701:38:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3323:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 270,
														"name": "addrLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "3327:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3323:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"initializationExpression": {
													"assignments": [
														266
													],
													"declarations": [
														{
															"constant": false,
															"id": 266,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3316:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 335,
															"src": "3310:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 265,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3310:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 268,
													"initialValue": {
														"hexValue": "30",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3320:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3310:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3339:3:0",
														"subExpression": {
															"id": 272,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3339:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 274,
													"nodeType": "ExpressionStatement",
													"src": "3339:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3305:445:0"
											}
										]
									},
									"functionSelector": "6c60144a",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchAttest",
									"nameLocation": "2982:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "addrs",
												"nameLocation": "3013:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2994:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 239,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2994:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 240,
													"nodeType": "ArrayTypeName",
													"src": "2994:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:26:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3029:0:0"
									},
									"scope": 710,
									"src": "2973:783:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1324
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3801:494:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 344,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "3840:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 345,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "3855:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3855:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 343,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "3832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e207265766f6b652074686520534254",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3882:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can revoke the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3811:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "3811:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3966:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3982:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 353,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3974:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3974:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3966:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320656d707479",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3986:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															},
															"value": "Address is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3958:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "3958:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 364,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "4042:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 362,
																	"name": "_tokenMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "4023:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																		"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2562,
																"src": "4023:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																	"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4023:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206163636f756e7420646f6573206e6f74206861766520616e7920534254",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4049:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															},
															"value": "The account does not have any SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4015:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4015:70:0"
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "4104:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "4096:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4128:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 371,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "4114:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2687,
														"src": "4114:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4114:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4096:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4161:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 376,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "4144:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2535,
														"src": "4144:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4144:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4144:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 382,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "4176:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2292,
														"src": "4176:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4176:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "4176:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 389,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 388,
														"name": "Revoke",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4217:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4217:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "4212:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 394,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4262:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4276:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4268:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 395,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4268:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4268:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "4253:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4253:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "4248:40:0"
											}
										]
									},
									"functionSelector": "74a8f103",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "3771:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3786:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3778:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:14:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3801:0:0"
									},
									"scope": 710,
									"src": "3762:533:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "4357:700:0",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "addrLength",
														"nameLocation": "4375:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "4367:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"expression": {
														"id": 411,
														"name": "addrs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "4388:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4388:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4367:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 416,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "4440:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 417,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "4455:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4455:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 415,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "4432:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4432:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e207265766f6b652074686520534254",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4482:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can revoke the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4411:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "4411:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "addrLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "4566:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4580:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4566:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206d6178206c656e677468206f662061646472657373657320697320313030",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4585:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															},
															"value": "The max length of addresses is 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4558:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "4558:64:0"
											},
											{
												"body": {
													"id": 494,
													"nodeType": "Block",
													"src": "4672:379:0",
													"statements": [
														{
															"assignments": [
																441
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 441,
																	"mutability": "mutable",
																	"name": "from",
																	"nameLocation": "4694:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 494,
																	"src": "4686:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4686:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 445,
															"initialValue": {
																"baseExpression": {
																	"id": 442,
																	"name": "addrs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4701:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "4707:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4701:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4686:23:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4728:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4744:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4736:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 447,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4736:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4736:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4728:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "4750:25:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 454,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "4770:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 452,
																				"name": "_tokenMap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 39,
																				"src": "4751:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																					"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																				}
																			},
																			"id": 453,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "contains",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2562,
																			"src": "4751:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																				"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4751:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4728:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 460,
															"nodeType": "IfStatement",
															"src": "4724:94:0",
															"trueBody": {
																"id": 459,
																"nodeType": "Block",
																"src": "4777:41:0",
																"statements": [
																	{
																		"id": 458,
																		"nodeType": "Continue",
																		"src": "4795:8:0"
																	}
																]
															}
														},
														{
															"assignments": [
																462
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 462,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "4840:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 494,
																	"src": "4832:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4832:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 467,
															"initialValue": {
																"arguments": [
																	{
																		"id": 465,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4864:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 463,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "4850:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "get",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2687,
																	"src": "4850:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4850:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4832:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 471,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4901:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 468,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "4884:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2535,
																	"src": "4884:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4884:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "4884:22:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "4937:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 474,
																		"name": "_ownerMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "4920:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																			"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2292,
																	"src": "4920:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4920:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 479,
															"nodeType": "ExpressionStatement",
															"src": "4920:25:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 481,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4972:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "4978:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 480,
																	"name": "Revoke",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "4965:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4965:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "EmitStatement",
															"src": "4960:26:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 486,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "5014:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5028:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5020:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 487,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5020:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5020:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 491,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "5032:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 485,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "5005:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5005:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 493,
															"nodeType": "EmitStatement",
															"src": "5000:40:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "4651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 435,
														"name": "addrLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4655:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"initializationExpression": {
													"assignments": [
														431
													],
													"declarations": [
														{
															"constant": false,
															"id": 431,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4644:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 495,
															"src": "4638:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 430,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4638:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 433,
													"initialValue": {
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4648:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4638:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4667:3:0",
														"subExpression": {
															"id": 437,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4667:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 439,
													"nodeType": "ExpressionStatement",
													"src": "4667:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4633:418:0"
											}
										]
									},
									"functionSelector": "011002df",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchRevoke",
									"nameLocation": "4310:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "addrs",
												"nameLocation": "4341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "4322:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 404,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4322:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 405,
													"nodeType": "ArrayTypeName",
													"src": "4322:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:26:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:0"
									},
									"scope": 710,
									"src": "4301:756:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1328
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "5088:372:0",
										"statements": [
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "5106:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "5098:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 500,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5098:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 502,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "5115:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5115:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5098:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 508,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "5178:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 506,
																	"name": "_tokenMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "5159:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																		"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2562,
																"src": "5159:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
																	"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5159:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206163636f756e7420646f6573206e6f74206861766520616e7920534254",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5199:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															},
															"value": "The account does not have any SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															}
														],
														"id": 505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "5138:106:0"
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "5263:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "5255:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"id": 517,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5287:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 515,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "5273:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2687,
														"src": "5273:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5255:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "5305:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2535,
														"src": "5305:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5305:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "5305:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 526,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "5339:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2292,
														"src": "5339:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5339:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "5339:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 533,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "5380:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5380:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "EmitStatement",
												"src": "5375:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 538,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5425:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5441:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 539,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5433:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "5416:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5416:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "EmitStatement",
												"src": "5411:42:0"
											}
										]
									},
									"functionSelector": "44df8e70",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "5072:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5076:2:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:0"
									},
									"scope": 710,
									"src": "5063:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "5568:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 555,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "5607:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 556,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "5627:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5627:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 554,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "5599:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5599:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e7420776974682044454641554c545f41444d494e5f524f4c452063616e2073657420746865206261736520746f6b656e20555249",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5654:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b",
																"typeString": "literal_string \"Only the account with DEFAULT_ADMIN_ROLE can set the base token URI\""
															},
															"value": "Only the account with DEFAULT_ADMIN_ROLE can set the base token URI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b",
																"typeString": "literal_string \"Only the account with DEFAULT_ADMIN_ROLE can set the base token URI\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5578:155:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "5578:155:0"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "5744:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5760:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "5744:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "5744:19:0"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5466:44:0",
										"text": " @dev Update _baseTokenURI"
									},
									"functionSelector": "30176e13",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseTokenURI",
									"nameLocation": "5524:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "5556:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "5540:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5540:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5539:21:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5568:0:0"
									},
									"scope": 710,
									"src": "5515:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1336
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "5842:91:0",
										"statements": [
											{
												"assignments": [
													575,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "5853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 574,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 580,
												"initialValue": {
													"arguments": [
														{
															"id": 578,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "5888:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 576,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "5871:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tryGet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2657,
														"src": "5871:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$returns$_t_bool_$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5871:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:42:0"
											},
											{
												"expression": {
													"condition": {
														"id": 581,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5911:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5911:15:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5921:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 573,
												"id": 585,
												"nodeType": "Return",
												"src": "5904:22:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5785:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:15:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5832:9:0"
									},
									"scope": 710,
									"src": "5776:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1344
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "6004:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "6035:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6041:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397",
																"typeString": "literal_string \"The wallet has not attested any SBT\""
															},
															"value": "The wallet has not attested any SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397",
																"typeString": "literal_string \"The wallet has not attested any SBT\""
															}
														],
														"expression": {
															"id": 594,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "6021:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2720,
														"src": "6021:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,string memory) view returns (uint256)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6021:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 593,
												"id": 599,
												"nodeType": "Return",
												"src": "6014:65:0"
											}
										]
									},
									"functionSelector": "773c02d4",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIdOf",
									"nameLocation": "5948:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5966:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5957:14:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5995:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5994:9:0"
									},
									"scope": 710,
									"src": "5939:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6158:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "6189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e4964",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6198:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4",
																"typeString": "literal_string \"Invalid tokenId\""
															},
															"value": "Invalid tokenId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4",
																"typeString": "literal_string \"Invalid tokenId\""
															}
														],
														"expression": {
															"id": 608,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "6175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2471,
														"src": "6175:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$2238_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$2238_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6175:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 607,
												"id": 613,
												"nodeType": "Return",
												"src": "6168:48:0"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "6101:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6117:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6109:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6108:17:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6149:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:9:0"
									},
									"scope": 710,
									"src": "6092:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "6284:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 620,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "6301:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2577,
														"src": "6301:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2475_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2475_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer) view returns (uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 619,
												"id": 623,
												"nodeType": "Return",
												"src": "6294:25:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6238:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6249:2:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "6275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:9:0"
									},
									"scope": 710,
									"src": "6229:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "6398:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "6423:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 632,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "6415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6415:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 631,
												"id": 636,
												"nodeType": "Return",
												"src": "6408:38:0"
											}
										]
									},
									"functionSelector": "6d70f7ae",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "6341:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "6352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:17:0"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "6392:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6391:6:0"
									},
									"scope": 710,
									"src": "6332:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "6522:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 647,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "6567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "6539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 644,
												"id": 649,
												"nodeType": "Return",
												"src": "6532:43:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "6468:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6475:17:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6515:6:0"
									},
									"scope": 710,
									"src": "6459:123:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1277
									],
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "6721:166:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 661,
																		"name": "_baseTokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "6756:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 659,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6750:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6750:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes storage pointer"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6750:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6780:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6750:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6878:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6750:130:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 670,
																		"name": "_baseTokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "6824:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 671,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "6839:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3745,
																			"src": "6839:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6839:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 668,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "6807:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "6807:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6807:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6800:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 666,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "6800:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6800:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 658,
												"id": 678,
												"nodeType": "Return",
												"src": "6731:149:0"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "6588:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "6657:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:17:0"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6706:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6705:15:0"
									},
									"scope": 710,
									"src": "6648:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "7089:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 689,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "7118:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 691,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "7138:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1251_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1251_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 690,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7133:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7133:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1251",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "7133:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "7118:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "7174:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 697,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "7194:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1278_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1278_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 696,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7189:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7189:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1278",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "7189:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "7174:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7118:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 704,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "7262:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 702,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "7238:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_SBT_$710_$",
																	"typeString": "type(contract super SBT)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 771,
															"src": "7238:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7238:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7118:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 688,
												"id": 707,
												"nodeType": "Return",
												"src": "7099:175:0"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "6893:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6963:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 685,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7053:8:0"
									},
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "6988:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6981:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 682,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6981:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6980:20:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7079:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7078:6:0"
									},
									"scope": 710,
									"src": "6954:327:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 711,
							"src": "628:6655:0",
							"usedErrors": []
						}
					],
					"src": "32:7252:0"
				},
				"id": 0
			},
			"source/BinanceBABT/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							1026
						],
						"Context": [
							1711
						],
						"ERC165": [
							1050
						],
						"IAccessControl": [
							1123
						],
						"IERC165": [
							1135
						],
						"Strings": [
							3883
						]
					},
					"id": 1027,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
							"file": "../interfaces/IAccessControl.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1027,
							"sourceUnit": 1124,
							"src": "133:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1027,
							"sourceUnit": 1712,
							"src": "176:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1027,
							"sourceUnit": 3884,
							"src": "207:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/erc/ERC165.sol",
							"file": "../erc/ERC165.sol",
							"id": 716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1027,
							"sourceUnit": 1051,
							"src": "238:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 718,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1711,
										"src": "1837:7:1"
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "1837:7:1"
								},
								{
									"baseName": {
										"id": 720,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1123,
										"src": "1846:14:1"
									},
									"id": 721,
									"nodeType": "InheritanceSpecifier",
									"src": "1846:14:1"
								},
								{
									"baseName": {
										"id": 722,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1862:6:1"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "1862:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 717,
								"nodeType": "StructuredDocumentation",
								"src": "267:1534:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 1026,
							"linearizedBaseContracts": [
								1026,
								1050,
								1135,
								1123,
								1711
							],
							"name": "AccessControl",
							"nameLocation": "1820:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 730,
									"members": [
										{
											"constant": false,
											"id": 727,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1926:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 730,
											"src": "1901:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 726,
												"keyType": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1901:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 729,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1951:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 730,
											"src": "1943:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 728,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1943:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1882:8:1",
									"nodeType": "StructDefinition",
									"scope": 1026,
									"src": "1875:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 735,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2010:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1026,
									"src": "1973:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 734,
										"keyType": {
											"id": 731,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1973:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 733,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 732,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "1992:8:1"
											},
											"referencedDeclaration": 730,
											"src": "1992:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$730_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 738,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2047:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1026,
									"src": "2023:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 736,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2023:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2068:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "2491:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "2512:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 743,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															803,
															842
														],
														"referencedDeclaration": 803,
														"src": "2501:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2501:16:1"
											},
											{
												"id": 747,
												"nodeType": "PlaceholderStatement",
												"src": "2527:1:1"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "2079:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 749,
									"name": "onlyRole",
									"nameLocation": "2468:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "2477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 740,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:14:1"
									},
									"src": "2459:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "2693:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 758,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "2710:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 760,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "2730:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1123_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1123_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 759,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2725:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2725:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1123",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2725:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2710:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 766,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "2785:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 764,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2761:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$1026_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "2761:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2761:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2710:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 769,
												"nodeType": "Return",
												"src": "2703:94:1"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "2541:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2611:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 754,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2669:8:1"
									},
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2636:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2629:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 751,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2629:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:20:1"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:6:1"
									},
									"scope": 1026,
									"src": "2602:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1090
									],
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "2983:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 782,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "3000:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 784,
															"indexExpression": {
																"id": 783,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3007:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3000:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$730_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "3000:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 787,
													"indexExpression": {
														"id": 786,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "3021:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3000:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 781,
												"id": 788,
												"nodeType": "Return",
												"src": "2993:36:1"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "2810:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2900:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 778,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2959:8:1"
									},
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2916:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2908:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 773,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2930:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2922:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2907:31:1"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2977:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2977:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:6:1"
									},
									"scope": 1026,
									"src": "2891:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3386:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "3407:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 798,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "3413:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3413:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 796,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															803,
															842
														],
														"referencedDeclaration": 842,
														"src": "3396:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "3396:30:1"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "3042:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3339:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 792,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:14:1"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3386:0:1"
									},
									"scope": 1026,
									"src": "3330:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "3787:406:1",
										"statements": [
											{
												"condition": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3801:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 812,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "3810:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 813,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "3816:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 811,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "3802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3802:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "3797:390:1",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "3826:361:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3934:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 824,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 808,
																								"src": "4005:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 822,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3883,
																								"src": "3985:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$3883_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 823,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3882,
																							"src": "3985:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 825,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3985:28:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 826,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4039:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 831,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 806,
																										"src": "4112:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 830,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4104:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 829,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4104:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 832,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4104:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 833,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4119:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 827,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3883,
																								"src": "4084:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$3883_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 828,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3862,
																							"src": "4084:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4084:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 819,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3892:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3892:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3892:252:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3864:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3864:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3864:298:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 816,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3840:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3840:336:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "3840:336:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "3439:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3723:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3742:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3734:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3748:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3748:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:31:1"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3787:0:1"
									},
									"scope": 1026,
									"src": "3714:479:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1098
									],
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4457:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 851,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4474:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "4481:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4474:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$730_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 729,
													"src": "4474:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 850,
												"id": 855,
												"nodeType": "Return",
												"src": "4467:29:1"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "4199:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4383:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 847,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4430:8:1"
									},
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4404:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4396:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:14:1"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4448:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:9:1"
									},
									"scope": 1026,
									"src": "4374:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1106
									],
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "4902:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4923:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 873,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "4929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 871,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "4912:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4912:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "4912:25:1"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4509:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 867,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4895:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 866,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "4882:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 865,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 749,
												"src": "4873:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4873:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4808:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4864:8:1"
									},
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4826:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "4818:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4840:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "4832:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4832:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:31:1"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4902:0:1"
									},
									"scope": 1026,
									"src": "4799:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1114
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "5328:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "5350:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 893,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "5356:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "5338:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5338:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "5338:26:1"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "4950:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 887,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "5321:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 886,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "5308:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5308:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 889,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 885,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 749,
												"src": "5299:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5299:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5233:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 884,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5290:8:1"
									},
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5252:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5244:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 879,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5266:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5258:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:31:1"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5328:0:1"
									},
									"scope": 1026,
									"src": "5224:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "5985:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 907,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "6003:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 908,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "6014:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6003:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6028:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5995:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "5995:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "6101:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 916,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6107:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 914,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "6089:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6089:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "6089:26:1"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "5377:526:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5917:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 904,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5976:8:1"
									},
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5938:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "5930:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 899,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5930:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5952:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "5944:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5929:31:1"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5985:0:1"
									},
									"scope": 1026,
									"src": "5908:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "6875:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "6896:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "6902:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 928,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "6885:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "6885:25:1"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "6128:674:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6816:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6835:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "6827:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 922,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6849:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "6841:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6826:31:1"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6875:0:1"
									},
									"scope": 1026,
									"src": "6807:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "7115:174:1",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7133:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "7125:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 942,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7125:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [
														{
															"id": 945,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "7166:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 944,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "7153:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7153:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7125:46:1"
											},
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 948,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7181:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 950,
															"indexExpression": {
																"id": 949,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "7188:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7181:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$730_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 729,
														"src": "7181:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 952,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "7206:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7181:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "7181:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 956,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "7247:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 957,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "7253:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 958,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "7272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 955,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "7230:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7230:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "EmitStatement",
												"src": "7225:57:1"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "6923:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7051:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7073:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7065:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 936,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7087:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7079:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 938,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7064:33:1"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7115:0:1"
									},
									"scope": 1026,
									"src": "7042:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "7525:165:1",
										"statements": [
											{
												"condition": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7539:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 971,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "7548:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 972,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "7554:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 970,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "7540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7540:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "7535:149:1",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "7564:120:1",
													"statements": [
														{
															"expression": {
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 975,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 735,
																				"src": "7578:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 977,
																			"indexExpression": {
																				"id": 976,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 965,
																				"src": "7585:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7578:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$730_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 727,
																		"src": "7578:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 980,
																	"indexExpression": {
																		"id": 979,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "7599:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7578:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7610:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7578:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "7578:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 985,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "7645:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 986,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "7651:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 987,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1701,
																			"src": "7660:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7660:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 984,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "7633:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7633:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 990,
															"nodeType": "EmitStatement",
															"src": "7628:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "7295:157:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7466:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "7477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "7491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:31:1"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7525:0:1"
									},
									"scope": 1026,
									"src": "7457:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "7930:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1003,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7952:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1004,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "7958:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1002,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "7944:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7944:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1023,
												"nodeType": "IfStatement",
												"src": "7940:149:1",
												"trueBody": {
													"id": 1022,
													"nodeType": "Block",
													"src": "7968:121:1",
													"statements": [
														{
															"expression": {
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1006,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 735,
																				"src": "7982:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$730_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1008,
																			"indexExpression": {
																				"id": 1007,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "7989:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7982:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$730_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 727,
																		"src": "7982:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1011,
																	"indexExpression": {
																		"id": 1010,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "8003:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7982:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8014:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7982:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1014,
															"nodeType": "ExpressionStatement",
															"src": "7982:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1016,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "8050:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1017,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "8056:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1018,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1701,
																			"src": "8065:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8065:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1015,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "8038:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8038:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1021,
															"nodeType": "EmitStatement",
															"src": "8033:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "7696:160:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7870:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7890:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "7882:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7904:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "7896:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7881:31:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7930:0:1"
									},
									"scope": 1026,
									"src": "7861:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1027,
							"src": "1802:6295:1",
							"usedErrors": []
						}
					],
					"src": "108:7990:1"
				},
				"id": 1
			},
			"source/BinanceBABT/contracts/erc/ERC165.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/erc/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1050
						],
						"IERC165": [
							1135
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1028,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:2"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1051,
							"sourceUnit": 1136,
							"src": "124:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1031,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1135,
										"src": "766:7:2"
									},
									"id": 1032,
									"nodeType": "InheritanceSpecifier",
									"src": "766:7:2"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "161:576:2",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050,
								1135
							],
							"name": "ERC165",
							"nameLocation": "756:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "932:64:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "949:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1043,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "969:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1135_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1135_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1042,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "964:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "964:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1135",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "964:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "949:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1047,
												"nodeType": "Return",
												"src": "942:47:2"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "780:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "850:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1037,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "908:8:2"
									},
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "875:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "868:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "868:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:20:2"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "926:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "926:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:6:2"
									},
									"scope": 1050,
									"src": "841:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1051,
							"src": "738:260:2",
							"usedErrors": []
						}
					],
					"src": "99:900:2"
				},
				"id": 2
			},
			"source/BinanceBABT/contracts/interfaces/IAccessControl.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1123
						]
					},
					"id": 1124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:3",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1123,
							"linearizedBaseContracts": [
								1123
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:3",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 1062,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "560:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "582:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "617:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:3"
									},
									"src": "537:110:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:3",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 1071,
									"name": "RoleGranted",
									"nameLocation": "876:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "888:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "910:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "935:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:3"
									},
									"src": "870:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:3",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 1080,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1263:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1285:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1310:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:3"
									},
									"src": "1245:89:3"
								},
								{
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:3",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "1438:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "1452:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:3"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "1492:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:3"
									},
									"scope": 1123,
									"src": "1421:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:3",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1715:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:3"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1752:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:3"
									},
									"scope": 1123,
									"src": "1693:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:3",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2030:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2044:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:3"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:3"
									},
									"scope": 1123,
									"src": "2011:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:3",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2324:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2338:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:3"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:3"
									},
									"scope": 1123,
									"src": "2304:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:3",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2877:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2891:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:3"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:3"
									},
									"scope": 1123,
									"src": "2855:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1124,
							"src": "209:2710:3",
							"usedErrors": []
						}
					],
					"src": "94:2826:3"
				},
				"id": 3
			},
			"source/BinanceBABT/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1135
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1126,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1135,
							"linearizedBaseContracts": [
								1135
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 1135,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1136,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			},
			"source/BinanceBABT/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1135
						],
						"IERC721": [
							1251
						]
					},
					"id": 1252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1252,
							"sourceUnit": 1136,
							"src": "133:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1140,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1135,
										"src": "247:7:5"
									},
									"id": 1141,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1139,
								"nodeType": "StructuredDocumentation",
								"src": "158:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1251,
							"linearizedBaseContracts": [
								1251,
								1135
							],
							"name": "IERC721",
							"nameLocation": "236:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "261:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1150,
									"name": "Transfer",
									"nameLocation": "360:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "385:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "369:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "407:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "391:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "427:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "411:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:67:5"
									},
									"src": "354:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "442:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1159,
									"name": "Approval",
									"nameLocation": "547:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "572:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "556:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "595:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "579:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "621:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "605:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:74:5"
									},
									"src": "541:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "636:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 1168,
									"name": "ApprovalForAll",
									"nameLocation": "764:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "795:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "779:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "802:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "833:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "828:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "828:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:64:5"
									},
									"src": "758:85:5"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "849:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "939:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "957:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "949:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:15:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "995:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "987:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:17:5"
									},
									"scope": 1251,
									"src": "930:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "1010:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1155:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1171:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1163:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:17:5"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1211:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1203:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:15:5"
									},
									"scope": 1251,
									"src": "1146:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "1224:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1794:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1828:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1820:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1850:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1842:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1870:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1862:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1902:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1887:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:102:5"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1921:0:5"
									},
									"scope": 1251,
									"src": "1785:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "1928:687:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2629:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2663:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2655:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2685:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2677:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2705:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2697:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:73:5"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:5"
									},
									"scope": 1251,
									"src": "2620:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "2734:504:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3252:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3274:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3304:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3296:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3324:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3316:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:73:5"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3346:0:5"
									},
									"scope": 1251,
									"src": "3243:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "3353:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3819:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "3827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "3839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3826:29:5"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3864:0:5"
									},
									"scope": 1251,
									"src": "3810:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "3871:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4194:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4220:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "4212:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4235:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "4230:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4230:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:34:5"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:5"
									},
									"scope": 1251,
									"src": "4185:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "4261:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4414:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4434:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "4426:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:17:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4474:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "4466:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:18:5"
									},
									"scope": 1251,
									"src": "4405:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "4490:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4642:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4667:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4659:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4682:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4674:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:33:5"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4715:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4715:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:6:5"
									},
									"scope": 1251,
									"src": "4633:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1252,
							"src": "226:4497:5",
							"usedErrors": []
						}
					],
					"src": "108:4616:5"
				},
				"id": 5
			},
			"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721Metadata": [
							1278
						],
						"ISBT721": [
							1359
						]
					},
					"id": 1279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/ISBT721.sol",
							"file": "./ISBT721.sol",
							"id": 1254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1279,
							"sourceUnit": 1360,
							"src": "137:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1256,
										"name": "ISBT721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "325:7:6"
									},
									"id": 1257,
									"nodeType": "InheritanceSpecifier",
									"src": "325:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1255,
								"nodeType": "StructuredDocumentation",
								"src": "162:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1278,
							"linearizedBaseContracts": [
								1278,
								1359
							],
							"name": "IERC721Metadata",
							"nameLocation": "306:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "339:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "411:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:6"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "441:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:15:6"
									},
									"scope": 1278,
									"src": "402:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "462:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "536:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "568:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:15:6"
									},
									"scope": 1278,
									"src": "527:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "589:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "693:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "710:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "702:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:17:6"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "742:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:15:6"
									},
									"scope": 1278,
									"src": "684:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1279,
							"src": "296:463:6",
							"usedErrors": []
						}
					],
					"src": "112:648:6"
				},
				"id": 6
			},
			"source/BinanceBABT/contracts/interfaces/ISBT721.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/ISBT721.sol",
					"exportedSymbols": {
						"ISBT721": [
							1359
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISBT721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1359,
							"linearizedBaseContracts": [
								1359
							],
							"name": "ISBT721",
							"nameLocation": "67:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "81:215:7",
										"text": " @dev This emits when a new token is created and bound to an account by\n any mechanism.\n Note: For a reliable `to` parameter, retrieve the transaction's\n authenticated `to` field."
									},
									"id": 1287,
									"name": "Attest",
									"nameLocation": "307:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "330:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "314:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "350:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "334:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:45:7"
									},
									"src": "301:58:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "365:229:7",
										"text": " @dev This emits when an existing SBT is revoked from an account and\n destroyed by any mechanism.\n Note: For a reliable `from` parameter, retrieve the transaction's\n authenticated `from` field."
									},
									"id": 1294,
									"name": "Revoke",
									"nameLocation": "605:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "628:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "612:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "650:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "634:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:47:7"
									},
									"src": "599:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "665:79:7",
										"text": " @dev This emits when an existing SBT is burned by an account"
									},
									"id": 1301,
									"name": "Burn",
									"nameLocation": "755:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "776:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "760:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "798:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "782:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:47:7"
									},
									"src": "749:58:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "813:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1310,
									"name": "Transfer",
									"nameLocation": "912:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "937:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "921:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "959:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "943:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "979:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "963:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:67:7"
									},
									"src": "906:82:7"
								},
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "994:243:7",
										"text": " @dev Mints SBT\n Requirements:\n - `to` must be valid.\n - `to` must not exist.\n Emits a {Attest} event.\n Emits a {Transfer} event.\n @return The tokenId of the minted SBT"
									},
									"functionSelector": "eb31403f",
									"id": 1318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "1251:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1266:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "1258:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:12:7"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "1288:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:9:7"
									},
									"scope": 1359,
									"src": "1242:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "1303:169:7",
										"text": " @dev Revokes SBT\n Requirements:\n - `from` must exist.\n Emits a {Revoke} event.\n Emits a {Transfer} event."
									},
									"functionSelector": "74a8f103",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "1486:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1501:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "1493:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:14:7"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1515:0:7"
									},
									"scope": 1359,
									"src": "1477:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "1522:232:7",
										"text": " @notice At any time, an SBT receiver must be able to\n  disassociate themselves from an SBT publicly through calling this\n  function.\n Emits a {Burn} event.\n Emits a {Transfer} event."
									},
									"functionSelector": "44df8e70",
									"id": 1328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1768:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:7"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:0:7"
									},
									"scope": 1359,
									"src": "1759:25:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "1790:326:7",
										"text": " @notice Count all SBTs assigned to an owner\n @dev SBTs assigned to the zero address is considered invalid, and this\n function throws for queries about the zero address.\n @param owner An address for whom to query the balance\n @return The number of SBTs owned by `owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2130:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2148:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2140:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:15:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2178:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:9:7"
									},
									"scope": 1359,
									"src": "2121:66:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2193:173:7",
										"text": " @param from The address of the SBT owner\n @return The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
									},
									"functionSelector": "773c02d4",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIdOf",
									"nameLocation": "2380:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2398:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "2390:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:14:7"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "2427:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:9:7"
									},
									"scope": 1359,
									"src": "2371:65:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "2442:270:7",
										"text": " @notice Find the address bound to a SBT\n @dev SBTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param tokenId The identifier for an SBT\n @return The address of the owner bound to the SBT"
									},
									"functionSelector": "6352211e",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2726:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:17:7"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2774:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:9:7"
									},
									"scope": 1359,
									"src": "2717:66:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "2789:66:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2869:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2880:2:7"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2906:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:9:7"
									},
									"scope": 1359,
									"src": "2860:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "57:2860:7",
							"usedErrors": []
						}
					],
					"src": "32:2886:7"
				},
				"id": 7
			},
			"source/BinanceBABT/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1689
						]
					},
					"id": 1690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1362,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1689,
							"linearizedBaseContracts": [
								1689
							],
							"name": "Address",
							"nameLocation": "202:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "1241:254:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1370,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "1465:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1375,
												"nodeType": "Return",
												"src": "1458:30:8"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1195:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:8"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1235:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:8"
									},
									"scope": 1689,
									"src": "1175:320:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "2483:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1388,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1386,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "2526:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:8"
											},
											{
												"assignments": [
													1397,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "2578:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1404,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1398,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "2596:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1400,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "2618:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2647:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:8"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2431:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2458:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:8"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:8"
									},
									"scope": 1689,
									"src": "2412:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "3555:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "3594:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "3602:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1421,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1513
														],
														"referencedDeclaration": 1513,
														"src": "3572:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1420,
												"id": 1427,
												"nodeType": "Return",
												"src": "3565:79:8"
											}
										]
									},
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "3488:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "3504:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:8"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "3541:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:8"
									},
									"scope": 1689,
									"src": "3466:185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "4020:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4059:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4067:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1445,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "4076:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1441,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1513
														],
														"referencedDeclaration": 1513,
														"src": "4037:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1440,
												"id": 1447,
												"nodeType": "Return",
												"src": "4030:59:8"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "3904:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "3928:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "3955:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:8"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "4006:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:8"
									},
									"scope": 1689,
									"src": "3873:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "4601:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4640:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "4648:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1464,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "4654:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1461,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1513
														],
														"referencedDeclaration": 1513,
														"src": "4618:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1467,
												"nodeType": "Return",
												"src": "4611:94:8"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4498:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4522:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4549:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:8"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4587:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:8"
									},
									"scope": 1689,
									"src": "4458:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "5139:267:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1486,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1484,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1489,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "5182:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:8"
											},
											{
												"assignments": [
													1495,
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "5241:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1494,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "5255:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1496,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"arguments": [
														{
															"id": 1502,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "5308:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1498,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "5282:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1500,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "5301:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1506,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "5357:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "5365:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1508,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "5374:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1509,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "5386:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1505,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "5330:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1511,
												"nodeType": "Return",
												"src": "5323:76:8"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5000:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5024:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5051:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5074:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "5125:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:8"
									},
									"scope": 1689,
									"src": "4960:446:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "5683:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "5719:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "5727:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1523,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1530,
															1559
														],
														"referencedDeclaration": 1559,
														"src": "5700:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1528,
												"nodeType": "Return",
												"src": "5693:80:8"
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5611:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5627:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:8"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "5669:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:8"
									},
									"scope": 1689,
									"src": "5583:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6122:168:8",
										"statements": [
											{
												"assignments": [
													1543,
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6133:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1542,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6147:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1544,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"arguments": [
														{
															"id": 1548,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "6192:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1546,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "6174:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "6241:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "6249:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1554,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "6258:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1555,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "6270:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1551,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "6214:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1557,
												"nodeType": "Return",
												"src": "6207:76:8"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6001:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6025:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6052:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:8"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6108:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:8"
									},
									"scope": 1689,
									"src": "5964:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "6566:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "6604:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "6612:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1569,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1576,
															1605
														],
														"referencedDeclaration": 1605,
														"src": "6583:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1568,
												"id": 1574,
												"nodeType": "Return",
												"src": "6576:84:8"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "6499:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "6515:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:8"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "6552:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:8"
									},
									"scope": 1689,
									"src": "6469:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "7008:170:8",
										"statements": [
											{
												"assignments": [
													1589,
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "7019:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "7033:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1590,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [
														{
															"id": 1594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "7080:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "7060:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1598,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "7129:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7137:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7146:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "7158:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1597,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "7102:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1603,
												"nodeType": "Return",
												"src": "7095:76:8"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6892:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6916:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6943:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:8"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6994:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:8"
									},
									"scope": 1689,
									"src": "6853:325:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "7660:434:8",
										"statements": [
											{
												"condition": {
													"id": 1619,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1610,
													"src": "7674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1641,
													"nodeType": "Block",
													"src": "8030:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1637,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "8052:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1638,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "8064:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1636,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "8044:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:8"
														}
													]
												},
												"id": 1642,
												"nodeType": "IfStatement",
												"src": "7670:418:8",
												"trueBody": {
													"id": 1635,
													"nodeType": "Block",
													"src": "7683:341:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1620,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "7701:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1632,
															"nodeType": "IfStatement",
															"src": "7697:286:8",
															"trueBody": {
																"id": 1631,
																"nodeType": "Block",
																"src": "7725:258:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1626,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1608,
																							"src": "7927:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1625,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1377,
																						"src": "7916:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1628,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1624,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1630,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1633,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "8003:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1618,
															"id": 1634,
															"nodeType": "Return",
															"src": "7996:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7511:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7535:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7557:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7590:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:8"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "7646:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:8"
									},
									"scope": 1689,
									"src": "7466:628:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "8475:135:8",
										"statements": [
											{
												"condition": {
													"id": 1656,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1647,
													"src": "8489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "8546:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1661,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "8568:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1662,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "8580:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1660,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "8560:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:8"
														}
													]
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "8485:119:8",
												"trueBody": {
													"id": 1659,
													"nodeType": "Block",
													"src": "8498:42:8",
													"statements": [
														{
															"expression": {
																"id": 1657,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "8519:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1655,
															"id": 1658,
															"nodeType": "Return",
															"src": "8512:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8350:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8372:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8405:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:8"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "8461:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:8"
									},
									"scope": 1689,
									"src": "8315:295:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "8699:457:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1675,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "8775:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "9105:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1682,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "9126:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1681,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1684,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:8"
														}
													]
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "8771:379:8",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "8798:301:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1670,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1670,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:8",
																	"valueSize": 1
																}
															],
															"id": 1679,
															"nodeType": "InlineAssembly",
															"src": "8947:142:8"
														}
													]
												}
											}
										]
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8633:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8658:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:8"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:8"
									},
									"scope": 1689,
									"src": "8616:540:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1690,
							"src": "194:8964:8",
							"usedErrors": []
						}
					],
					"src": "101:9058:8"
				},
				"id": 8
			},
			"source/BinanceBABT/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1711
						]
					},
					"id": 1712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1692,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1711,
							"linearizedBaseContracts": [
								1711
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1699,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 1711,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1706,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1708,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 1711,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1712,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"source/BinanceBABT/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1785
						]
					},
					"id": 1786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1714,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:10",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1785,
							"linearizedBaseContracts": [
								1785
							],
							"name": "Counters",
							"nameLocation": "432:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1717,
									"members": [
										{
											"constant": false,
											"id": 1716,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1717,
											"src": "786:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1715,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:10",
									"nodeType": "StructDefinition",
									"scope": 1785,
									"src": "447:374:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "901:38:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1725,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "918:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1716,
													"src": "918:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1727,
												"nodeType": "Return",
												"src": "911:21:10"
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "844:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1718,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1717,
														"src": "844:7:10"
													},
													"referencedDeclaration": 1717,
													"src": "844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:10"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "892:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:10"
									},
									"scope": 1785,
									"src": "827:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "998:70:10",
										"statements": [
											{
												"id": 1741,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:10",
												"statements": [
													{
														"expression": {
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1735,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "1032:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1716,
																"src": "1032:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1740,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:10"
													}
												]
											}
										]
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "964:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1730,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1717,
														"src": "964:7:10"
													},
													"referencedDeclaration": 1717,
													"src": "964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:10"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:10"
									},
									"scope": 1785,
									"src": "945:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "1127:176:10",
										"statements": [
											{
												"assignments": [
													1750
												],
												"declarations": [
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1770,
														"src": "1137:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"expression": {
														"id": 1751,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "1153:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1716,
													"src": "1153:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "1185:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:10"
											},
											{
												"id": 1769,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:10",
												"statements": [
													{
														"expression": {
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1761,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "1260:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1716,
																"src": "1260:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "1277:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1768,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:10"
													}
												]
											}
										]
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1093:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1744,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1717,
														"src": "1093:7:10"
													},
													"referencedDeclaration": 1717,
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:10"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:10"
									},
									"scope": 1785,
									"src": "1074:229:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "1358:35:10",
										"statements": [
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1777,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "1368:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1716,
														"src": "1368:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:10"
											}
										]
									},
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1324:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1772,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1717,
														"src": "1324:7:10"
													},
													"referencedDeclaration": 1717,
													"src": "1324:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1717_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:10"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:10"
									},
									"scope": 1785,
									"src": "1309:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1786,
							"src": "424:971:10",
							"usedErrors": []
						}
					],
					"src": "87:1309:10"
				},
				"id": 10
			},
			"source/BinanceBABT/contracts/utils/EnumerableMap.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableMap.sol",
					"exportedSymbols": {
						"EnumerableMap": [
							2907
						],
						"EnumerableSet": [
							3506
						]
					},
					"id": 2908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:11"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableSet.sol",
							"file": "./EnumerableSet.sol",
							"id": 1788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2908,
							"sourceUnit": 3507,
							"src": "140:29:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableMap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1789,
								"nodeType": "StructuredDocumentation",
								"src": "171:1353:11",
								"text": " @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\n ===="
							},
							"fullyImplemented": true,
							"id": 2907,
							"linearizedBaseContracts": [
								2907
							],
							"name": "EnumerableMap",
							"nameLocation": "1533:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1793,
									"libraryName": {
										"id": 1790,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3506,
										"src": "1559:13:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1553:49:11",
									"typeName": {
										"id": 1792,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1791,
											"name": "EnumerableSet.Bytes32Set",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3112,
											"src": "1577:24:11"
										},
										"referencedDeclaration": 3112,
										"src": "1577:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
											"typeString": "struct EnumerableSet.Bytes32Set"
										}
									}
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToBytes32Map",
									"id": 1801,
									"members": [
										{
											"constant": false,
											"id": 1796,
											"mutability": "mutable",
											"name": "_keys",
											"nameLocation": "2155:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1801,
											"src": "2130:30:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
												"typeString": "struct EnumerableSet.Bytes32Set"
											},
											"typeName": {
												"id": 1795,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1794,
													"name": "EnumerableSet.Bytes32Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3112,
													"src": "2130:24:11"
												},
												"referencedDeclaration": 3112,
												"src": "2130:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1800,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "2198:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1801,
											"src": "2170:35:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
												"typeString": "mapping(bytes32 => bytes32)"
											},
											"typeName": {
												"id": 1799,
												"keyType": {
													"id": 1797,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2170:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
													"typeString": "mapping(bytes32 => bytes32)"
												},
												"valueType": {
													"id": 1798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToBytes32Map",
									"nameLocation": "2073:19:11",
									"nodeType": "StructDefinition",
									"scope": 2907,
									"src": "2066:146:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "2567:76:11",
										"statements": [
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1814,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "2577:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1800,
															"src": "2577:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1818,
														"indexExpression": {
															"id": 1816,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "2589:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2577:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1819,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "2596:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2577:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "2577:24:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1825,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "2632:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1822,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "2618:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1796,
															"src": "2618:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3130,
														"src": "2618:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3112_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3112_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1813,
												"id": 1827,
												"nodeType": "Return",
												"src": "2611:25:11"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "2218:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "2448:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2489:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2461:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1803,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "2461:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "2461:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2510:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2502:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2531:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2523:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:91:11"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2561:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2561:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:6:11"
									},
									"scope": 2907,
									"src": "2439:204:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "2897:78:11",
										"statements": [
											{
												"expression": {
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2907:23:11",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1840,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "2914:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1800,
															"src": "2914:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1843,
														"indexExpression": {
															"id": 1842,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "2926:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2914:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "2907:23:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1849,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "2964:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1846,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "2947:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1796,
															"src": "2947:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3148,
														"src": "2947:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3112_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3112_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2947:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1839,
												"id": 1851,
												"nodeType": "Return",
												"src": "2940:28:11"
											}
										]
									},
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "2649:157:11",
										"text": " @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "2820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2855:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2827:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1831,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "2827:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "2827:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2868:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2860:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:46:11"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2891:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2891:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:6:11"
									},
									"scope": 2907,
									"src": "2811:164:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "3147:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1867,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "3183:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1864,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "3164:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1796,
															"src": "3164:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3166,
														"src": "3164:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3112_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3112_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1869,
												"nodeType": "Return",
												"src": "3157:30:11"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "2981:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "3063:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3100:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "3072:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1856,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1855,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "3072:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "3072:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3113:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "3105:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:46:11"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "3141:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3141:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:6:11"
									},
									"scope": 2907,
									"src": "3054:140:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "3365:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 1880,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "3382:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1796,
															"src": "3382:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3181,
														"src": "3382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3112_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$3112_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1884,
												"nodeType": "Return",
												"src": "3375:25:11"
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "3200:79:11",
										"text": " @dev Returns the number of key-value pairs in the map. O(1)."
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "3293:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3328:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3300:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1873,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "3300:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "3300:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:33:11"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:9:11"
									},
									"scope": 2907,
									"src": "3284:123:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "3861:90:11",
										"statements": [
											{
												"assignments": [
													1900
												],
												"declarations": [
													{
														"constant": false,
														"id": 1900,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "3879:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "3871:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1899,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3871:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"arguments": [
														{
															"id": 1904,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "3898:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1901,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1890,
																"src": "3885:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1796,
															"src": "3885:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3199,
														"src": "3885:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3112_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$3112_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3885:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3871:33:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1907,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "3922:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"id": 1908,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "3927:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1800,
																"src": "3927:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 1911,
															"indexExpression": {
																"id": 1910,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "3939:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3927:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1912,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3921:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 1898,
												"id": 1913,
												"nodeType": "Return",
												"src": "3914:30:11"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "3413:342:11",
										"text": " @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "3769:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3800:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3772:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1888,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "3772:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "3772:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3813:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3805:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:48:11"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3843:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1894,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3852:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3842:18:11"
									},
									"scope": 2907,
									"src": "3760:191:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "4193:198:11",
										"statements": [
											{
												"assignments": [
													1929
												],
												"declarations": [
													{
														"constant": false,
														"id": 1929,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4211:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "4203:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1928,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4203:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1930,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "4219:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1800,
														"src": "4219:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1933,
													"indexExpression": {
														"id": 1932,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "4231:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4219:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4203:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1935,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "4249:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4266:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4258:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1936,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4258:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4258:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4249:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1956,
													"nodeType": "Block",
													"src": "4340:45:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4362:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"id": 1953,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "4368:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1954,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4361:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1927,
															"id": 1955,
															"nodeType": "Return",
															"src": "4354:20:11"
														}
													]
												},
												"id": 1957,
												"nodeType": "IfStatement",
												"src": "4245:140:11",
												"trueBody": {
													"id": 1951,
													"nodeType": "Block",
													"src": "4270:64:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1942,
																				"name": "map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1919,
																				"src": "4301:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				}
																			},
																			{
																				"id": 1943,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "4306:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1941,
																			"name": "contains",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1871,
																				2100,
																				2313,
																				2562,
																				2784
																			],
																			"referencedDeclaration": 1871,
																			"src": "4292:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																				"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																			}
																		},
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4292:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4320:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4312:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1945,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4312:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4312:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4291:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1927,
															"id": 1950,
															"nodeType": "Return",
															"src": "4284:39:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "3957:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "4102:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4137:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4109:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1917,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "4109:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "4109:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4150:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4142:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4142:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:46:11"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4178:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4178:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4184:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1925,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:15:11"
									},
									"scope": 2907,
									"src": "4093:298:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "4634:156:11",
										"statements": [
											{
												"assignments": [
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4652:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1991,
														"src": "4644:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1970,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4644:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1976,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1972,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "4660:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1800,
														"src": "4660:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1975,
													"indexExpression": {
														"id": 1974,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "4672:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4660:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4644:32:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "4694:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4703:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4694:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1982,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "4717:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		}
																	},
																	{
																		"id": 1983,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "4722:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1981,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1871,
																		2100,
																		2313,
																		2562,
																		2784
																	],
																	"referencedDeclaration": 1871,
																	"src": "4708:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4708:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4694:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4728:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
																"typeString": "literal_string \"EnumerableMap: nonexistent key\""
															},
															"value": "EnumerableMap: nonexistent key"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
																"typeString": "literal_string \"EnumerableMap: nonexistent key\""
															}
														],
														"id": 1977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4686:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "4686:75:11"
											},
											{
												"expression": {
													"id": 1989,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1971,
													"src": "4778:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1990,
												"nodeType": "Return",
												"src": "4771:12:11"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "4397:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "4552:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4584:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "4556:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1961,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "4556:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "4556:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4597:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "4589:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:46:11"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "4625:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:9:11"
									},
									"scope": 2907,
									"src": "4543:247:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "5221:136:11",
										"statements": [
											{
												"assignments": [
													2006
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5239:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2026,
														"src": "5231:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2005,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5231:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2011,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2007,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "5247:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1800,
														"src": "5247:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 2010,
													"indexExpression": {
														"id": 2009,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "5259:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5247:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:32:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "5281:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5290:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5281:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "5304:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		}
																	},
																	{
																		"id": 2018,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "5309:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2016,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1871,
																		2100,
																		2313,
																		2562,
																		2784
																	],
																	"referencedDeclaration": 1871,
																	"src": "5295:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5295:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5281:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2021,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "5315:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5273:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "5273:55:11"
											},
											{
												"expression": {
													"id": 2024,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2006,
													"src": "5345:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2025,
												"nodeType": "Return",
												"src": "5338:12:11"
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "4796:271:11",
										"text": " @dev Same as {_get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {_tryGet}."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "5081:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5122:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "5094:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1994,
														"name": "Bytes32ToBytes32Map",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "5094:19:11"
													},
													"referencedDeclaration": 1801,
													"src": "5094:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5143:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "5135:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5170:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "5156:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1999,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5156:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5084:104:11"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "5212:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5212:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:9:11"
									},
									"scope": 2907,
									"src": "5072:285:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToUintMap",
									"id": 2031,
									"members": [
										{
											"constant": false,
											"id": 2030,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5436:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2031,
											"src": "5416:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2029,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2028,
													"name": "Bytes32ToBytes32Map",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1801,
													"src": "5416:19:11"
												},
												"referencedDeclaration": 1801,
												"src": "5416:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToUintMap",
									"nameLocation": "5392:13:11",
									"nodeType": "StructDefinition",
									"scope": 2907,
									"src": "5385:64:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "5798:69:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2045,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "5819:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "5819:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2049,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "5839:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5831:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2047,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5831:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5831:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "5853:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5845:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2051,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5845:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2044,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1829,
															2058,
															2271,
															2508,
															2748
														],
														"referencedDeclaration": 1829,
														"src": "5815:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5815:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2043,
												"id": 2056,
												"nodeType": "Return",
												"src": "5808:52:11"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "5455:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "5685:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5720:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5698:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2033,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "5698:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "5698:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5741:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5733:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5733:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5762:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5754:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5688:85:11"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5792:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5792:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5791:6:11"
									},
									"scope": 2907,
									"src": "5676:191:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "6106:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2070,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "6130:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "6130:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2074,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "6150:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6142:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2072,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6142:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6142:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2069,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1853,
															2079,
															2292,
															2535,
															2766
														],
														"referencedDeclaration": 1853,
														"src": "6123:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6123:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2068,
												"id": 2077,
												"nodeType": "Return",
												"src": "6116:39:11"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "5873:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6035:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6064:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6042:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2060,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "6042:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "6042:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6077:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6069:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6041:40:11"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6100:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6100:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:6:11"
									},
									"scope": 2907,
									"src": "6026:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "6328:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2091,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "6354:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "6354:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2095,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "6374:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6366:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2093,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6366:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6366:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2090,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1871,
															2100,
															2313,
															2562,
															2784
														],
														"referencedDeclaration": 1871,
														"src": "6345:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2098,
												"nodeType": "Return",
												"src": "6338:41:11"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "6168:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6250:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6281:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6259:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "6259:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "6259:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6294:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6286:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6258:40:11"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6322:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6322:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:6:11"
									},
									"scope": 2907,
									"src": "6241:145:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "6544:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2110,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "6568:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "6568:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2109,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2115,
															2328,
															2577,
															2799
														],
														"referencedDeclaration": 1886,
														"src": "6561:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6561:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2113,
												"nodeType": "Return",
												"src": "6554:25:11"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "6392:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6478:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6507:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "6485:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "6485:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "6485:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6484:27:11"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "6535:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6535:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6534:9:11"
									},
									"scope": 2907,
									"src": "6469:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "7018:116:11",
										"statements": [
											{
												"assignments": [
													2129,
													2131
												],
												"declarations": [
													{
														"constant": false,
														"id": 2129,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "7037:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2148,
														"src": "7029:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2128,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7029:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2131,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7050:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2148,
														"src": "7042:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2130,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7042:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2133,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "7062:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "7062:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2135,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "7074:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2132,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1915,
															2149,
															2368,
															2617,
															2830
														],
														"referencedDeclaration": 1915,
														"src": "7059:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7059:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2140,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "7106:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7098:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2138,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7098:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7098:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "7120:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7112:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2142,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7112:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2146,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7097:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2127,
												"id": 2147,
												"nodeType": "Return",
												"src": "7090:37:11"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "6592:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "6932:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6957:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "6935:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2117,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "6935:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "6935:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6970:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "6962:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6962:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6934:42:11"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "7000:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "7009:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7009:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6999:18:11"
									},
									"scope": 2907,
									"src": "6923:211:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "7370:123:11",
										"statements": [
											{
												"assignments": [
													2163,
													2165
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7386:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2182,
														"src": "7381:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2162,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7381:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2165,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7403:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2182,
														"src": "7395:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2164,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7395:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2174,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2167,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "7419:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2030,
															"src": "7419:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2171,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2155,
																	"src": "7439:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7431:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2169,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7431:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7431:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2166,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1959,
															2183,
															2408,
															2657,
															2861
														],
														"referencedDeclaration": 1959,
														"src": "7412:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7412:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7380:64:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "7462:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "7479:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7471:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2176,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7471:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7471:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2180,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7461:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2181,
												"nodeType": "Return",
												"src": "7454:32:11"
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "7140:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "7285:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7314:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "7292:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2152,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2151,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "7292:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "7292:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7327:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "7319:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7291:40:11"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "7355:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7355:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "7361:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7354:15:11"
									},
									"scope": 2907,
									"src": "7276:217:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "7730:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2197,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "7759:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2030,
																	"src": "7759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2201,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2189,
																			"src": "7779:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7771:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2199,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "7771:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7771:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2196,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1992,
																	2027,
																	2207,
																	2234,
																	2438,
																	2471,
																	2687,
																	2720,
																	2882,
																	2906
																],
																"referencedDeclaration": 1992,
																"src": "7755:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7755:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7747:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7747:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7747:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2205,
												"nodeType": "Return",
												"src": "7740:45:11"
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "7499:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "7654:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7680:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "7658:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2185,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "7658:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "7658:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7693:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "7685:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7657:40:11"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "7721:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7721:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7720:9:11"
									},
									"scope": 2907,
									"src": "7645:147:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "8215:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2223,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "8244:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2030,
																	"src": "8244:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2227,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "8264:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8256:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2225,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8256:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8256:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2229,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2215,
																	"src": "8270:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2222,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1992,
																	2027,
																	2207,
																	2234,
																	2438,
																	2471,
																	2687,
																	2720,
																	2882,
																	2906
																],
																"referencedDeclaration": 2027,
																"src": "8240:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8240:43:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8232:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8232:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8232:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2219,
												"id": 2232,
												"nodeType": "Return",
												"src": "8225:59:11"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "7798:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "8081:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8116:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "8094:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2209,
														"name": "UintToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2031,
														"src": "8094:13:11"
													},
													"referencedDeclaration": 2031,
													"src": "8094:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$2031_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8137:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "8129:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8129:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8164:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "8150:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8150:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8084:98:11"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "8206:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8205:9:11"
									},
									"scope": 2907,
									"src": "8072:219:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToAddressMap",
									"id": 2238,
									"members": [
										{
											"constant": false,
											"id": 2237,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8376:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2238,
											"src": "8356:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2236,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2235,
													"name": "Bytes32ToBytes32Map",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1801,
													"src": "8356:19:11"
												},
												"referencedDeclaration": 1801,
												"src": "8356:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToAddressMap",
									"nameLocation": "8329:16:11",
									"nodeType": "StructDefinition",
									"scope": 2907,
									"src": "8322:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "8741:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2252,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "8762:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2237,
															"src": "8762:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2256,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "8782:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8774:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2254,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8774:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8774:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2264,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2246,
																					"src": "8812:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8804:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2262,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8804:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8804:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8796:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2260,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8796:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8796:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8788:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2258,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8788:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8788:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2251,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1829,
															2058,
															2271,
															2508,
															2748
														],
														"referencedDeclaration": 1829,
														"src": "8758:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8758:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2250,
												"id": 2269,
												"nodeType": "Return",
												"src": "8751:70:11"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "8395:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "8625:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8663:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "8638:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2240,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "8638:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "8638:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8684:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "8676:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8676:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8705:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "8697:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8697:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8628:88:11"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "8735:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8735:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8734:6:11"
									},
									"scope": 2907,
									"src": "8616:212:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "9070:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2283,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "9094:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2237,
															"src": "9094:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2287,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "9114:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9106:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2285,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9106:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9106:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2282,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1853,
															2079,
															2292,
															2535,
															2766
														],
														"referencedDeclaration": 1853,
														"src": "9087:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9087:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2281,
												"id": 2290,
												"nodeType": "Return",
												"src": "9080:39:11"
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "8834:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8996:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9028:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "9003:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2273,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "9003:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "9003:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9041:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "9033:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9002:43:11"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "9064:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9064:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9063:6:11"
									},
									"scope": 2907,
									"src": "8987:139:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "9295:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2304,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "9321:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2237,
															"src": "9321:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2308,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "9341:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9333:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2306,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9333:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9333:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2303,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1871,
															2100,
															2313,
															2562,
															2784
														],
														"referencedDeclaration": 1871,
														"src": "9312:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9312:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2302,
												"id": 2311,
												"nodeType": "Return",
												"src": "9305:41:11"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "9132:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "9214:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9248:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "9223:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2294,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "9223:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "9223:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9261:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "9253:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9253:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9222:43:11"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "9289:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9289:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9288:6:11"
									},
									"scope": 2907,
									"src": "9205:148:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2327,
										"nodeType": "Block",
										"src": "9514:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2323,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "9538:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2237,
															"src": "9538:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2322,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2115,
															2328,
															2577,
															2799
														],
														"referencedDeclaration": 1886,
														"src": "9531:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9531:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2326,
												"nodeType": "Return",
												"src": "9524:25:11"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "9359:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9445:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9477:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "9452:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2315,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "9452:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "9452:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:30:11"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "9505:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9504:9:11"
									},
									"scope": 2907,
									"src": "9436:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "9991:134:11",
										"statements": [
											{
												"assignments": [
													2342,
													2344
												],
												"declarations": [
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "10010:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "10002:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2341,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10002:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2344,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10023:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "10015:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2343,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10015:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2346,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "10035:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2237,
															"src": "10035:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2348,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "10047:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2345,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1915,
															2149,
															2368,
															2617,
															2830
														],
														"referencedDeclaration": 1915,
														"src": "10032:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10032:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10001:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2353,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "10079:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10071:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2351,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10071:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10071:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2361,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2344,
																					"src": "10109:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10101:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2359,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10101:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10101:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10093:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2357,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10093:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10093:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2355,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2365,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10070:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 2340,
												"id": 2366,
												"nodeType": "Return",
												"src": "10063:55:11"
											}
										]
									},
									"documentation": {
										"id": 2329,
										"nodeType": "StructuredDocumentation",
										"src": "9562:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9902:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9930:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9905:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2331,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2330,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "9905:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "9905:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9943:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9935:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9904:45:11"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9973:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9973:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9982:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9972:18:11"
									},
									"scope": 2907,
									"src": "9893:232:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "10402:141:11",
										"statements": [
											{
												"assignments": [
													2382,
													2384
												],
												"declarations": [
													{
														"constant": false,
														"id": 2382,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10418:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "10413:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2381,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10413:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2384,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10435:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "10427:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2383,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10427:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2393,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2386,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2372,
																"src": "10451:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2237,
															"src": "10451:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2390,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "10471:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10463:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2388,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10463:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10463:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2385,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1959,
															2183,
															2408,
															2657,
															2861
														],
														"referencedDeclaration": 1959,
														"src": "10444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10444:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10412:64:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2394,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "10494:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2401,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2384,
																					"src": "10527:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10519:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2399,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10519:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10519:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10511:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2397,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10511:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10511:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10503:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2395,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10503:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2405,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10493:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 2380,
												"id": 2406,
												"nodeType": "Return",
												"src": "10486:50:11"
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "10131:169:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map.\n _Available since v3.4._"
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "10314:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10346:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "10321:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2370,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "10321:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "10321:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10359:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "10351:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10351:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10320:43:11"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "10387:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10387:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "10393:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10386:15:11"
									},
									"scope": 2907,
									"src": "10305:238:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2437,
										"nodeType": "Block",
										"src": "10783:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2426,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2412,
																						"src": "10828:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2427,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2237,
																					"src": "10828:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2430,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2414,
																							"src": "10848:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2429,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10840:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2428,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "10840:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10840:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2425,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1992,
																					2027,
																					2207,
																					2234,
																					2438,
																					2471,
																					2687,
																					2720,
																					2882,
																					2906
																				],
																				"referencedDeclaration": 1992,
																				"src": "10824:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																				}
																			},
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10824:29:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10816:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2423,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10816:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10816:38:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10808:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2421,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "10808:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10808:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10800:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10800:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10800:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2418,
												"id": 2436,
												"nodeType": "Return",
												"src": "10793:63:11"
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "10549:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "10704:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10733:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "10708:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2410,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "10708:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "10708:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10746:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "10738:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10707:43:11"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "10774:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10774:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10773:9:11"
									},
									"scope": 2907,
									"src": "10695:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "11289:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2458,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2442,
																						"src": "11334:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2459,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2237,
																					"src": "11334:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2462,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2444,
																							"src": "11354:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2461,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11346:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2460,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "11346:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11346:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2464,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2446,
																					"src": "11360:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2457,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1992,
																					2027,
																					2207,
																					2234,
																					2438,
																					2471,
																					2687,
																					2720,
																					2882,
																					2906
																				],
																				"referencedDeclaration": 2027,
																				"src": "11330:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																				}
																			},
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11330:43:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11322:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2455,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11322:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11322:52:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11314:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2453,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11314:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11314:61:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11306:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2451,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11306:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11306:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2450,
												"id": 2469,
												"nodeType": "Return",
												"src": "11299:77:11"
											}
										]
									},
									"documentation": {
										"id": 2439,
										"nodeType": "StructuredDocumentation",
										"src": "10869:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "11152:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11190:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "11165:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2440,
														"name": "UintToAddressMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2238,
														"src": "11165:16:11"
													},
													"referencedDeclaration": 2238,
													"src": "11165:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2238_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11211:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "11203:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11203:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11238:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "11224:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11224:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11155:101:11"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "11280:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11280:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11279:9:11"
									},
									"scope": 2907,
									"src": "11143:240:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.AddressToUintMap",
									"id": 2475,
									"members": [
										{
											"constant": false,
											"id": 2474,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "11468:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2475,
											"src": "11448:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2473,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2472,
													"name": "Bytes32ToBytes32Map",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1801,
													"src": "11448:19:11"
												},
												"referencedDeclaration": 1801,
												"src": "11448:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressToUintMap",
									"nameLocation": "11421:16:11",
									"nodeType": "StructDefinition",
									"scope": 2907,
									"src": "11414:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "11833:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2489,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "11854:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2474,
															"src": "11854:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2497,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2481,
																					"src": "11890:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11882:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2495,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "11882:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11882:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11874:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2493,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11874:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11874:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11866:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2491,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11866:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11866:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "11906:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11898:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2501,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11898:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11898:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2488,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1829,
															2058,
															2271,
															2508,
															2748
														],
														"referencedDeclaration": 1829,
														"src": "11850:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11850:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2487,
												"id": 2506,
												"nodeType": "Return",
												"src": "11843:70:11"
											}
										]
									},
									"documentation": {
										"id": 2476,
										"nodeType": "StructuredDocumentation",
										"src": "11487:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "11717:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11755:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11730:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2477,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "11730:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "11730:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11776:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11768:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11768:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11797:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11789:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11789:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11720:88:11"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "11827:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11827:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11826:6:11"
									},
									"scope": 2907,
									"src": "11708:212:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2534,
										"nodeType": "Block",
										"src": "12162:74:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2520,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "12186:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2474,
															"src": "12186:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2528,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2514,
																					"src": "12222:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12214:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2526,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12214:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12214:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12206:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2524,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12206:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12206:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12198:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2522,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12198:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12198:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2519,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1853,
															2079,
															2292,
															2535,
															2766
														],
														"referencedDeclaration": 1853,
														"src": "12179:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12179:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2518,
												"id": 2533,
												"nodeType": "Return",
												"src": "12172:57:11"
											}
										]
									},
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "11926:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "12088:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12120:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "12095:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2510,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "12095:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "12095:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12133:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "12125:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12125:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12094:43:11"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "12156:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12156:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12155:6:11"
									},
									"scope": 2907,
									"src": "12079:157:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "12405:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2547,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2539,
																"src": "12431:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2474,
															"src": "12431:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2555,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2541,
																					"src": "12467:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12459:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2553,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12459:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12459:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12451:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2551,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12451:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12451:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12443:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2549,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12443:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12443:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2546,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1871,
															2100,
															2313,
															2562,
															2784
														],
														"referencedDeclaration": 1871,
														"src": "12422:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12422:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2545,
												"id": 2560,
												"nodeType": "Return",
												"src": "12415:59:11"
											}
										]
									},
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "12242:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "12324:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12358:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "12333:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2537,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "12333:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "12333:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12371:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "12363:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12363:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12332:43:11"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "12399:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12399:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:6:11"
									},
									"scope": 2907,
									"src": "12315:166:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "12642:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2572,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "12666:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2474,
															"src": "12666:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2571,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2115,
															2328,
															2577,
															2799
														],
														"referencedDeclaration": 1886,
														"src": "12659:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12659:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2570,
												"id": 2575,
												"nodeType": "Return",
												"src": "12652:25:11"
											}
										]
									},
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "12487:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "12573:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12605:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12580:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2564,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "12580:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "12580:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12579:30:11"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12633:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12633:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:9:11"
									},
									"scope": 2907,
									"src": "12564:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "13119:134:11",
										"statements": [
											{
												"assignments": [
													2591,
													2593
												],
												"declarations": [
													{
														"constant": false,
														"id": 2591,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "13138:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2616,
														"src": "13130:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2590,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13130:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2593,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "13151:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2616,
														"src": "13143:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2592,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13143:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2599,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2595,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2581,
																"src": "13163:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2474,
															"src": "13163:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2597,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2583,
															"src": "13175:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2594,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1915,
															2149,
															2368,
															2617,
															2830
														],
														"referencedDeclaration": 1915,
														"src": "13160:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13160:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13129:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2606,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2591,
																					"src": "13223:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13215:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2604,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13215:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13215:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13207:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2602,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "13207:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13207:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13199:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13199:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13199:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2612,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "13239:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13231:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13231:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13231:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2614,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13198:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 2589,
												"id": 2615,
												"nodeType": "Return",
												"src": "13191:55:11"
											}
										]
									},
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "12690:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "13030:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13058:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "13033:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2580,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2579,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "13033:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "13033:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13071:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "13063:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13032:45:11"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "13101:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13101:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "13110:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13110:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13100:18:11"
									},
									"scope": 2907,
									"src": "13021:232:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "13492:141:11",
										"statements": [
											{
												"assignments": [
													2631,
													2633
												],
												"declarations": [
													{
														"constant": false,
														"id": 2631,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13508:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "13503:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2630,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13503:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2633,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "13525:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "13517:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2632,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13517:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2648,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2635,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "13541:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2474,
															"src": "13541:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2643,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2623,
																					"src": "13577:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13569:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2641,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "13569:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13569:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13561:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2639,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13561:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13561:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13553:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2637,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13553:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13553:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2634,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1959,
															2183,
															2408,
															2657,
															2861
														],
														"referencedDeclaration": 1959,
														"src": "13534:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13534:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13502:82:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "13602:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2633,
																	"src": "13619:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13611:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2650,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13611:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13611:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2654,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13601:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2629,
												"id": 2655,
												"nodeType": "Return",
												"src": "13594:32:11"
											}
										]
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "13259:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "13404:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13436:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "13411:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2619,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "13411:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "13411:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13449:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "13441:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13441:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13410:43:11"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "13477:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13477:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "13483:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13483:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13476:15:11"
									},
									"scope": 2907,
									"src": "13395:238:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "13873:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2671,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2661,
																		"src": "13902:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2474,
																	"src": "13902:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2679,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2663,
																							"src": "13938:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13930:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2677,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "13930:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13930:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13922:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2675,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13922:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13922:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13914:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2673,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "13914:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13914:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2670,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1992,
																	2027,
																	2207,
																	2234,
																	2438,
																	2471,
																	2687,
																	2720,
																	2882,
																	2906
																],
																"referencedDeclaration": 1992,
																"src": "13898:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13898:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13890:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13890:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13890:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2667,
												"id": 2685,
												"nodeType": "Return",
												"src": "13883:63:11"
											}
										]
									},
									"documentation": {
										"id": 2658,
										"nodeType": "StructuredDocumentation",
										"src": "13639:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "13794:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13823:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "13798:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2659,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "13798:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "13798:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13836:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "13828:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13797:43:11"
									},
									"returnParameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "13864:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13863:9:11"
									},
									"scope": 2907,
									"src": "13785:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "14379:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2703,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "14408:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2474,
																	"src": "14408:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2711,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2693,
																							"src": "14444:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14436:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2709,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14436:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14436:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14428:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2707,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14428:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14428:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14420:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2705,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "14420:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14420:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2715,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "14452:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2702,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1992,
																	2027,
																	2207,
																	2234,
																	2438,
																	2471,
																	2687,
																	2720,
																	2882,
																	2906
																],
																"referencedDeclaration": 2027,
																"src": "14404:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14404:61:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14396:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14396:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14396:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2699,
												"id": 2718,
												"nodeType": "Return",
												"src": "14389:77:11"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "13959:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "14242:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14280:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "14255:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2690,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2689,
														"name": "AddressToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2475,
														"src": "14255:16:11"
													},
													"referencedDeclaration": 2475,
													"src": "14255:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2475_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14301:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "14293:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14293:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14328:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "14314:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14314:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14245:101:11"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "14370:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14370:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14369:9:11"
									},
									"scope": 2907,
									"src": "14233:240:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToUintMap",
									"id": 2724,
									"members": [
										{
											"constant": false,
											"id": 2723,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "14558:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2724,
											"src": "14538:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2722,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2721,
													"name": "Bytes32ToBytes32Map",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1801,
													"src": "14538:19:11"
												},
												"referencedDeclaration": 1801,
												"src": "14538:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToUintMap",
									"nameLocation": "14511:16:11",
									"nodeType": "StructDefinition",
									"scope": 2907,
									"src": "14504:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "14923:60:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2738,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2728,
																"src": "14944:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2723,
															"src": "14944:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2740,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2730,
															"src": "14956:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "14969:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14961:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2741,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "14961:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14961:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2737,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1829,
															2058,
															2271,
															2508,
															2748
														],
														"referencedDeclaration": 1829,
														"src": "14940:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14940:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2736,
												"id": 2746,
												"nodeType": "Return",
												"src": "14933:43:11"
											}
										]
									},
									"documentation": {
										"id": 2725,
										"nodeType": "StructuredDocumentation",
										"src": "14577:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "14807:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14845:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "14820:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2726,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "14820:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "14820:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14866:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "14858:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2729,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14887:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "14879:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14879:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14810:88:11"
									},
									"returnParameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "14917:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14917:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14916:6:11"
									},
									"scope": 2907,
									"src": "14798:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "15225:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2760,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2752,
																"src": "15249:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2723,
															"src": "15249:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2762,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "15261:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2759,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1853,
															2079,
															2292,
															2535,
															2766
														],
														"referencedDeclaration": 1853,
														"src": "15242:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15242:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2758,
												"id": 2764,
												"nodeType": "Return",
												"src": "15235:30:11"
											}
										]
									},
									"documentation": {
										"id": 2749,
										"nodeType": "StructuredDocumentation",
										"src": "14989:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "15151:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15183:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "15158:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2750,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "15158:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "15158:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15196:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "15188:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15157:43:11"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "15219:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15219:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15218:6:11"
									},
									"scope": 2907,
									"src": "15142:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "15441:49:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2778,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "15467:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2723,
															"src": "15467:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2780,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "15479:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2777,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1871,
															2100,
															2313,
															2562,
															2784
														],
														"referencedDeclaration": 1871,
														"src": "15458:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15458:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2776,
												"id": 2782,
												"nodeType": "Return",
												"src": "15451:32:11"
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "15278:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "15360:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15394:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "15369:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2769,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2768,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "15369:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "15369:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15407:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "15399:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2771,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15399:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15368:43:11"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "15435:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15435:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15434:6:11"
									},
									"scope": 2907,
									"src": "15351:139:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2798,
										"nodeType": "Block",
										"src": "15651:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2794,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2788,
																"src": "15675:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2723,
															"src": "15675:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2793,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886,
															2115,
															2328,
															2577,
															2799
														],
														"referencedDeclaration": 1886,
														"src": "15668:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15668:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2792,
												"id": 2797,
												"nodeType": "Return",
												"src": "15661:25:11"
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "15496:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "15582:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15614:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "15589:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2786,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "15589:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "15589:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15588:30:11"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "15642:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15642:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15641:9:11"
									},
									"scope": 2907,
									"src": "15573:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "16128:107:11",
										"statements": [
											{
												"assignments": [
													2813,
													2815
												],
												"declarations": [
													{
														"constant": false,
														"id": 2813,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "16147:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2829,
														"src": "16139:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2812,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16139:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2815,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "16160:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2829,
														"src": "16152:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2814,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16152:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2821,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2817,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "16172:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2723,
															"src": "16172:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2819,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "16184:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2816,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1915,
															2149,
															2368,
															2617,
															2830
														],
														"referencedDeclaration": 1915,
														"src": "16169:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16169:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16138:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2822,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2813,
															"src": "16208:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2825,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "16221:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16213:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2823,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16213:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16213:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2827,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16207:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 2811,
												"id": 2828,
												"nodeType": "Return",
												"src": "16200:28:11"
											}
										]
									},
									"documentation": {
										"id": 2800,
										"nodeType": "StructuredDocumentation",
										"src": "15699:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "16039:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16067:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "16042:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "16042:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "16042:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "16080:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "16072:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16072:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16041:45:11"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "16110:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16110:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "16119:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16119:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16109:18:11"
									},
									"scope": 2907,
									"src": "16030:205:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2860,
										"nodeType": "Block",
										"src": "16474:114:11",
										"statements": [
											{
												"assignments": [
													2844,
													2846
												],
												"declarations": [
													{
														"constant": false,
														"id": 2844,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16490:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2860,
														"src": "16485:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2843,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16485:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2846,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "16507:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2860,
														"src": "16499:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2845,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16499:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2852,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2848,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "16523:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2849,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2723,
															"src": "16523:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2850,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2836,
															"src": "16535:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2847,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1959,
															2183,
															2408,
															2657,
															2861
														],
														"referencedDeclaration": 1959,
														"src": "16516:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16516:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16484:55:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2853,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "16557:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "16574:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16566:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2854,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16566:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16566:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2858,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16556:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2842,
												"id": 2859,
												"nodeType": "Return",
												"src": "16549:32:11"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "16241:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "16386:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16418:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "16393:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2832,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "16393:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "16393:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16431:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "16423:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16392:43:11"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "16459:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16459:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "16465:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16465:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16458:15:11"
									},
									"scope": 2907,
									"src": "16377:211:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "16828:53:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2875,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2865,
																		"src": "16857:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2876,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2723,
																	"src": "16857:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2877,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "16869:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2874,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1992,
																	2027,
																	2207,
																	2234,
																	2438,
																	2471,
																	2687,
																	2720,
																	2882,
																	2906
																],
																"referencedDeclaration": 1992,
																"src": "16853:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16853:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16845:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16845:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16845:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2880,
												"nodeType": "Return",
												"src": "16838:36:11"
											}
										]
									},
									"documentation": {
										"id": 2862,
										"nodeType": "StructuredDocumentation",
										"src": "16594:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "16749:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16778:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "16753:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2864,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2863,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "16753:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "16753:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16791:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "16783:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16783:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16752:43:11"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "16819:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16818:9:11"
									},
									"scope": 2907,
									"src": "16740:141:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "17307:67:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2898,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2886,
																		"src": "17336:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2723,
																	"src": "17336:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2900,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "17348:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2901,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2890,
																	"src": "17353:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1801_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2897,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1992,
																	2027,
																	2207,
																	2234,
																	2438,
																	2471,
																	2687,
																	2720,
																	2882,
																	2906
																],
																"referencedDeclaration": 2027,
																"src": "17332:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1801_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17332:34:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17324:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17324:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17324:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2894,
												"id": 2904,
												"nodeType": "Return",
												"src": "17317:50:11"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "16887:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "17170:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17208:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "17183:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2884,
														"name": "Bytes32ToUintMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "17183:16:11"
													},
													"referencedDeclaration": 2724,
													"src": "17183:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2724_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17229:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "17221:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2887,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17221:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17256:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "17242:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17242:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17173:101:11"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "17298:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17298:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17297:9:11"
									},
									"scope": 2907,
									"src": "17161:213:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2908,
							"src": "1525:15851:11",
							"usedErrors": []
						}
					],
					"src": "115:17262:11"
				},
				"id": 11
			},
			"source/BinanceBABT/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							3506
						]
					},
					"id": 3507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2910,
								"nodeType": "StructuredDocumentation",
								"src": "140:1087:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 3506,
							"linearizedBaseContracts": [
								3506
							],
							"name": "EnumerableSet",
							"nameLocation": "1236:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2918,
									"members": [
										{
											"constant": false,
											"id": 2913,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1760:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2918,
											"src": "1750:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2911,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2912,
												"nodeType": "ArrayTypeName",
												"src": "1750:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2917,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1928:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2918,
											"src": "1900:36:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2916,
												"keyType": {
													"id": 2914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1900:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1703:3:12",
									"nodeType": "StructDefinition",
									"scope": 3506,
									"src": "1696:247:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "2182:335:12",
										"statements": [
											{
												"condition": {
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2196:22:12",
													"subExpression": {
														"arguments": [
															{
																"id": 2930,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2922,
																"src": "2207:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 2931,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2924,
																"src": "2212:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2929,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "2197:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2957,
													"nodeType": "Block",
													"src": "2474:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2928,
															"id": 2956,
															"nodeType": "Return",
															"src": "2488:12:12"
														}
													]
												},
												"id": 2958,
												"nodeType": "IfStatement",
												"src": "2192:319:12",
												"trueBody": {
													"id": 2954,
													"nodeType": "Block",
													"src": "2220:248:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2939,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2924,
																		"src": "2251:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2934,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2922,
																			"src": "2234:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2913,
																		"src": "2234:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2234:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2234:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2941,
															"nodeType": "ExpressionStatement",
															"src": "2234:23:12"
														},
														{
															"expression": {
																"id": 2950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 2942,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2922,
																			"src": "2392:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2945,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2917,
																		"src": "2392:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2946,
																	"indexExpression": {
																		"id": 2944,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2924,
																		"src": "2405:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2392:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 2947,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2922,
																			"src": "2414:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2913,
																		"src": "2414:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2414:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2392:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2951,
															"nodeType": "ExpressionStatement",
															"src": "2392:40:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2928,
															"id": 2953,
															"nodeType": "Return",
															"src": "2446:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "1949:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2122:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2139:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "2127:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2920,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2918,
														"src": "2127:3:12"
													},
													"referencedDeclaration": 2918,
													"src": "2127:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2152:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "2144:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:32:12"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "2176:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:6:12"
									},
									"scope": 3506,
									"src": "2113:404:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "2757:1316:12",
										"statements": [
											{
												"assignments": [
													2972
												],
												"declarations": [
													{
														"constant": false,
														"id": 2972,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2875:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 3043,
														"src": "2867:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2977,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2973,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "2888:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2917,
														"src": "2888:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2976,
													"indexExpression": {
														"id": 2975,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2966,
														"src": "2901:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2888:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:40:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2978,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2972,
														"src": "2922:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2936:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2922:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3041,
													"nodeType": "Block",
													"src": "4030:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4051:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2970,
															"id": 3040,
															"nodeType": "Return",
															"src": "4044:12:12"
														}
													]
												},
												"id": 3042,
												"nodeType": "IfStatement",
												"src": "2918:1149:12",
												"trueBody": {
													"id": 3038,
													"nodeType": "Block",
													"src": "2939:1085:12",
													"statements": [
														{
															"assignments": [
																2982
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2982,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3299:13:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3038,
																	"src": "3291:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2981,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3291:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2986,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2983,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "3315:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3328:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3315:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3291:38:12"
														},
														{
															"assignments": [
																2988
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2988,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3351:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3038,
																	"src": "3343:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2987,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3343:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2994,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 2989,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2964,
																			"src": "3363:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2913,
																		"src": "3363:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3363:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3384:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3363:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3343:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2995,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2988,
																	"src": "3404:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2996,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "3417:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3404:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3022,
															"nodeType": "IfStatement",
															"src": "3400:398:12",
															"trueBody": {
																"id": 3021,
																"nodeType": "Block",
																"src": "3432:366:12",
																"statements": [
																	{
																		"assignments": [
																			2999
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2999,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3458:9:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 3021,
																				"src": "3450:17:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2998,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3450:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3004,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 3000,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "3470:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 3001,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2913,
																				"src": "3470:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 3003,
																			"indexExpression": {
																				"id": 3002,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2988,
																				"src": "3482:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3470:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3450:42:12"
																	},
																	{
																		"expression": {
																			"id": 3011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 3005,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2964,
																						"src": "3592:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 3008,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2913,
																					"src": "3592:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 3009,
																				"indexExpression": {
																					"id": 3007,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2982,
																					"src": "3604:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3592:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3010,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "3621:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3592:38:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 3012,
																		"nodeType": "ExpressionStatement",
																		"src": "3592:38:12"
																	},
																	{
																		"expression": {
																			"id": 3019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 3013,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2964,
																						"src": "3704:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 3016,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2917,
																					"src": "3704:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 3017,
																				"indexExpression": {
																					"id": 3015,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "3717:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3704:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3018,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2972,
																				"src": "3730:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3704:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3020,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:36:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 3023,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2964,
																			"src": "3876:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2913,
																		"src": "3876:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3876:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3876:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3029,
															"nodeType": "ExpressionStatement",
															"src": "3876:17:12"
														},
														{
															"expression": {
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3961:26:12",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 3030,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2964,
																			"src": "3968:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 3031,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2917,
																		"src": "3968:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 3033,
																	"indexExpression": {
																		"id": 3032,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2966,
																		"src": "3981:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3968:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3035,
															"nodeType": "ExpressionStatement",
															"src": "3961:26:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4009:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2970,
															"id": 3037,
															"nodeType": "Return",
															"src": "4002:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2961,
										"nodeType": "StructuredDocumentation",
										"src": "2523:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2694:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2714:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "2702:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2962,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2918,
														"src": "2702:3:12"
													},
													"referencedDeclaration": 2918,
													"src": "2702:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2727:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "2719:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2965,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:32:12"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "2751:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2751:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:6:12"
									},
									"scope": 3506,
									"src": "2685:1388:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3062,
										"nodeType": "Block",
										"src": "4233:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 3055,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3048,
																"src": "4250:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 3056,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2917,
															"src": "4250:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 3058,
														"indexExpression": {
															"id": 3057,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3050,
															"src": "4263:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4250:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4273:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4250:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3054,
												"id": 3061,
												"nodeType": "Return",
												"src": "4243:31:12"
											}
										]
									},
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "4079:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4163:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4185:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "4173:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3046,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2918,
														"src": "4173:3:12"
													},
													"referencedDeclaration": 2918,
													"src": "4173:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "4190:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3049,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:32:12"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "4227:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4227:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:6:12"
									},
									"scope": 3506,
									"src": "4154:127:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3076,
										"nodeType": "Block",
										"src": "4427:42:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 3072,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "4444:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 3073,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2913,
														"src": "4444:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4444:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3071,
												"id": 3075,
												"nodeType": "Return",
												"src": "4437:25:12"
											}
										]
									},
									"documentation": {
										"id": 3064,
										"nodeType": "StructuredDocumentation",
										"src": "4287:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 3077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4371:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4391:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "4379:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3065,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2918,
														"src": "4379:3:12"
													},
													"referencedDeclaration": 2918,
													"src": "4379:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:17:12"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "4418:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:9:12"
									},
									"scope": 3506,
									"src": "4362:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "4887:42:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 3088,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "4904:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 3089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2913,
														"src": "4904:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 3091,
													"indexExpression": {
														"id": 3090,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3083,
														"src": "4916:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4904:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3087,
												"id": 3092,
												"nodeType": "Return",
												"src": "4897:25:12"
											}
										]
									},
									"documentation": {
										"id": 3078,
										"nodeType": "StructuredDocumentation",
										"src": "4475:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4820:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4836:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "4824:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3079,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2918,
														"src": "4824:3:12"
													},
													"referencedDeclaration": 2918,
													"src": "4824:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4849:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "4841:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:32:12"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "4878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3085,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:12"
									},
									"scope": 3506,
									"src": "4811:118:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "5543:35:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3104,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "5560:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2913,
													"src": "5560:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 3103,
												"id": 3106,
												"nodeType": "Return",
												"src": "5553:18:12"
											}
										]
									},
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "4935:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5478:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5498:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "5486:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3096,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2918,
														"src": "5486:3:12"
													},
													"referencedDeclaration": 2918,
													"src": "5486:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5485:17:12"
									},
									"returnParameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "5525:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3100,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5525:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3101,
													"nodeType": "ArrayTypeName",
													"src": "5525:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:18:12"
									},
									"scope": 3506,
									"src": "5469:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 3112,
									"members": [
										{
											"constant": false,
											"id": 3111,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5635:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "5631:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3110,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3109,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2918,
													"src": "5631:3:12"
												},
												"referencedDeclaration": 2918,
												"src": "5631:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5610:10:12",
									"nodeType": "StructDefinition",
									"scope": 3506,
									"src": "5603:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3129,
										"nodeType": "Block",
										"src": "5894:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3124,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3116,
																"src": "5916:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3125,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3111,
															"src": "5916:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "5928:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3123,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "5911:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3122,
												"id": 3128,
												"nodeType": "Return",
												"src": "5904:30:12"
											}
										]
									},
									"documentation": {
										"id": 3113,
										"nodeType": "StructuredDocumentation",
										"src": "5654:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5827:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5850:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "5831:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3114,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "5831:10:12"
													},
													"referencedDeclaration": 3112,
													"src": "5831:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5863:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "5855:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:39:12"
									},
									"returnParameters": {
										"id": 3122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "5888:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5888:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:6:12"
									},
									"scope": 3506,
									"src": "5818:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3147,
										"nodeType": "Block",
										"src": "6188:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3142,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3134,
																"src": "6213:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3111,
															"src": "6213:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3136,
															"src": "6225:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3141,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "6205:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3140,
												"id": 3146,
												"nodeType": "Return",
												"src": "6198:33:12"
											}
										]
									},
									"documentation": {
										"id": 3131,
										"nodeType": "StructuredDocumentation",
										"src": "5947:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6118:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6144:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "6125:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3132,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "6125:10:12"
													},
													"referencedDeclaration": 3112,
													"src": "6125:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6157:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "6149:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:39:12"
									},
									"returnParameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "6182:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6182:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:6:12"
									},
									"scope": 3506,
									"src": "6109:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3165,
										"nodeType": "Block",
										"src": "6405:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3160,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3152,
																"src": "6432:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3161,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3111,
															"src": "6432:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3162,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "6444:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3159,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "6422:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6422:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3158,
												"id": 3164,
												"nodeType": "Return",
												"src": "6415:35:12"
											}
										]
									},
									"documentation": {
										"id": 3149,
										"nodeType": "StructuredDocumentation",
										"src": "6244:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6328:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6356:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "6337:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3150,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "6337:10:12"
													},
													"referencedDeclaration": 3112,
													"src": "6337:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6369:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "6361:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6361:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:39:12"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "6399:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:12"
									},
									"scope": 3506,
									"src": "6319:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "6610:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3176,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3170,
																"src": "6635:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3177,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3111,
															"src": "6635:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3175,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "6627:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3174,
												"id": 3179,
												"nodeType": "Return",
												"src": "6620:26:12"
											}
										]
									},
									"documentation": {
										"id": 3167,
										"nodeType": "StructuredDocumentation",
										"src": "6463:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6547:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6573:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "6554:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3168,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "6554:10:12"
													},
													"referencedDeclaration": 3112,
													"src": "6554:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:24:12"
									},
									"returnParameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "6601:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:9:12"
									},
									"scope": 3506,
									"src": "6538:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "7078:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3193,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3185,
																"src": "7099:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3194,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3111,
															"src": "7099:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3195,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "7111:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3192,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3094,
														"src": "7095:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3191,
												"id": 3197,
												"nodeType": "Return",
												"src": "7088:29:12"
											}
										]
									},
									"documentation": {
										"id": 3182,
										"nodeType": "StructuredDocumentation",
										"src": "6659:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7004:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7026:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "7007:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3183,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "7007:10:12"
													},
													"referencedDeclaration": 3112,
													"src": "7007:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7039:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "7031:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:39:12"
									},
									"returnParameters": {
										"id": 3191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "7069:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:9:12"
									},
									"scope": 3506,
									"src": "6995:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3214,
										"nodeType": "Block",
										"src": "7745:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3210,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "7770:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3111,
															"src": "7770:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3209,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "7762:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7762:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 3208,
												"id": 3213,
												"nodeType": "Return",
												"src": "7755:26:12"
											}
										]
									},
									"documentation": {
										"id": 3200,
										"nodeType": "StructuredDocumentation",
										"src": "7130:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7673:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7699:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "7680:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3201,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "7680:10:12"
													},
													"referencedDeclaration": 3112,
													"src": "7680:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3112_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:24:12"
									},
									"returnParameters": {
										"id": 3208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "7727:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3205,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7727:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3206,
													"nodeType": "ArrayTypeName",
													"src": "7727:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:18:12"
									},
									"scope": 3506,
									"src": "7664:124:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 3219,
									"members": [
										{
											"constant": false,
											"id": 3218,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7845:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 3219,
											"src": "7841:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3217,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3216,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2918,
													"src": "7841:3:12"
												},
												"referencedDeclaration": 2918,
												"src": "7841:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7820:10:12",
									"nodeType": "StructDefinition",
									"scope": 3506,
									"src": "7813:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3245,
										"nodeType": "Block",
										"src": "8104:74:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3231,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3223,
																"src": "8126:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3232,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3218,
															"src": "8126:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3239,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3225,
																					"src": "8162:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8154:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3237,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8154:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8154:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8146:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3235,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8146:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8146:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8138:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3233,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8138:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8138:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3230,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "8121:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8121:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3229,
												"id": 3244,
												"nodeType": "Return",
												"src": "8114:57:12"
											}
										]
									},
									"documentation": {
										"id": 3220,
										"nodeType": "StructuredDocumentation",
										"src": "7864:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8037:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8060:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "8041:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3221,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3219,
														"src": "8041:10:12"
													},
													"referencedDeclaration": 3219,
													"src": "8041:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8073:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "8065:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8065:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8040:39:12"
									},
									"returnParameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "8098:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8098:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8097:6:12"
									},
									"scope": 3506,
									"src": "8028:150:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3272,
										"nodeType": "Block",
										"src": "8425:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3258,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3250,
																"src": "8450:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3259,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3218,
															"src": "8450:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3266,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3252,
																					"src": "8486:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8478:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3264,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8478:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8478:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8470:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3262,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8470:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8470:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3260,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3257,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "8442:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8442:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3256,
												"id": 3271,
												"nodeType": "Return",
												"src": "8435:60:12"
											}
										]
									},
									"documentation": {
										"id": 3247,
										"nodeType": "StructuredDocumentation",
										"src": "8184:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8355:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8381:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "8362:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3248,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3219,
														"src": "8362:10:12"
													},
													"referencedDeclaration": 3219,
													"src": "8362:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8394:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "8386:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8361:39:12"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "8419:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:12"
									},
									"scope": 3506,
									"src": "8346:156:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "8669:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3285,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3277,
																"src": "8696:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3286,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3218,
															"src": "8696:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3293,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3279,
																					"src": "8732:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3291,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8716:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3289,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8716:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8716:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8708:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3287,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8708:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8708:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3284,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "8686:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3283,
												"id": 3298,
												"nodeType": "Return",
												"src": "8679:62:12"
											}
										]
									},
									"documentation": {
										"id": 3274,
										"nodeType": "StructuredDocumentation",
										"src": "8508:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8592:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8620:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "8601:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3275,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3219,
														"src": "8601:10:12"
													},
													"referencedDeclaration": 3219,
													"src": "8601:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "8625:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:39:12"
									},
									"returnParameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "8663:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8663:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:6:12"
									},
									"scope": 3506,
									"src": "8583:165:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3314,
										"nodeType": "Block",
										"src": "8901:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3310,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3304,
																"src": "8926:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3218,
															"src": "8926:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3309,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "8918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3308,
												"id": 3313,
												"nodeType": "Return",
												"src": "8911:26:12"
											}
										]
									},
									"documentation": {
										"id": 3301,
										"nodeType": "StructuredDocumentation",
										"src": "8754:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8838:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8864:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "8845:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3303,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3302,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3219,
														"src": "8845:10:12"
													},
													"referencedDeclaration": 3219,
													"src": "8845:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:24:12"
									},
									"returnParameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "8892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8891:9:12"
									},
									"scope": 3506,
									"src": "8829:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3341,
										"nodeType": "Block",
										"src": "9369:73:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3333,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3319,
																						"src": "9414:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 3334,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3218,
																					"src": "9414:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2918_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 3335,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3321,
																					"src": "9426:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$2918_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3332,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3094,
																				"src": "9410:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 3336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9410:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9402:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3330,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9402:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9402:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9394:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 3328,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9394:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9394:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 3327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9386:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3326,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9386:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3325,
												"id": 3340,
												"nodeType": "Return",
												"src": "9379:56:12"
											}
										]
									},
									"documentation": {
										"id": 3316,
										"nodeType": "StructuredDocumentation",
										"src": "8950:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9295:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9317:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "9298:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3317,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3219,
														"src": "9298:10:12"
													},
													"referencedDeclaration": 3219,
													"src": "9298:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9330:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "9322:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:39:12"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "9360:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9360:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9359:9:12"
									},
									"scope": 3506,
									"src": "9286:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3371,
										"nodeType": "Block",
										"src": "10063:219:12",
										"statements": [
											{
												"assignments": [
													3356
												],
												"declarations": [
													{
														"constant": false,
														"id": 3356,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10090:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 3371,
														"src": "10073:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3354,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10073:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3355,
															"nodeType": "ArrayTypeName",
															"src": "10073:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3361,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3358,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "10106:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3218,
															"src": "10106:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3357,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "10098:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10073:44:12"
											},
											{
												"assignments": [
													3366
												],
												"declarations": [
													{
														"constant": false,
														"id": 3366,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10144:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3371,
														"src": "10127:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3364,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10127:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3365,
															"nodeType": "ArrayTypeName",
															"src": "10127:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3367,
												"nodeType": "VariableDeclarationStatement",
												"src": "10127:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10213:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10237:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3366,
														"isOffset": false,
														"isSlot": false,
														"src": "10227:6:12",
														"valueSize": 1
													},
													{
														"declaration": 3356,
														"isOffset": false,
														"isSlot": false,
														"src": "10237:5:12",
														"valueSize": 1
													}
												],
												"id": 3368,
												"nodeType": "InlineAssembly",
												"src": "10204:48:12"
											},
											{
												"expression": {
													"id": 3369,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3366,
													"src": "10269:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 3351,
												"id": 3370,
												"nodeType": "Return",
												"src": "10262:13:12"
											}
										]
									},
									"documentation": {
										"id": 3343,
										"nodeType": "StructuredDocumentation",
										"src": "9448:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9991:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3346,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10017:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3372,
												"src": "9998:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3344,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3219,
														"src": "9998:10:12"
													},
													"referencedDeclaration": 3219,
													"src": "9998:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3219_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9997:24:12"
									},
									"returnParameters": {
										"id": 3351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3372,
												"src": "10045:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3348,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10045:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3349,
													"nodeType": "ArrayTypeName",
													"src": "10045:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10044:18:12"
									},
									"scope": 3506,
									"src": "9982:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 3376,
									"members": [
										{
											"constant": false,
											"id": 3375,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10333:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 3376,
											"src": "10329:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3374,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3373,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2918,
													"src": "10329:3:12"
												},
												"referencedDeclaration": 2918,
												"src": "10329:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2918_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10311:7:12",
									"nodeType": "StructDefinition",
									"scope": 3506,
									"src": "10304:42:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3396,
										"nodeType": "Block",
										"src": "10589:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3388,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3380,
																"src": "10611:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3389,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3375,
															"src": "10611:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3382,
																	"src": "10631:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10623:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3390,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10623:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10623:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3387,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "10606:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10606:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3386,
												"id": 3395,
												"nodeType": "Return",
												"src": "10599:39:12"
											}
										]
									},
									"documentation": {
										"id": 3377,
										"nodeType": "StructuredDocumentation",
										"src": "10352:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10525:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10545:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "10529:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3378,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3376,
														"src": "10529:7:12"
													},
													"referencedDeclaration": 3376,
													"src": "10529:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10558:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "10550:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:36:12"
									},
									"returnParameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "10583:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10583:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:6:12"
									},
									"scope": 3506,
									"src": "10516:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3417,
										"nodeType": "Block",
										"src": "10889:59:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3409,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3401,
																"src": "10914:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3410,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3375,
															"src": "10914:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3413,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3403,
																	"src": "10934:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10926:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3411,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10926:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10926:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3408,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "10906:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10906:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3407,
												"id": 3416,
												"nodeType": "Return",
												"src": "10899:42:12"
											}
										]
									},
									"documentation": {
										"id": 3398,
										"nodeType": "StructuredDocumentation",
										"src": "10651:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10822:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3401,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10845:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "10829:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3399,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3376,
														"src": "10829:7:12"
													},
													"referencedDeclaration": 3376,
													"src": "10829:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10858:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "10850:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10850:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10828:36:12"
									},
									"returnParameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "10883:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10883:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10882:6:12"
									},
									"scope": 3506,
									"src": "10813:135:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3438,
										"nodeType": "Block",
										"src": "11112:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3430,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3422,
																"src": "11139:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3431,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3375,
															"src": "11139:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "11159:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11151:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3432,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11151:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11151:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3429,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "11129:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3428,
												"id": 3437,
												"nodeType": "Return",
												"src": "11122:44:12"
											}
										]
									},
									"documentation": {
										"id": 3419,
										"nodeType": "StructuredDocumentation",
										"src": "10954:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11038:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3422,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11063:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "11047:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3420,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3376,
														"src": "11047:7:12"
													},
													"referencedDeclaration": 3376,
													"src": "11047:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11076:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "11068:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11068:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11046:36:12"
									},
									"returnParameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "11106:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11106:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:6:12"
									},
									"scope": 3506,
									"src": "11029:144:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3453,
										"nodeType": "Block",
										"src": "11323:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3449,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3443,
																"src": "11348:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3450,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3375,
															"src": "11348:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3448,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "11340:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11340:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3447,
												"id": 3452,
												"nodeType": "Return",
												"src": "11333:26:12"
											}
										]
									},
									"documentation": {
										"id": 3440,
										"nodeType": "StructuredDocumentation",
										"src": "11179:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 3454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11263:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3443,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11286:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "11270:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3441,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3376,
														"src": "11270:7:12"
													},
													"referencedDeclaration": 3376,
													"src": "11270:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11269:21:12"
									},
									"returnParameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "11314:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:9:12"
									},
									"scope": 3506,
									"src": "11254:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3474,
										"nodeType": "Block",
										"src": "11788:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3468,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3458,
																		"src": "11817:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 3469,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3375,
																	"src": "11817:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2918_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 3470,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3460,
																	"src": "11829:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2918_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3467,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3094,
																"src": "11813:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 3471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11805:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11805:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3464,
												"id": 3473,
												"nodeType": "Return",
												"src": "11798:38:12"
											}
										]
									},
									"documentation": {
										"id": 3455,
										"nodeType": "StructuredDocumentation",
										"src": "11372:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11717:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11736:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "11720:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3456,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3376,
														"src": "11720:7:12"
													},
													"referencedDeclaration": 3376,
													"src": "11720:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11749:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "11741:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11719:36:12"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "11779:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11778:9:12"
									},
									"scope": 3506,
									"src": "11708:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3504,
										"nodeType": "Block",
										"src": "12461:219:12",
										"statements": [
											{
												"assignments": [
													3489
												],
												"declarations": [
													{
														"constant": false,
														"id": 3489,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12488:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 3504,
														"src": "12471:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3487,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12471:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3488,
															"nodeType": "ArrayTypeName",
															"src": "12471:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3494,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3491,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3479,
																"src": "12504:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3492,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3375,
															"src": "12504:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2918_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3490,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "12496:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2918_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12496:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12471:44:12"
											},
											{
												"assignments": [
													3499
												],
												"declarations": [
													{
														"constant": false,
														"id": 3499,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12542:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3504,
														"src": "12525:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3497,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12525:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3498,
															"nodeType": "ArrayTypeName",
															"src": "12525:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3500,
												"nodeType": "VariableDeclarationStatement",
												"src": "12525:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12611:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12625:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12635:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3499,
														"isOffset": false,
														"isSlot": false,
														"src": "12625:6:12",
														"valueSize": 1
													},
													{
														"declaration": 3489,
														"isOffset": false,
														"isSlot": false,
														"src": "12635:5:12",
														"valueSize": 1
													}
												],
												"id": 3501,
												"nodeType": "InlineAssembly",
												"src": "12602:48:12"
											},
											{
												"expression": {
													"id": 3502,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3499,
													"src": "12667:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3484,
												"id": 3503,
												"nodeType": "Return",
												"src": "12660:13:12"
											}
										]
									},
									"documentation": {
										"id": 3476,
										"nodeType": "StructuredDocumentation",
										"src": "11849:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12392:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12415:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3505,
												"src": "12399:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3477,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3376,
														"src": "12399:7:12"
													},
													"referencedDeclaration": 3376,
													"src": "12399:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3376_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:21:12"
									},
									"returnParameters": {
										"id": 3484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3505,
												"src": "12443:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3481,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12443:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3482,
													"nodeType": "ArrayTypeName",
													"src": "12443:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12442:18:12"
									},
									"scope": 3506,
									"src": "12383:297:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3507,
							"src": "1228:11454:12",
							"usedErrors": []
						}
					],
					"src": "115:12568:12"
				},
				"id": 12
			},
			"source/BinanceBABT/contracts/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Initializable.sol",
					"exportedSymbols": {
						"Address": [
							1689
						],
						"Initializable": [
							3657
						]
					},
					"id": 3658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:13"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Address.sol",
							"file": "./Address.sol",
							"id": 3509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3658,
							"sourceUnit": 1690,
							"src": "138:23:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3510,
								"nodeType": "StructuredDocumentation",
								"src": "163:2198:13",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 3657,
							"linearizedBaseContracts": [
								3657
							],
							"name": "Initializable",
							"nameLocation": "2380:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3511,
										"nodeType": "StructuredDocumentation",
										"src": "2400:109:13",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 3513,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2528:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 3657,
									"src": "2514:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3512,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2514:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3514,
										"nodeType": "StructuredDocumentation",
										"src": "2547:91:13",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 3516,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2656:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3657,
									"src": "2643:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3515,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2643:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3517,
										"nodeType": "StructuredDocumentation",
										"src": "2676:90:13",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 3521,
									"name": "Initialized",
									"nameLocation": "2777:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3519,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2795:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "2789:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3518,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2789:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:15:13"
									},
									"src": "2771:33:13"
								},
								{
									"body": {
										"id": 3576,
										"nodeType": "Block",
										"src": "3080:472:13",
										"statements": [
											{
												"assignments": [
													3525
												],
												"declarations": [
													{
														"constant": false,
														"id": 3525,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3095:14:13",
														"nodeType": "VariableDeclaration",
														"scope": 3576,
														"src": "3090:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3524,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3090:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3528,
												"initialValue": {
													"id": 3527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3112:14:13",
													"subExpression": {
														"id": 3526,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3516,
														"src": "3113:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3090:36:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3530,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3525,
																			"src": "3158:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3531,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3513,
																				"src": "3176:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3191:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3176:16:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3158:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3535,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3157:36:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3198:34:13",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 3540,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3226:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$3657",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$3657",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 3539,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3218:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 3538,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3218:7:13",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3218:13:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 3536,
																						"name": "Address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1689,
																						"src": "3199:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Address_$1689_$",
																							"typeString": "type(library Address)"
																						}
																					},
																					"id": 3537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1377,
																					"src": "3199:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 3542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3199:33:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3544,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3513,
																				"src": "3236:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3252:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3236:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3198:55:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3197:57:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3157:97:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3268:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 3529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3136:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:190:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3552,
												"nodeType": "ExpressionStatement",
												"src": "3136:190:13"
											},
											{
												"expression": {
													"id": 3555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3553,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "3336:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3351:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3336:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 3556,
												"nodeType": "ExpressionStatement",
												"src": "3336:16:13"
											},
											{
												"condition": {
													"id": 3557,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3525,
													"src": "3366:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3563,
												"nodeType": "IfStatement",
												"src": "3362:65:13",
												"trueBody": {
													"id": 3562,
													"nodeType": "Block",
													"src": "3382:45:13",
													"statements": [
														{
															"expression": {
																"id": 3560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3558,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3516,
																	"src": "3396:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3412:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3396:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3561,
															"nodeType": "ExpressionStatement",
															"src": "3396:20:13"
														}
													]
												}
											},
											{
												"id": 3564,
												"nodeType": "PlaceholderStatement",
												"src": "3436:1:13"
											},
											{
												"condition": {
													"id": 3565,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3525,
													"src": "3451:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3575,
												"nodeType": "IfStatement",
												"src": "3447:99:13",
												"trueBody": {
													"id": 3574,
													"nodeType": "Block",
													"src": "3467:79:13",
													"statements": [
														{
															"expression": {
																"id": 3568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3566,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3516,
																	"src": "3481:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 3567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3481:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3569,
															"nodeType": "ExpressionStatement",
															"src": "3481:21:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 3571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3533:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 3570,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3521,
																	"src": "3521:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 3572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3521:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3573,
															"nodeType": "EmitStatement",
															"src": "3516:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3522,
										"nodeType": "StructuredDocumentation",
										"src": "2810:242:13",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 3577,
									"name": "initializer",
									"nameLocation": "3066:11:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3077:2:13"
									},
									"src": "3057:495:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3609,
										"nodeType": "Block",
										"src": "4367:255:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4385:14:13",
																"subExpression": {
																	"id": 3583,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3516,
																	"src": "4386:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3585,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3513,
																	"src": "4403:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3586,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3580,
																	"src": "4418:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4403:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4385:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 3589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4427:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 3582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4377:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4377:99:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3591,
												"nodeType": "ExpressionStatement",
												"src": "4377:99:13"
											},
											{
												"expression": {
													"id": 3594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3592,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "4486:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3593,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3580,
														"src": "4501:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4486:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 3595,
												"nodeType": "ExpressionStatement",
												"src": "4486:22:13"
											},
											{
												"expression": {
													"id": 3598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3596,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3516,
														"src": "4518:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4534:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4518:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3599,
												"nodeType": "ExpressionStatement",
												"src": "4518:20:13"
											},
											{
												"id": 3600,
												"nodeType": "PlaceholderStatement",
												"src": "4548:1:13"
											},
											{
												"expression": {
													"id": 3603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3601,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3516,
														"src": "4559:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4575:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4559:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3604,
												"nodeType": "ExpressionStatement",
												"src": "4559:21:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3606,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3580,
															"src": "4607:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 3605,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3521,
														"src": "4595:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3608,
												"nodeType": "EmitStatement",
												"src": "4590:25:13"
											}
										]
									},
									"documentation": {
										"id": 3578,
										"nodeType": "StructuredDocumentation",
										"src": "3558:766:13",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 3610,
									"name": "reinitializer",
									"nameLocation": "4338:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3580,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4358:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "4352:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4352:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:15:13"
									},
									"src": "4329:293:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3619,
										"nodeType": "Block",
										"src": "4860:97:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3614,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3516,
															"src": "4878:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 3615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4893:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 3613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3617,
												"nodeType": "ExpressionStatement",
												"src": "4870:69:13"
											},
											{
												"id": 3618,
												"nodeType": "PlaceholderStatement",
												"src": "4949:1:13"
											}
										]
									},
									"documentation": {
										"id": 3611,
										"nodeType": "StructuredDocumentation",
										"src": "4628:199:13",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 3620,
									"name": "onlyInitializing",
									"nameLocation": "4841:16:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4857:2:13"
									},
									"src": "4832:125:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3655,
										"nodeType": "Block",
										"src": "5405:230:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5423:14:13",
															"subExpression": {
																"id": 3625,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3516,
																"src": "5424:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 3627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5439:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 3624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5415:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5415:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3629,
												"nodeType": "ExpressionStatement",
												"src": "5415:66:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3630,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "5495:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5515:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3632,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5515:5:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3631,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5510:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5510:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5510:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5495:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3654,
												"nodeType": "IfStatement",
												"src": "5491:138:13",
												"trueBody": {
													"id": 3653,
													"nodeType": "Block",
													"src": "5527:102:13",
													"statements": [
														{
															"expression": {
																"id": 3643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3637,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3513,
																	"src": "5541:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 3640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5561:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3639,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5561:5:13",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 3638,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5556:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 3641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5556:11:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 3642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5556:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5541:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 3644,
															"nodeType": "ExpressionStatement",
															"src": "5541:30:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5607:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 3647,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5607:5:13",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 3646,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5602:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5602:11:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 3650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5602:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 3645,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3521,
																	"src": "5590:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 3651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:28:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3652,
															"nodeType": "EmitStatement",
															"src": "5585:33:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3621,
										"nodeType": "StructuredDocumentation",
										"src": "4963:388:13",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 3656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5365:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5385:2:13"
									},
									"returnParameters": {
										"id": 3623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5405:0:13"
									},
									"scope": 3657,
									"src": "5356:279:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3658,
							"src": "2362:3275:13",
							"usedErrors": []
						}
					],
					"src": "113:5525:13"
				},
				"id": 13
			},
			"source/BinanceBABT/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							3883
						]
					},
					"id": 3884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3660,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 3883,
							"linearizedBaseContracts": [
								3883
							],
							"name": "Strings",
							"nameLocation": "169:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3663,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3883,
									"src": "183:58:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 3661,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 3662,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3666,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3883,
									"src": "247:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3664,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 3665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3744,
										"nodeType": "Block",
										"src": "463:632:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3674,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "665:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3680,
												"nodeType": "IfStatement",
												"src": "661:51:14",
												"trueBody": {
													"id": 3679,
													"nodeType": "Block",
													"src": "677:35:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 3673,
															"id": 3678,
															"nodeType": "Return",
															"src": "691:10:14"
														}
													]
												}
											},
											{
												"assignments": [
													3682
												],
												"declarations": [
													{
														"constant": false,
														"id": 3682,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3744,
														"src": "721:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3684,
												"initialValue": {
													"id": 3683,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3669,
													"src": "736:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:14"
											},
											{
												"assignments": [
													3686
												],
												"declarations": [
													{
														"constant": false,
														"id": 3686,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3744,
														"src": "751:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3687,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:14"
											},
											{
												"body": {
													"id": 3698,
													"nodeType": "Block",
													"src": "793:57:14",
													"statements": [
														{
															"expression": {
																"id": 3692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:14",
																"subExpression": {
																	"id": 3691,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3686,
																	"src": "807:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3693,
															"nodeType": "ExpressionStatement",
															"src": "807:8:14"
														},
														{
															"expression": {
																"id": 3696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3694,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3682,
																	"src": "829:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 3695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3697,
															"nodeType": "ExpressionStatement",
															"src": "829:10:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3688,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3682,
														"src": "782:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3699,
												"nodeType": "WhileStatement",
												"src": "775:75:14"
											},
											{
												"assignments": [
													3701
												],
												"declarations": [
													{
														"constant": false,
														"id": 3701,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3744,
														"src": "859:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3700,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3706,
												"initialValue": {
													"arguments": [
														{
															"id": 3704,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3686,
															"src": "891:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3702,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:14"
											},
											{
												"body": {
													"id": 3737,
													"nodeType": "Block",
													"src": "927:131:14",
													"statements": [
														{
															"expression": {
																"id": 3712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3710,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3686,
																	"src": "941:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3713,
															"nodeType": "ExpressionStatement",
															"src": "941:11:14"
														},
														{
															"expression": {
																"id": 3731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3714,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3701,
																		"src": "966:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3716,
																	"indexExpression": {
																		"id": 3715,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3686,
																		"src": "973:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 3721,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3726,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3724,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3669,
																									"src": "1009:5:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 3725,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3723,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 3722,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3727,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3719,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 3718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 3717,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3732,
															"nodeType": "ExpressionStatement",
															"src": "966:56:14"
														},
														{
															"expression": {
																"id": 3735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3733,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3669,
																	"src": "1036:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 3734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3736,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3707,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "915:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3738,
												"nodeType": "WhileStatement",
												"src": "908:150:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3741,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3701,
															"src": "1081:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3739,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 3742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3673,
												"id": 3743,
												"nodeType": "Return",
												"src": "1067:21:14"
											}
										]
									},
									"documentation": {
										"id": 3667,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 3745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3745,
												"src": "410:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:14"
									},
									"returnParameters": {
										"id": 3673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3745,
												"src": "448:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:14"
									},
									"scope": 3883,
									"src": "392:703:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3785,
										"nodeType": "Block",
										"src": "1274:255:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3753,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3748,
														"src": "1288:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3759,
												"nodeType": "IfStatement",
												"src": "1284:54:14",
												"trueBody": {
													"id": 3758,
													"nodeType": "Block",
													"src": "1300:38:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 3756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 3752,
															"id": 3757,
															"nodeType": "Return",
															"src": "1314:13:14"
														}
													]
												}
											},
											{
												"assignments": [
													3761
												],
												"declarations": [
													{
														"constant": false,
														"id": 3761,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3785,
														"src": "1347:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3763,
												"initialValue": {
													"id": 3762,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3748,
													"src": "1362:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:14"
											},
											{
												"assignments": [
													3765
												],
												"declarations": [
													{
														"constant": false,
														"id": 3765,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3785,
														"src": "1377:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3767,
												"initialValue": {
													"hexValue": "30",
													"id": 3766,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:14"
											},
											{
												"body": {
													"id": 3778,
													"nodeType": "Block",
													"src": "1423:57:14",
													"statements": [
														{
															"expression": {
																"id": 3772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:14",
																"subExpression": {
																	"id": 3771,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3765,
																	"src": "1437:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3773,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:14"
														},
														{
															"expression": {
																"id": 3776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3774,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3761,
																	"src": "1459:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 3775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3777,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3768,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3761,
														"src": "1412:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3779,
												"nodeType": "WhileStatement",
												"src": "1405:75:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3781,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3748,
															"src": "1508:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3782,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3765,
															"src": "1515:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3780,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3786,
															3862,
															3882
														],
														"referencedDeclaration": 3862,
														"src": "1496:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3752,
												"id": 3784,
												"nodeType": "Return",
												"src": "1489:33:14"
											}
										]
									},
									"documentation": {
										"id": 3746,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 3786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3786,
												"src": "1221:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:14"
									},
									"returnParameters": {
										"id": 3752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3786,
												"src": "1259:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3750,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:14"
									},
									"scope": 3883,
									"src": "1200:329:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3861,
										"nodeType": "Block",
										"src": "1742:351:14",
										"statements": [
											{
												"assignments": [
													3797
												],
												"declarations": [
													{
														"constant": false,
														"id": 3797,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3861,
														"src": "1752:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3796,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3806,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3801,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3791,
																	"src": "1788:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 3803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3798,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:14"
											},
											{
												"expression": {
													"id": 3811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3807,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3797,
															"src": "1809:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3809,
														"indexExpression": {
															"hexValue": "30",
															"id": 3808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3812,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:14"
											},
											{
												"expression": {
													"id": 3817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3813,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3797,
															"src": "1834:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3815,
														"indexExpression": {
															"hexValue": "31",
															"id": 3814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 3816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3818,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:14"
											},
											{
												"body": {
													"id": 3847,
													"nodeType": "Block",
													"src": "1904:87:14",
													"statements": [
														{
															"expression": {
																"id": 3841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3833,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3797,
																		"src": "1918:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3835,
																	"indexExpression": {
																		"id": 3834,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3820,
																		"src": "1925:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3836,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3663,
																		"src": "1930:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3840,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3837,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3789,
																			"src": "1943:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 3838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3842,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:14"
														},
														{
															"expression": {
																"id": 3845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3843,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3789,
																	"src": "1969:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 3844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3846,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3827,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3820,
														"src": "1892:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 3828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3848,
												"initializationExpression": {
													"assignments": [
														3820
													],
													"declarations": [
														{
															"constant": false,
															"id": 3820,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3848,
															"src": "1864:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3819,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3826,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 3821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3822,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3791,
																"src": "1880:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:14"
												},
												"loopExpression": {
													"expression": {
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:14",
														"subExpression": {
															"id": 3830,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3820,
															"src": "1901:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3832,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3850,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3789,
																"src": "2008:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 3853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 3849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3855,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3858,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3797,
															"src": "2079:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3856,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 3859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3795,
												"id": 3860,
												"nodeType": "Return",
												"src": "2065:21:14"
											}
										]
									},
									"documentation": {
										"id": 3787,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 3862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "1673:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3791,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "1688:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:14"
									},
									"returnParameters": {
										"id": 3795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "1727:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:14"
									},
									"scope": 3883,
									"src": "1652:441:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3881,
										"nodeType": "Block",
										"src": "2318:76:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3875,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3865,
																			"src": "2363:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3873,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3871,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3878,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3666,
															"src": "2371:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 3870,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3786,
															3862,
															3882
														],
														"referencedDeclaration": 3862,
														"src": "2335:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3869,
												"id": 3880,
												"nodeType": "Return",
												"src": "2328:59:14"
											}
										]
									},
									"documentation": {
										"id": 3863,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 3882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3865,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3882,
												"src": "2266:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:14"
									},
									"returnParameters": {
										"id": 3869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3882,
												"src": "2303:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:14"
									},
									"scope": 3883,
									"src": "2245:149:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3884,
							"src": "161:2235:14",
							"usedErrors": []
						}
					],
					"src": "101:2296:14"
				},
				"id": 14
			}
		}
	}
}